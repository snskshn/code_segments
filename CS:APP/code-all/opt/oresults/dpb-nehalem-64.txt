Double Product combine1: Maximum use of data abstraction:
12.08 cycles/element
Double Product combine2: Take vec_length() out of loop:
12.08 cycles/element
Double Product combine3: Array reference to vector data:
5.03 cycles/element
Double Product combine3v: Array reference to vector data. Volatile dest:
12.02 cycles/element
Double Product combine4: Array reference, accumulate in temporary:
5.00 cycles/element
Double Product combine4p: Pointer reference, accumulate in temporary:
5.00 cycles/element
Double Product unroll2a: Array code, unrolled by 2:
5.00 cycles/element
Double Product combine5p: Pointer code, unrolled by 3, for loop:
5.00 cycles/element
Double Product unroll3aw: Array code, unrolled by 3, while loop:
5.00 cycles/element
Double Product unroll4a: Array code, unrolled by 4:
5.00 cycles/element
Double Product unroll8a: Array code, unrolled by 8:
5.00 cycles/element
Double Product unroll16a: Array code, unrolled by 16:
5.00 cycles/element
Double Product unroll2: Pointer code, unrolled by 2:
5.00 cycles/element
Double Product unroll3: Pointer code, unrolled by 3:
5.00 cycles/element
Double Product unroll4: Pointer code, unrolled by 4:
5.00 cycles/element
Double Product unroll8: Pointer code, unrolled by 8:
5.00 cycles/element
Double Product unroll16: Pointer code, unrolled by 16:
5.00 cycles/element
Double Product combine6: Array code, unrolled by 2, Superscalar x2:
2.50 cycles/element
Double Product unroll4x2a: Array code, unrolled by 4, Superscalar x2:
2.50 cycles/element
Double Product unroll8x2a: Array code, unrolled by 8, Superscalar x2:
2.50 cycles/element
Double Product unroll3x3a: Array code, unrolled by 3, Superscalar x3:
1.67 cycles/element
Double Product unroll4x4a: Array code, unrolled by 4, Superscalar x4:
1.25 cycles/element
Double Product unroll8x4a: Array code, unrolled by 8, Superscalar x4:
1.26 cycles/element
Double Product unroll6x6a: Array code, unrolled by 6, Superscalar x6:
1.02 cycles/element
Double Product unroll8x8a: Array code, unrolled by 8, Superscalar x8:
1.02 cycles/element
Double Product unroll10x10a: Array code, unrolled by 10, Superscalar x10:
1.01 cycles/element
Double Product unroll2x6a: Array code, unrolled by 12, Superscalar x6:
1.00 cycles/element
Double Product unroll12x12a: Array code, unrolled by 12, Superscalar x12:
1.01 cycles/element
Double Product unroll8x2: Pointer code, unrolled by 8, Superscalar x2:
2.50 cycles/element
Double Product unroll8x4: Pointer code, unrolled by 8, Superscalar x4:
1.25 cycles/element
Double Product unroll8x8: Pointer code, unrolled by 8, Superscalar x8:
1.01 cycles/element
Double Product unroll9x3: Pointer code, unrolled by 9, Superscalar x3:
1.68 cycles/element
Double Product unrollx2as: Array code, Unroll x2, Superscalar x2, noninterleaved:
2.50 cycles/element
Double Product unroll2aa: Array code, unrolled by 2, different associativity:
2.50 cycles/element
Double Product unroll3aa: Array code, unrolled by 3, Different Associativity:
1.67 cycles/element
Double Product unroll4aa: Array code, unrolled by 4, Different Associativity:
1.25 cycles/element
Double Product unroll6aa: Array code, unrolled by 6, Different Associativity:
1.00 cycles/element
Double Product unroll8aa: Array code, unrolled by 8, Different Associativity:
1.00 cycles/element
Double Product unrollv1: SSE code, 1*VSIZE-way parallelism:
2.50 cycles/element
Double Product unrollv2: SSE code, 2*VSIZE-way parallelism:
1.25 cycles/element
Double Product unrollv4: SSE code, 4*VSIZE-way parallelism:
0.65 cycles/element
Double Product unrollv8: SSE code, 8*VSIZE-way parallelism:
0.49 cycles/element
Double Product unrollv12: SSE code, 12*VSIZE-way parallelism:
0.48 cycles/element
Double Product unrollv2a: SSE code, 2*VSIZE-way parallelism, reassociate:
1.25 cycles/element
Double Product unrollv4a: SSE code, 4*VSIZE-way parallelism, reassociate:
0.63 cycles/element
Double Product unrollv8a: SSE code, 8*VSIZE-way parallelism, reassociate:
0.48 cycles/element
