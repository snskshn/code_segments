Integer Sum combine1: Maximum use of data abstraction:
12.01 cycles/element
Integer Sum combine2: Take vec_length() out of loop:
8.04 cycles/element
Integer Sum combine3: Array reference to vector data:
3.00 cycles/element
Integer Sum combine3v: Array reference to vector data. Volatile dest:
6.02 cycles/element
Integer Sum combine4: Array reference, accumulate in temporary:
2.00 cycles/element
Integer Sum combine4p: Pointer reference, accumulate in temporary:
2.01 cycles/element
Integer Sum unroll2a: Array code, unrolled by 2:
1.50 cycles/element
Integer Sum combine5p: Pointer code, unrolled by 3, for loop:
1.00 cycles/element
Integer Sum unroll3aw: Array code, unrolled by 3, while loop:
1.00 cycles/element
Integer Sum unroll4a: Array code, unrolled by 4:
1.00 cycles/element
Integer Sum unroll8a: Array code, unrolled by 8:
1.03 cycles/element
Integer Sum unroll16a: Array code, unrolled by 16:
1.00 cycles/element
Integer Sum unroll2: Pointer code, unrolled by 2:
2.00 cycles/element
Integer Sum unroll3: Pointer code, unrolled by 3:
0.92 cycles/element
Integer Sum unroll4: Pointer code, unrolled by 4:
1.00 cycles/element
Integer Sum unroll8: Pointer code, unrolled by 8:
1.02 cycles/element
Integer Sum unroll16: Pointer code, unrolled by 16:
1.00 cycles/element
Integer Sum combine6: Array code, unrolled by 2, Superscalar x2:
1.50 cycles/element
Integer Sum unroll4x2a: Array code, unrolled by 4, Superscalar x2:
1.00 cycles/element
Integer Sum unroll8x2a: Array code, unrolled by 8, Superscalar x2:
1.00 cycles/element
Integer Sum unroll3x3a: Array code, unrolled by 3, Superscalar x3:
1.00 cycles/element
Integer Sum unroll4x4a: Array code, unrolled by 4, Superscalar x4:
1.00 cycles/element
Integer Sum unroll8x4a: Array code, unrolled by 8, Superscalar x4:
0.99 cycles/element
Integer Sum unroll6x6a: Array code, unrolled by 6, Superscalar x6:
1.02 cycles/element
Integer Sum unroll8x8a: Array code, unrolled by 8, Superscalar x8:
1.04 cycles/element
Integer Sum unroll10x10a: Array code, unrolled by 10, Superscalar x10:
1.01 cycles/element
Integer Sum unroll2x6a: Array code, unrolled by 12, Superscalar x6:
1.01 cycles/element
Integer Sum unroll12x12a: Array code, unrolled by 12, Superscalar x12:
1.08 cycles/element
Integer Sum unroll8x2: Pointer code, unrolled by 8, Superscalar x2:
1.02 cycles/element
Integer Sum unroll8x4: Pointer code, unrolled by 8, Superscalar x4:
1.01 cycles/element
Integer Sum unroll8x8: Pointer code, unrolled by 8, Superscalar x8:
1.01 cycles/element
Integer Sum unroll9x3: Pointer code, unrolled by 9, Superscalar x3:
1.03 cycles/element
Integer Sum unrollx2as: Array code, Unroll x2, Superscalar x2, noninterleaved:
1.50 cycles/element
Integer Sum unroll2aa: Array code, unrolled by 2, different associativity:
1.50 cycles/element
Integer Sum unroll3aa: Array code, unrolled by 3, Different Associativity:
1.00 cycles/element
Integer Sum unroll4aa: Array code, unrolled by 4, Different Associativity:
1.00 cycles/element
Integer Sum unroll6aa: Array code, unrolled by 6, Different Associativity:
0.98 cycles/element
Integer Sum unroll8aa: Array code, unrolled by 8, Different Associativity:
1.03 cycles/element
Integer Sum unrollv1: SSE code, 1*VSIZE-way parallelism:
0.50 cycles/element
Integer Sum unrollv2: SSE code, 2*VSIZE-way parallelism:
0.23 cycles/element
Integer Sum unrollv4: SSE code, 4*VSIZE-way parallelism:
0.25 cycles/element
Integer Sum unrollv8: SSE code, 8*VSIZE-way parallelism:
0.25 cycles/element
Integer Sum unrollv12: SSE code, 12*VSIZE-way parallelism:
0.27 cycles/element
Integer Sum unrollv2a: SSE code, 2*VSIZE-way parallelism, reassociate:
0.50 cycles/element
Integer Sum unrollv4a: SSE code, 4*VSIZE-way parallelism, reassociate:
0.25 cycles/element
Integer Sum unrollv8a: SSE code, 8*VSIZE-way parallelism, reassociate:
0.25 cycles/element
