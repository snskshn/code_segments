Char Product combine1: Maximum use of data abstraction:
12.00 cycles/element
Char Product combine2: Take vec_length() out of loop:
8.00 cycles/element
Char Product combine3: Array reference to vector data:
3.02 cycles/element
Char Product combine4: Array reference, accumulate in temporary:
3.00 cycles/element
Char Product combine4p: Pointer reference, accumulate in temporary:
7.00 cycles/element
Char Product unroll2a: Array code, unrolled by 2:
4.00 cycles/element
Char Product combine5p: Pointer code, unrolled by 3, for loop:
2.33 cycles/element
Char Product unroll3aw: Array code, unrolled by 3, while loop:
3.00 cycles/element
Char Product unroll4a: Array code, unrolled by 4:
3.50 cycles/element
Char Product unroll8a: Array code, unrolled by 8:
3.25 cycles/element
Char Product unroll16a: Array code, unrolled by 16:
3.12 cycles/element
Char Product unroll2: Pointer code, unrolled by 2:
3.00 cycles/element
Char Product unroll3: Pointer code, unrolled by 3:
2.00 cycles/element
Char Product unroll4: Pointer code, unrolled by 4:
1.50 cycles/element
Char Product unroll8: Pointer code, unrolled by 8:
0.99 cycles/element
Char Product unroll16: Pointer code, unrolled by 16:
1.05 cycles/element
Char Product combine6: Array code, unrolled by 2, Superscalar x2:
5.00 cycles/element
Char Product unroll4x2a: Array code, unrolled by 4, Superscalar x2:
2.50 cycles/element
Char Product unroll8x2a: Array code, unrolled by 8, Superscalar x2:
1.74 cycles/element
Char Product unroll3x3a: Array code, unrolled by 3, Superscalar x3:
4.67 cycles/element
Char Product unroll4x4a: Array code, unrolled by 4, Superscalar x4:
4.39 cycles/element
Char Product unroll8x4a: Array code, unrolled by 8, Superscalar x4:
2.47 cycles/element
Char Product unroll6x6a: Array code, unrolled by 6, Superscalar x6:
4.42 cycles/element
Char Product unroll8x8a: Array code, unrolled by 8, Superscalar x8:
4.35 cycles/element
Char Product unroll10x10a: Array code, unrolled by 10, Superscalar x10:
3.93 cycles/element
Char Product unroll2x6a: Array code, unrolled by 12, Superscalar x6:
2.21 cycles/element
Char Product unroll12x12a: Array code, unrolled by 12, Superscalar x12:
3.90 cycles/element
Char Product unroll8x2: Pointer code, unrolled by 8, Superscalar x2:
1.47 cycles/element
Char Product unroll8x4: Pointer code, unrolled by 8, Superscalar x4:
2.36 cycles/element
Char Product unroll8x8: Pointer code, unrolled by 8, Superscalar x8:
4.12 cycles/element
Char Product unroll9x3: Pointer code, unrolled by 9, Superscalar x3:
1.76 cycles/element
Char Product unrollx2as: Array code, Unroll x2, Superscalar x2, noninterleaved:
5.00 cycles/element
Char Product unroll2aa: Array code, unrolled by 2, different associativity:
4.00 cycles/element
Char Product unroll3aa: Array code, unrolled by 3, Different Associativity:
2.33 cycles/element
Char Product unroll4aa: Array code, unrolled by 4, Different Associativity:
2.00 cycles/element
Char Product unroll6aa: Array code, unrolled by 6, Different Associativity:
1.59 cycles/element
Char Product unroll8aa: Array code, unrolled by 8, Different Associativity:
1.71 cycles/element
Char Product unrollv1: SSE code, 1*VSIZE-way parallelism:
0.73 cycles/element
Char Product unrollv2: SSE code, 2*VSIZE-way parallelism:
0.59 cycles/element
Char Product unrollv4: SSE code, 4*VSIZE-way parallelism:
0.50 cycles/element
Char Product unrollv8: SSE code, 8*VSIZE-way parallelism:
0.34 cycles/element
Char Product unrollv12: SSE code, 12*VSIZE-way parallelism:
0.45 cycles/element
Char Product unrollv2a: SSE code, 2*VSIZE-way parallelism, reassociate:
0.60 cycles/element
Char Product unrollv4a: SSE code, 4*VSIZE-way parallelism, reassociate:
0.57 cycles/element
Char Product unrollv8a: SSE code, 8*VSIZE-way parallelism, reassociate:
0.42 cycles/element
