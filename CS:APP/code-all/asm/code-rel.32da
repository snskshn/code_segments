
code.32o:     file format elf32-i386

Disassembly of section .text:

/* $begin sum-rel-d 7 */
# Disassembly of function{\em sum} in binary file{\em code.o}
00000000 <sum>:
#Offset   Bytes                        Equivalent assembly language
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	8b 45 0c             	mov    0xc(%ebp),%eax
   6:	03 45 08             	add    0x8(%ebp),%eax
   9:	01 05 00 00 00 00    	add    %eax,0x0
   f:	5d                   	pop    %ebp
  10:	c3                   	ret    
/* $end sum-rel-d 7 */
  11:	eb 0d                	jmp    20 <p>
  13:	90                   	nop    
  14:	90                   	nop    
  15:	90                   	nop    
  16:	90                   	nop    
  17:	90                   	nop    
  18:	90                   	nop    
  19:	90                   	nop    
  1a:	90                   	nop    
  1b:	90                   	nop    
  1c:	90                   	nop    
  1d:	90                   	nop    
  1e:	90                   	nop    
  1f:	90                   	nop    

00000020 <p>:
  20:	55                   	push   %ebp
  21:	89 e5                	mov    %esp,%ebp
  23:	83 ec 08             	sub    $0x8,%esp
  26:	8b 45 08             	mov    0x8(%ebp),%eax
  29:	89 44 24 04          	mov    %eax,0x4(%esp)
  2d:	89 04 24             	mov    %eax,(%esp)
  30:	e8 fc ff ff ff       	call   31 <p+0x11>
  35:	c9                   	leave  
  36:	c3                   	ret    
