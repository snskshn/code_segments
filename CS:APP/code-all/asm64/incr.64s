	.file	"incr.c"
.globl gval2
	.data
	.align 8
	.type	gval2, @object
	.size	gval2, 8
gval2:
	.quad	763
.globl gval1
	.align 8
	.type	gval1, @object
	.size	gval1, 8
gval1:
	.quad	567
	.text
	.p2align 4,,15
.globl simple
	.type	simple, @function
simple:
.LFB26:
	addl	(%rdi), %esi
	movl	%esi, %eax
	movl	%esi, (%rdi)
	ret
.LFE26:
	.size	simple, .-simple
	.p2align 4,,15
.globl simple_l
	.type	simple_l, @function
simple_l:
.LFB27:
	addq	(%rdi), %rsi
	movq	%rsi, %rax
	movq	%rsi, (%rdi)
	ret
.LFE27:
	.size	simple_l, .-simple_l
	.p2align 4,,15
.globl call_simple
	.type	call_simple, @function
call_simple:
.LFB28:
	subq	$8, %rsp
.LCFI0:
	movl	$12, %esi
	leaq	4(%rsp), %rdi
	movl	$37, 4(%rsp)
	call	simple
	addl	4(%rsp), %eax
	addq	$8, %rsp
	ret
.LFE28:
	.size	call_simple, .-call_simple
	.p2align 4,,15
.globl call_simple_l
	.type	call_simple_l, @function
call_simple_l:
.LFB29:
	movl	$12, %esi
	movl	$gval1, %edi
	call	simple_l
	addq	gval2(%rip), %rax
	ret
.LFE29:
	.size	call_simple_l, .-call_simple_l
	.p2align 4,,15
.globl post_incr
	.type	post_incr, @function
post_incr:
.LFB30:
	movl	(%rdi), %eax
	leal	(%rax,%rsi), %esi
	movl	%esi, (%rdi)
	ret
.LFE30:
	.size	post_incr, .-post_incr
	.p2align 4,,15
.globl post_incr_l
	.type	post_incr_l, @function
post_incr_l:
.LFB31:
	movq	(%rdi), %rax
	leaq	(%rax,%rsi), %rsi
	movq	%rsi, (%rdi)
	ret
.LFE31:
	.size	post_incr_l, .-post_incr_l
	.p2align 4,,15
.globl main
	.type	main, @function
main:
.LFB33:
	pushq	%rbp
.LCFI1:
	xorl	%ebp, %ebp
	pushq	%rbx
.LCFI2:
	subq	$8, %rsp
.LCFI3:
	.p2align 4,,7
.L11:
	movslq	%ebp,%rbx
	incl	%ebp
	call	random
	cmpl	$511, %ebp
	movl	%eax, val(,%rbx,4)
	cltq
	movq	%rax, val_l(,%rbx,8)
	jle	.L11
	addq	$8, %rsp
	xorl	%eax, %eax
	popq	%rbx
	popq	%rbp
	ret
.LFE33:
	.size	main, .-main
	.comm	val,2048,32
	.comm	val_l,4096,32
	.section	.eh_frame,"a",@progbits
.Lframe1:
	.long	.LECIE1-.LSCIE1
.LSCIE1:
	.long	0x0
	.byte	0x1
	.string	""
	.uleb128 0x1
	.sleb128 -8
	.byte	0x10
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE1:
.LSFDE1:
	.long	.LEFDE1-.LASFDE1
.LASFDE1:
	.long	.LASFDE1-.Lframe1
	.quad	.LFB26
	.quad	.LFE26-.LFB26
	.align 8
.LEFDE1:
.LSFDE3:
	.long	.LEFDE3-.LASFDE3
.LASFDE3:
	.long	.LASFDE3-.Lframe1
	.quad	.LFB27
	.quad	.LFE27-.LFB27
	.align 8
.LEFDE3:
.LSFDE5:
	.long	.LEFDE5-.LASFDE5
.LASFDE5:
	.long	.LASFDE5-.Lframe1
	.quad	.LFB28
	.quad	.LFE28-.LFB28
	.byte	0x4
	.long	.LCFI0-.LFB28
	.byte	0xe
	.uleb128 0x10
	.align 8
.LEFDE5:
.LSFDE7:
	.long	.LEFDE7-.LASFDE7
.LASFDE7:
	.long	.LASFDE7-.Lframe1
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.align 8
.LEFDE7:
.LSFDE9:
	.long	.LEFDE9-.LASFDE9
.LASFDE9:
	.long	.LASFDE9-.Lframe1
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.align 8
.LEFDE9:
.LSFDE11:
	.long	.LEFDE11-.LASFDE11
.LASFDE11:
	.long	.LASFDE11-.Lframe1
	.quad	.LFB31
	.quad	.LFE31-.LFB31
	.align 8
.LEFDE11:
.LSFDE13:
	.long	.LEFDE13-.LASFDE13
.LASFDE13:
	.long	.LASFDE13-.Lframe1
	.quad	.LFB33
	.quad	.LFE33-.LFB33
	.byte	0x4
	.long	.LCFI1-.LFB33
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI2-.LCFI1
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.long	.LCFI3-.LCFI2
	.byte	0xe
	.uleb128 0x20
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE13:
	.section	.note.GNU-stack,"",@progbits
	.ident	"GCC: (GNU) 3.4.2 20041017 (Red Hat 3.4.2-6.fc3)"
