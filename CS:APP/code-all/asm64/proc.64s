	.file	"proc.c"
	.text
	.p2align 4,,15
.globl proc
	.type	proc, @function
proc:
.LFB2:
	movq	16(%rsp), %r10
	addq	%rdi, (%rsi)
	addl	%edx, (%rcx)
	movzbl	8(%rsp), %eax
	addw	%r8w, (%r9)
	addb	%al, (%r10)
	ret
.LFE2:
	.size	proc, .-proc
	.p2align 4,,15
.globl call_proc
	.type	call_proc, @function
call_proc:
.LFB3:
	subq	$32, %rsp
.LCFI0:
	movl	$2, %edx
	movl	$3, %r8d
	leaq	31(%rsp), %rax
	leaq	24(%rsp), %rcx
	leaq	28(%rsp), %r9
	leaq	16(%rsp), %rsi
	movl	$1, %edi
	movq	$1, 16(%rsp)
	movq	%rax, 8(%rsp)
	movl	$2, 24(%rsp)
	movw	$3, 28(%rsp)
	movb	$4, 31(%rsp)
	movl	$4, (%rsp)
	call	proc
	movswl	28(%rsp),%edx
	movsbl	31(%rsp),%ecx
	movslq	24(%rsp),%rax
	addq	16(%rsp), %rax
	addq	$32, %rsp
	subl	%ecx, %edx
	movslq	%edx,%rdx
	imulq	%rdx, %rax
	ret
.LFE3:
	.size	call_proc, .-call_proc
	.p2align 4,,15
.globl rproc
	.type	rproc, @function
rproc:
.LFB4:
	movq	%rbp, -16(%rsp)
.LCFI1:
	movq	%rbx, -24(%rsp)
.LCFI2:
	movq	%r12, -8(%rsp)
.LCFI3:
	subq	$40, %rsp
.LCFI4:
	movq	(%rsi), %rax
	leaq	8(%rsp), %rbp
	leaq	(%rax,%rdi), %rdx
	subq	%rax, %rdi
	xorl	%eax, %eax
	movq	%rdi, (%rsp)
	testq	%rdx, %rdx
	movq	%rdx, 8(%rsp)
	jne	.L8
	movq	16(%rsp), %rbx
	movq	24(%rsp), %rbp
	movq	32(%rsp), %r12
	addq	$40, %rsp
	ret
	.p2align 4,,7
.L8:
	movq	%rdx, %rdi
	movq	%rbp, %rsi
	call	rproc
	movq	(%rsp), %rdi
	movq	%rsp, %rsi
	movq	%rax, %rbx
	call	rproc
	imulq	%rax, %rbx
	movq	(%rsp), %rdi
	movq	%rbp, %rsi
	call	rproc
	imulq	%rax, %rbx
	movq	8(%rsp), %rdi
	movq	%rsp, %rsi
	call	rproc
	imulq	%rbx, %rax
	movq	24(%rsp), %rbp
	movq	16(%rsp), %rbx
	movq	32(%rsp), %r12
	addq	$40, %rsp
	ret
.LFE4:
	.size	rproc, .-rproc
	.p2align 4,,15
.globl rfact
	.type	rfact, @function
rfact:
.LFB5:
	testq	%rdi, %rdi
	pushq	%rbx
.LCFI5:
	movl	$1, %eax
	movq	%rdi, %rbx
	jle	.L9
	leaq	-1(%rdi), %rdi
	call	rfact
	imulq	%rbx, %rax
.L9:
	popq	%rbx
	ret
.LFE5:
	.size	rfact, .-rfact
	.p2align 4,,15
.globl sfact_helper
	.type	sfact_helper, @function
sfact_helper:
.LFB6:
	movq	%rbx, -16(%rsp)
.LCFI6:
	movq	%rbp, -8(%rsp)
.LCFI7:
	subq	$24, %rsp
.LCFI8:
	testq	%rdi, %rdi
	movq	%rdi, %rbx
	movq	%rsi, %rbp
	jle	.L17
	leaq	-1(%rdi), %rdi
	movq	%rsp, %rsi
	call	sfact_helper
	imulq	(%rsp), %rbx
	movq	%rbx, (%rbp)
	movq	8(%rsp), %rbx
	movq	16(%rsp), %rbp
	addq	$24, %rsp
	ret
	.p2align 4,,7
.L17:
	movq	$1, (%rsi)
	movq	8(%rsp), %rbx
	movq	16(%rsp), %rbp
	addq	$24, %rsp
	ret
.LFE6:
	.size	sfact_helper, .-sfact_helper
	.p2align 4,,15
.globl sfact
	.type	sfact, @function
sfact:
.LFB7:
	subq	$8, %rsp
.LCFI9:
	movq	%rsp, %rsi
	call	sfact_helper
	movq	(%rsp), %rax
	addq	$8, %rsp
	ret
.LFE7:
	.size	sfact, .-sfact
	.p2align 4,,15
.globl pwr
	.type	pwr, @function
pwr:
.LFB8:
	testl	%esi, %esi
	pushq	%rbx
.LCFI10:
	movl	$1, %eax
	jne	.L23
	popq	%rbx
	ret
	.p2align 4,,7
.L23:
	movslq	%esi,%rbx
	decl	%esi
	call	pwr
	imulq	%rbx, %rax
	popq	%rbx
	.p2align 4,,2
	ret
.LFE8:
	.size	pwr, .-pwr
	.p2align 4,,15
.globl pwr_dc
	.type	pwr_dc, @function
pwr_dc:
.LFB9:
	movq	%rbp, -24(%rsp)
.LCFI11:
	movq	%r13, -8(%rsp)
.LCFI12:
	movl	%esi, %ebp
	movq	%rbx, -32(%rsp)
.LCFI13:
	movq	%r12, -16(%rsp)
.LCFI14:
	subq	$32, %rsp
.LCFI15:
	testl	%esi, %esi
	movq	%rdi, %r13
	movl	$1, %eax
	je	.L24
	cmpl	$1, %esi
	movq	%rdi, %rax
	je	.L24
	movl	%esi, %ebx
	shrl	$31, %ebx
	leal	(%rbp,%rbx), %ebx
	sarl	%ebx
	movl	%ebx, %esi
	subl	%ebx, %ebp
	call	pwr_dc
	movl	%ebp, %esi
	movq	%rax, %r12
	movq	%r13, %rdi
	call	pwr_dc
	imulq	%r12, %rax
	.p2align 4,,7
.L24:
	movq	(%rsp), %rbx
	movq	8(%rsp), %rbp
	movq	16(%rsp), %r12
	movq	24(%rsp), %r13
	addq	$32, %rsp
	ret
.LFE9:
	.size	pwr_dc, .-pwr_dc
	.p2align 4,,15
.globl multi_fact
	.type	multi_fact, @function
multi_fact:
.LFB10:
	movq	%rbx, -48(%rsp)
.LCFI16:
	movq	%rbp, -40(%rsp)
.LCFI17:
	movq	%rcx, %rbx
	movq	%r12, -32(%rsp)
.LCFI18:
	movq	%r13, -24(%rsp)
.LCFI19:
	movq	%rdi, %r12
	movq	%r14, -16(%rsp)
.LCFI20:
	movq	%r15, -8(%rsp)
.LCFI21:
	subq	$72, %rsp
.LCFI22:
	testq	%rdi, %rdi
	movq	%rsi, %r15
	movq	%rdx, %r14
	movq	%r8, %r13
	movq	%r9, %rbp
	jle	.L33
	leaq	-1(%rdi), %rdi
	call	multi_fact
	leaq	-1(%r15), %rsi
	movq	%rbp, %r9
	movq	%r13, %r8
	movq	%rbx, %rcx
	movq	%r14, %rdx
	movq	%r12, %rdi
	movq	%rax, 16(%rsp)
	call	multi_fact
	addq	16(%rsp), %rax
	leaq	-1(%r14), %rdx
	movq	%rbp, %r9
	movq	%r13, %r8
	movq	%rbx, %rcx
	movq	%r15, %rsi
	movq	%r12, %rdi
	movq	%rax, 8(%rsp)
	call	multi_fact
	leaq	-1(%rbx), %rcx
	movq	%rbp, %r9
	movq	%r13, %r8
	movq	%r14, %rdx
	movq	%r15, %rsi
	movq	%r12, %rdi
	movq	%rax, (%rsp)
	call	multi_fact
	addq	(%rsp), %rax
	addq	8(%rsp), %rax
.L29:
	movq	24(%rsp), %rbx
	movq	32(%rsp), %rbp
	movq	40(%rsp), %r12
	movq	48(%rsp), %r13
	movq	56(%rsp), %r14
	movq	64(%rsp), %r15
	addq	$72, %rsp
	ret
	.p2align 4,,7
.L33:
	leaq	(%rsi,%rdx), %rax
	addq	%rcx, %rax
	addq	%r8, %rax
	addq	%r9, %rax
	jmp	.L29
.LFE10:
	.size	multi_fact, .-multi_fact
	.p2align 4,,15
.globl local_array
	.type	local_array, @function
local_array:
.LFB11:
	andl	$3, %edi
	movq	$2, -40(%rsp)
	movq	$3, -32(%rsp)
	movq	$5, -24(%rsp)
	movq	$7, -16(%rsp)
	movq	-40(%rsp,%rdi,8), %rax
	ret
.LFE11:
	.size	local_array, .-local_array
	.section	.eh_frame,"a",@progbits
.Lframe1:
	.long	.LECIE1-.LSCIE1
.LSCIE1:
	.long	0x0
	.byte	0x1
	.string	""
	.uleb128 0x1
	.sleb128 -8
	.byte	0x10
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE1:
.LSFDE1:
	.long	.LEFDE1-.LASFDE1
.LASFDE1:
	.long	.LASFDE1-.Lframe1
	.quad	.LFB2
	.quad	.LFE2-.LFB2
	.align 8
.LEFDE1:
.LSFDE3:
	.long	.LEFDE3-.LASFDE3
.LASFDE3:
	.long	.LASFDE3-.Lframe1
	.quad	.LFB3
	.quad	.LFE3-.LFB3
	.byte	0x4
	.long	.LCFI0-.LFB3
	.byte	0xe
	.uleb128 0x28
	.align 8
.LEFDE3:
.LSFDE5:
	.long	.LEFDE5-.LASFDE5
.LASFDE5:
	.long	.LASFDE5-.Lframe1
	.quad	.LFB4
	.quad	.LFE4-.LFB4
	.byte	0x4
	.long	.LCFI4-.LFB4
	.byte	0xe
	.uleb128 0x30
	.byte	0x8c
	.uleb128 0x2
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 8
.LEFDE5:
.LSFDE7:
	.long	.LEFDE7-.LASFDE7
.LASFDE7:
	.long	.LASFDE7-.Lframe1
	.quad	.LFB5
	.quad	.LFE5-.LFB5
	.byte	0x4
	.long	.LCFI5-.LFB5
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE7:
.LSFDE9:
	.long	.LEFDE9-.LASFDE9
.LASFDE9:
	.long	.LASFDE9-.Lframe1
	.quad	.LFB6
	.quad	.LFE6-.LFB6
	.byte	0x4
	.long	.LCFI8-.LFB6
	.byte	0xe
	.uleb128 0x20
	.byte	0x86
	.uleb128 0x2
	.byte	0x83
	.uleb128 0x3
	.align 8
.LEFDE9:
.LSFDE11:
	.long	.LEFDE11-.LASFDE11
.LASFDE11:
	.long	.LASFDE11-.Lframe1
	.quad	.LFB7
	.quad	.LFE7-.LFB7
	.byte	0x4
	.long	.LCFI9-.LFB7
	.byte	0xe
	.uleb128 0x10
	.align 8
.LEFDE11:
.LSFDE13:
	.long	.LEFDE13-.LASFDE13
.LASFDE13:
	.long	.LASFDE13-.Lframe1
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.byte	0x4
	.long	.LCFI10-.LFB8
	.byte	0xe
	.uleb128 0x10
	.byte	0x83
	.uleb128 0x2
	.align 8
.LEFDE13:
.LSFDE15:
	.long	.LEFDE15-.LASFDE15
.LASFDE15:
	.long	.LASFDE15-.Lframe1
	.quad	.LFB9
	.quad	.LFE9-.LFB9
	.byte	0x4
	.long	.LCFI12-.LFB9
	.byte	0x8d
	.uleb128 0x2
	.byte	0x86
	.uleb128 0x4
	.byte	0x4
	.long	.LCFI15-.LCFI12
	.byte	0xe
	.uleb128 0x28
	.byte	0x8c
	.uleb128 0x3
	.byte	0x83
	.uleb128 0x5
	.align 8
.LEFDE15:
.LSFDE17:
	.long	.LEFDE17-.LASFDE17
.LASFDE17:
	.long	.LASFDE17-.Lframe1
	.quad	.LFB10
	.quad	.LFE10-.LFB10
	.byte	0x4
	.long	.LCFI17-.LFB10
	.byte	0x86
	.uleb128 0x6
	.byte	0x83
	.uleb128 0x7
	.byte	0x4
	.long	.LCFI19-.LCFI17
	.byte	0x8d
	.uleb128 0x4
	.byte	0x8c
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI22-.LCFI19
	.byte	0xe
	.uleb128 0x50
	.byte	0x8f
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x3
	.align 8
.LEFDE17:
.LSFDE19:
	.long	.LEFDE19-.LASFDE19
.LASFDE19:
	.long	.LASFDE19-.Lframe1
	.quad	.LFB11
	.quad	.LFE11-.LFB11
	.align 8
.LEFDE19:
	.section	.note.GNU-stack,"",@progbits
	.ident	"GCC: (GNU) 3.4.2 20041017 (Red Hat 3.4.2-6.fc3)"
