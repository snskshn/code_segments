cscope 15 $HOME/apue.2e               0000795746
	@advio/catgetmsg.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

4 
	#BUFFSIZE
 4096

	)

7 
	$maö
()

9 
n
, 
Êag
;

10 
˘lbuf
[
BUFFSIZE
], 
d©buf
[BUFFSIZE];

11 
°rbuf
 
˘l
, 
d©
;

13 
˘l
.
buf
 = 
˘lbuf
;

14 
˘l
.
maxÀn
 = 
BUFFSIZE
;

15 
d©
.
buf
 = 
d©buf
;

16 
d©
.
maxÀn
 = 
BUFFSIZE
;

18 
Êag
 = 0;

19 i‡((
n
 = 
	`gëmsg
(
STDIN_FILENO
, &
˘l
, &
d©
, &
Êag
)) < 0)

20 
	`îr_sys
("getmsgÉrror");

21 
	`Ârötf
(
°dîr
, "flag = %d, ctl.len = %d, dat.len = %d\n",

22 
Êag
, 
˘l
.
Àn
, 
d©
.len);

23 i‡(
d©
.
Àn
 == 0)

24 
	`exô
(0);

25 i‡(
d©
.
Àn
 > 0)

26 i‡(
	`wrôe
(
STDOUT_FILENO
, 
d©
.
buf
, d©.
Àn
) != dat.len)

27 
	`îr_sys
("writeÉrror");

29 
	}
}

	@advio/devzero.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<sys/mm™.h
>

5 
	#NLOOPS
 1000

	)

6 
	#SIZE
 (Ë

	)

9 
	$upd©e
(*
±r
)

11 ((*
±r
)++);

12 
	}
}

15 
	$maö
()

17 
fd
, 
i
, 
cou¡î
;

18 
pid_t
 
pid
;

19 *
¨ó
;

21 i‡((
fd
 = 
	`›í
("/dev/zîo", 
O_RDWR
)) < 0)

22 
	`îr_sys
("openÉrror");

23 i‡((
¨ó
 = 
	`mm≠
(0, 
SIZE
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
,

24 
fd
, 0)Ë=
MAP_FAILED
)

25 
	`îr_sys
("mmapÉrror");

26 
	`˛o£
(
fd
);

28 
	`TELL_WAIT
();

30 i‡((
pid
 = 
	`f‹k
()) < 0) {

31 
	`îr_sys
("forkÉrror");

32 } i‡(
pid
 > 0) {

33 
i
 = 0; i < 
NLOOPS
; i += 2) {

34 i‡((
cou¡î
 = 
	`upd©e
((*)
¨ó
)Ë!
i
)

35 
	`îr_quô
("∑ª¡:Éx≥˘ed %d, gŸ %d", 
i
, 
cou¡î
);

37 
	`TELL_CHILD
(
pid
);

38 
	`WAIT_CHILD
();

41 
i
 = 1; i < 
NLOOPS
 + 1; i += 2) {

42 
	`WAIT_PARENT
();

44 i‡((
cou¡î
 = 
	`upd©e
((*)
¨ó
)Ë!
i
)

45 
	`îr_quô
("chûd:Éx≥˘ed %d, gŸ %d", 
i
, 
cou¡î
);

47 
	`TELL_PARENT
(
	`gëµid
());

51 
	`exô
(0);

52 
	}
}

	@advio/mcopy.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<sys/mm™.h
>

6 
	$maö
(
¨gc
, *
¨gv
[])

8 
fdö
, 
fdout
;

9 *
§c
, *
d°
;

10 
°©
 
°©buf
;

12 i‡(
¨gc
 != 3)

13 
	`îr_quô
("ußge: %†<‰omfûe> <tofûe>", 
¨gv
[0]);

15 i‡((
fdö
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
)) < 0)

16 
	`îr_sys
("ˇn'à›í %†f‹Ñódög", 
¨gv
[1]);

18 i‡((
fdout
 = 
	`›í
(
¨gv
[2], 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
,

19 
FILE_MODE
)) < 0)

20 
	`îr_sys
("ˇn'à¸óà%†f‹ wrôög", 
¨gv
[2]);

22 i‡(
	`f°©
(
fdö
, &
°©buf
) < 0)

23 
	`îr_sys
("fstatÉrror");

26 i‡(
	`l£ek
(
fdout
, 
°©buf
.
°_size
 - 1, 
SEEK_SET
) == -1)

27 
	`îr_sys
("lseekÉrror");

28 i‡(
	`wrôe
(
fdout
, "", 1) != 1)

29 
	`îr_sys
("writeÉrror");

31 i‡((
§c
 = 
	`mm≠
(0, 
°©buf
.
°_size
, 
PROT_READ
, 
MAP_SHARED
,

32 
fdö
, 0)Ë=
MAP_FAILED
)

33 
	`îr_sys
("mmapÉrror for input");

35 i‡((
d°
 = 
	`mm≠
(0, 
°©buf
.
°_size
, 
PROT_READ
 | 
PROT_WRITE
,

36 
MAP_SHARED
, 
fdout
, 0)Ë=
MAP_FAILED
)

37 
	`îr_sys
("mmapÉrror for output");

39 
	`mem˝y
(
d°
, 
§c
, 
°©buf
.
°_size
);

40 
	`exô
(0);

41 
	}
}

	@advio/nonblockw.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

5 
	gbuf
[500000];

8 
	$maö
()

10 
¡owrôe
, 
nwrôe
;

11 *
±r
;

13 
¡owrôe
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, (buf));

14 
	`Ârötf
(
°dîr
, "ªad %d byãs\n", 
¡owrôe
);

16 
	`£t_Ê
(
STDOUT_FILENO
, 
O_NONBLOCK
);

18 
±r
 = 
buf
;

19 
¡owrôe
 > 0) {

20 
î∫o
 = 0;

21 
nwrôe
 = 
	`wrôe
(
STDOUT_FILENO
, 
±r
, 
¡owrôe
);

22 
	`Ârötf
(
°dîr
, "nwrôê%d,Éºnÿ%d\n", 
nwrôe
, 
î∫o
);

24 i‡(
nwrôe
 > 0) {

25 
±r
 +
nwrôe
;

26 
¡owrôe
 -
nwrôe
;

30 
	`˛r_Ê
(
STDOUT_FILENO
, 
O_NONBLOCK
);

32 
	`exô
(0);

33 
	}
}

	@advio/pendlock.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<î∫o.h
>

6 
	$sigöt
(
signo
)

8 
	}
}

11 
	$maö
()

13 
pid_t
 
pid1
, 
pid2
, 
pid3
;

14 
fd
;

16 
	`£tbuf
(
°dout
, 
NULL
);

17 
	`sig«l_öå
(
SIGINT
, 
sigöt
);

22 i‡((
fd
 = 
	`›í
("lockfûe", 
O_RDWR
|
O_CREAT
, 0666)) < 0)

23 
	`îr_sys
("can't open/createÜockfile");

28 i‡((
pid1
 = 
	`f‹k
()) < 0) {

29 
	`îr_sys
("fork failed");

30 } i‡(
pid1
 == 0) {

31 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_RDLCK
, 0, 
SEEK_SET
, 0) < 0)

32 
	`îr_sys
("child 1: can'tÑead-lock file");

33 
	`¥ötf
("child 1: obtainedÑeadÜock on file\n");

34 
	`∑u£
();

35 
	`¥ötf
("child 1:ÉxitáfterÖause\n");

36 
	`exô
(0);

38 
	`¶ìp
(2);

44 i‡((
pid2
 = 
	`f‹k
()) < 0) {

45 
	`îr_sys
("fork failed");

46 } i‡(
pid2
 == 0) {

47 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_RDLCK
, 0, 
SEEK_SET
, 0) < 0)

48 
	`îr_sys
("child 2: can'tÑead-lock file");

49 
	`¥ötf
("child 2: obtainedÑeadÜock on file\n");

50 
	`∑u£
();

51 
	`¥ötf
("child 2:ÉxitáfterÖause\n");

52 
	`exô
(0);

54 
	`¶ìp
(2);

61 i‡((
pid3
 = 
	`f‹k
()) < 0) {

62 
	`îr_sys
("fork failed");

63 } i‡(
pid3
 == 0) {

64 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_WRLCK
, 0, 
SEEK_SET
, 0) < 0)

65 
	`¥ötf
("child 3: can't set writeÜock: %s\n",

66 
	`°ªº‹
(
î∫o
));

67 
	`¥ötf
("child 3áboutÅo block in write-lock...\n");

68 i‡(
	`lock_ªg
(
fd
, 
F_SETLKW
, 
F_WRLCK
, 0, 
SEEK_SET
, 0) < 0)

69 
	`îr_sys
("child 3: can't write-lock file");

70 
	`¥ötf
("child 3Ñeturnedánd got writeÜock????\n");

71 
	`∑u£
();

72 
	`¥ötf
("child 3:ÉxitáfterÖause\n");

73 
	`exô
(0);

75 
	`¶ìp
(2);

82 i‡(
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_RDLCK
, 0, 
SEEK_SET
, 0) < 0)

83 
	`¥ötf
("parent: can't setÑeadÜock: %s\n",

84 
	`°ªº‹
(
î∫o
));

86 
	`¥ötf
("parent: obtainedádditionalÑeadÜock while"

88 
	`¥ötf
("killing child 1...\n");

89 
	`kûl
(
pid1
, 
SIGINT
);

90 
	`¥ötf
("killing child 2...\n");

91 
	`kûl
(
pid2
, 
SIGINT
);

92 
	`¥ötf
("killing child 3...\n");

93 
	`kûl
(
pid3
, 
SIGINT
);

94 
	`exô
(0);

95 
	}
}

	@call/call.c

1 
	~"ˇŒ.h
"

2 
	~<sys/uio.h
>

9 
	$ˇŒ
(c⁄° *
¨gs
)

11 
csfd
, 
Àn
;

12 
iovec
 
iov
[2];

17 i‡((
csfd
 = 
	`˛i_c⁄n
(
CS_CALL
)) < 0)

18 
	`îr_sys
("cli_connÉrror");

20 
iov
[0].
iov_ba£
 = 
CL_CALL
 " ";

21 
iov
[0].
iov_Àn
 = 
	`°æí
(
CL_CALL
) + 1;

22 
iov
[1].
iov_ba£
 = (*Ë
¨gs
;

24 
iov
[1].
iov_Àn
 = 
	`°æí
(
¨gs
) + 1;

25 
Àn
 = 
iov
[0].
iov_Àn
 + iov[1].iov_len;

26 i‡(
	`wrôev
(
csfd
, &
iov
[0], 2Ë!
Àn
)

27 
	`îr_sys
("writevÉrror");

33 (
	`ªcv_fd
(
csfd
, 
wrôe
));

34 
	}
}

	@call/call.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<sys/time.h
>

5 
	#CS_CALL
 "/home/ßr/ˇŒd"

	)

6 
	#CL_CALL
 "ˇŒ"

	)

8 
esˇ≥c
;

9 *
§c
;

10 *
d°
;

12 
ˇŒ
(const *);

13 
d€sˇ≥
();

14 
lo›
();

15 
¥om±_ªad
(*, (*)(, **));

16 
	`put
();

17 
	`èke
();

18 
	`èke_put_¨gs
(, **);

	@call/escape.c

1 
	~"ˇŒ.h
"

11 
	$d€sˇ≥
(
ªmfd
)

13 
c
;

15 i‡(
	`ªad
(
STDIN_FILENO
, &
c
, 1) != 1)

16 
	`îr_sys
("readÉrror from stdin");

18 i‡(
c
 =
esˇ≥c
) {

19 (
esˇ≥c
);

20 } i‡(
c
 == '.') {

21 
	`wrôe
(
STDOUT_FILENO
, "~.\n\r", 4);

24 #ifdef 
VSUSP


25 } i‡(
c
 =
	`ây_ãrmios
()->
c_cc
[
VSUSP
]) {

26 
	`ây_ª£t
(
STDIN_FILENO
);

27 
	`kûl
(
	`gëpid
(), 
SIGTSTP
);

28 
	`ây_øw
(
STDIN_FILENO
);

32 } i‡(
c
 == '#') {

33 
	`tc£ndbªak
(
ªmfd
, 0);

35 } i‡(
c
 == 't') {

36 
	`èke
(
ªmfd
);

38 } i‡(
c
 == 'p') {

39 
	`put
(
ªmfd
);

43 (
c
);

44 
	}
}

	@call/loop.poll.c

1 
	~"ˇŒ.h
"

2 
	~<pﬁl.h
>

4 
	#BUFFSIZE
 512

	)

11 
	$lo›
(
ªmfd
)

13 
bﬁ
, 
n
, 
ƒód
;

14 
c
;

15 
buff
[
BUFFSIZE
];

16 
pﬁlfd
 
fds
[2];

21 
	`£tbuf
(
°dout
, 
NULL
);

22 
fds
[0].
fd
 = 
STDIN_FILENO
;

23 
fds
[0].
evíts
 = 
POLLIN
;

24 
fds
[1].
fd
 = 
ªmfd
;

25 
fds
[1].
evíts
 = 
POLLIN
;

28 i‡(
	`pﬁl
(
fds
, 2, -1) <= 0)

29 
	`îr_sys
("pollÉrror");

30 i‡(
fds
[0].
ªvíts
 & 
POLLIN
) {

31 i‡(
	`ªad
(
STDIN_FILENO
, &
c
, 1) != 1)

32 
	`îr_sys
("readÉrror from stdin");

33 i‡(
c
 =
esˇ≥c
 && 
bﬁ
) {

34 i‡((
n
 = 
	`d€sˇ≥
(
ªmfd
)) < 0)

36 i‡(
n
 == 0)

41 
c
 = 
n
;

43 i‡(
c
 == '\r' || c == '\n')

44 
bﬁ
 = 1;

46 
bﬁ
 = 0;

47 i‡(
	`wrôe
(
ªmfd
, &
c
, 1) != 1)

48 
	`îr_sys
("writeÉrror");

50 i‡(
fds
[0].
ªvíts
 & 
POLLHUP
)

52 i‡(
fds
[1].
ªvíts
 & 
POLLIN
) {

53 i‡((
ƒód
 = 
	`ªad
(
ªmfd
, 
buff
, 
BUFFSIZE
)) <= 0)

55 i‡(
	`wrôí
(
STDOUT_FILENO
, 
buff
, 
ƒód
) !=Çread)

56 
	`îr_sys
("writenÉrrorÅo stdout");

58 i‡(
fds
[1].
ªvíts
 & 
POLLHUP
)

61 
	}
}

	@call/main.c

1 
	~"ˇŒ.h
"

3 
	gesˇ≥c
 = '~';

4 *
	g§c
;

5 *
	gd°
;

7 
ußge
(*);

10 
	$maö
(
¨gc
, *
¨gv
[])

12 
c
, 
ªmfd
, 
debug
;

13 
¨gs
[
MAXLINE
];

15 
¨gs
[0] = 0;

16 
›ãº
 = 0;

17 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "des:o")Ë!
EOF
) {

18 
c
) {

20 
debug
 = 1;

21 
	`°rˇt
(
¨gs
, "-d ");

25 
	`°rˇt
(
¨gs
, "-e ");

29 
	`°rˇt
(
¨gs
, "-o ");

33 
	`°rˇt
(
¨gs
, "-s ");

34 
	`°rˇt
(
¨gs
, 
›èrg
);

35 
	`°rˇt
(
¨gs
, " ");

39 
	`ußge
("unrecognized option");

42 i‡(
›töd
 < 
¨gc
)

43 
	`°rˇt
(
¨gs
, 
¨gv
[
›töd
]);

45 
	`ußge
("missing <hostname>Åo call");

47 i‡((
ªmfd
 = 
	`ˇŒ
(
¨gs
)) < 0)

48 
	`exô
(1);

49 
	`¥ötf
("Connected\n");

50 i‡(
	`ây_øw
(
STDIN_FILENO
) < 0)

51 
	`îr_sys
("tty_rawÉrror");

52 i‡(
	`©exô
(
ây_©exô
) < 0)

53 
	`îr_sys
("atexitÉrror");

55 
	`lo›
(
ªmfd
);

57 
	`¥ötf
("Disconnected\n\r");

58 
	`exô
(0);

59 
	}
}

62 
	$ußge
(*
msg
)

64 
	`îr_quô
("%s\nußge: cÆ»-d -ê-ÿ-s<•ìd> <ho°«me>", 
msg
);

65 
	}
}

	@call/put.c

1 
	~"ˇŒ.h
"

7 
	$put
(
ªmfd
)

9 
i
, 
n
, 
löe˙t
;

10 
c
, 
cmd
[
MAXLINE
];

11 
FILE
 *
Âö
;

13 i‡(
	`¥om±_ªad
("~[put] ", 
èke_put_¨gs
) < 0) {

14 
	`¥ötf
("usage: [put] <sourcefile> <destfile>\n\r");

21 i‡((
Âö
 = 
	`f›í
(
§c
, "r")Ë=
NULL
) {

22 
	`îr_ªt
("ˇn'à›í %†f‹Ñódög", 
§c
);

23 
	`putc
('\r', 
°dîr
);

24 
	`fÊush
(
°dîr
);

31 
	`•rötf
(
cmd
, "°ty -echo; c© >%s; sâyÉcho\r", 
d°
);

32 
n
 = 
	`°æí
(
cmd
);

33 i‡(
	`wrôe
(
ªmfd
, 
cmd
, 
n
) !=Ç)

34 
	`îr_sys
("writeÉrror");

35 
	`tcdøö
(
ªmfd
);

36 
	`¶ìp
(4);

41 
löe˙t
 = 0;

43 i‡((
i
 = 
	`gëc
(
Âö
)Ë=
EOF
)

45 
c
 = 
i
;

46 i‡(
	`wrôe
(
ªmfd
, &
c
, 1) != 1)

48 i‡(
c
 == '\n')

49 
	`¥ötf
("\r%d", ++
löe˙t
);

55 
c
 = 
	`ây_ãrmios
()->
c_cc
[
VEOF
];

56 
	`wrôe
(
ªmfd
, &
c
, 1);

57 
	`tcdøö
(
ªmfd
);

58 
	`¶ìp
(2);

59 
	`tcÊush
(
ªmfd
, 
TCIOFLUSH
);

60 
c
 = '\n';

61 
	`wrôe
(
ªmfd
, &
c
, 1);

63 i‡(
	`„º‹
(
Âö
)) {

64 
	`îr_msg
("readÉrror ofÜocal file");

65 
	`putc
('\r', 
°dîr
);

66 
	`fÊush
(
°dîr
);

68 
	`f˛o£
(
Âö
);

69 
	}
}

	@call/take.c

1 
	~"ˇŒ.h
"

3 
	#CTRLA
 001

	)

5 
ªm_ªad
();

6 
	gªm_buf
[
MAXLINE
];

7 *
	gªm_±r
;

8 
	gªm_˙t
 = 0;

14 
	$èke
(
ªmfd
)

16 
n
, 
löe˙t
;

17 
c
;

18 
cmd
[
MAXLINE
];

19 
FILE
 *
Âout
;

21 i‡(
	`¥om±_ªad
("~[èke] ", 
èke_put_¨gs
) < 0) {

22 
	`¥ötf
("usage: [take] <sourcefile> <destfile>\n\r");

29 i‡((
Âout
 = 
	`f›í
(
d°
, "w")Ë=
NULL
) {

30 
	`îr_ªt
("ˇn'à›í %†f‹ wrôög", 
d°
);

31 
	`putc
('\r', 
°dîr
);

32 
	`fÊush
(
°dîr
);

39 
	`•rötf
(
cmd
, "ˇà%s;Échÿ%c\r", 
§c
, 
CTRLA
);

40 
n
 = 
	`°æí
(
cmd
);

41 i‡(
	`wrôe
(
ªmfd
, 
cmd
, 
n
) !=Ç)

42 
	`îr_sys
("writeÉrror");

47 
ªm_˙t
 = 0;

49 i‡((
c
 = 
	`ªm_ªad
(
ªmfd
)) == 0)

51 i‡(
c
 == '\n')

58 
löe˙t
 = 0;

60 i‡((
c
 = 
	`ªm_ªad
(
ªmfd
)) == 0)

62 i‡(
c
 =
CTRLA
)

64 i‡(
c
 == '\r')

66 i‡(
c
 == '\n')

67 
	`¥ötf
("\r%d", ++
löe˙t
);

68 i‡(
	`putc
(
c
, 
Âout
Ë=
EOF
)

71 i‡(
	`„º‹
(
Âout
Ë|| 
	`f˛o£
(ÂoutË=
EOF
) {

72 
	`îr_msg
("outputÉrrorÅoÜocal file");

73 
	`putc
('\r', 
°dîr
);

74 
	`fÊush
(
°dîr
);

76 
c
 = '\n';

77 
	`wrôe
(
ªmfd
, &
c
, 1);

78 
	}
}

85 
	$ªm_ªad
(
ªmfd
)

87 i‡(
ªm_˙t
 <= 0) {

88 i‡((
ªm_˙t
 = 
	`ªad
(
ªmfd
, 
ªm_buf
, 
MAXLINE
)) < 0)

89 
	`îr_sys
("readÉrror");

90 i‡(
ªm_˙t
 == 0)

92 
ªm_±r
 = 
ªm_buf
;

94 
ªm_˙t
--;

95 (*
ªm_±r
++ & 0177);

96 
	}
}

	@call/takeput.c

1 
	~"ˇŒ.h
"

7 
	$èke_put_¨gs
(
¨gc
, **
¨gv
)

9 i‡(
¨gc
 == 1) {

10 
§c
 = 
d°
 = 
¨gv
[0];

12 } i‡(
¨gc
 == 2) {

13 
§c
 = 
¨gv
[0];

14 
d°
 = 
¨gv
[1];

18 
	}
}

23 
	gcmd¨gs
[
MAXLINE
];

31 
¥om±_ªad
(*
¥om±
, (*
u£rfunc
)(, **))

33 
n
;

34 
c
, *
±r
;

36 
	`ây_ª£t
(
STDIN_FILENO
);

38 
n
 = 
	`°æí
(
¥om±
);

39 i‡(
	`wrôe
(
STDOUT_FILENO
, 
¥om±
, 
n
) !=Ç)

40 
	`îr_sys
("writeÉrror");

42 
±r
 = 
cmd¨gs
;

44 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, &
c
, 1)) < 0)

45 
	`îr_sys
("readÉrror");

46 i‡(
n
 == 0)

48 i‡(
c
 == '\n')

50 i‡(
±r
 < &
cmd¨gs
[
MAXLINE
-2])

51 *
±r
++ = 
c
;

53 *
±r
 = 0;

55 
	`ây_øw
(
STDIN_FILENO
);

60 (
	`buf_¨gs
(
cmd¨gs
, 
u£rfunc
));

61 
	}
}

	@calld/calld.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CS_CALL
 "/home/ßr/ˇŒd"

	)

5 
	#CL_CALL
 "ˇŒ"

	)

6 
	#MAXSYSNAME
 256

	)

7 
	#MAXSPEEDSTR
 256

	)

13 
	#NALLOC
 10

	)

15 
	#WHITE
 " \t\n"

	)

16 
	#SYSTEMS
 "./Sy°ems"

	)

17 
	#DEVICES
 "./Devi˚s"

	)

18 
	#DIALERS
 "./DüÀrs"

	)

20 
˛ifd
;

21 
Debug
;

22 
îrmsg
[];

23 *
•ìd
;

24 *
sy¢ame
;

25 
uid_t
 
uid
;

26 vﬁ©ûê
sig_©omic_t
 
chld_Êag
;

27 
	e∑rôy
 { 
NONE
, 
EVEN
, 
ODD
 } 
∑rôy
;

30 
	mfd
;

31 
pid_t
 
	mpid
;

32 
uid_t
 
	muid
;

33 
	mchûdd⁄e
;

35 
	msys·ñl
;

36 
	mfound⁄e
;

37 
	mDebug
;

38 
∑rôy
 
	m∑rôy
;

39 
	m•ìd
[
MAXSPEEDSTR
];

40 
	msy¢ame
[
MAXSYSNAME
];

41 } 
	tClõ¡
;

44 
Clõ¡
 *
˛õ¡
;

45 
˛õ¡_size
;

48 *
	m«me
;

49 *
	mtime
;

50 *
	mty≥
;

51 *
	m˛ass
;

52 *
	mph⁄e
;

53 *
	mlogö
;

54 } 
	tSy°ems
;

57 *
	mty≥
;

58 *
	mlöe
;

59 *
	mlöe2
;

60 *
	m˛ass
;

61 *
	mdüÀr
;

62 } 
	tDevi˚s
;

65 *
	mdüÀr
;

66 *
	msub
;

67 *
	mexp£nd
;

68 } 
	tDüÀrs
;

70 
Sy°ems
 
sy°ems
;

71 
Devi˚s
 
devi˚s
;

72 
DüÀrs
 
düÀrs
;

74 
chûd_dül
(
Clõ¡
 *);

75 
˛i_¨gs
(, **);

76 
˛õ¡_add
(, 
uid_t
);

77 
˛õ¡_dñ
();

78 
˛õ¡_sigchld
(
pid_t
, );

79 
lo›
();

80 *
˘l_°r
();

81 
dev_föd
(
Devi˚s
 *, c⁄° 
Sy°ems
 *);

82 
dev_√xt
(
Devi˚s
 *);

83 
dev_ªw
();

84 
dül_föd
(
DüÀrs
 *, c⁄° 
Devi˚s
 *);

85 
dül_√xt
(
DüÀrs
 *);

86 
dül_ªw
();

87 
ex≥˘_°r
(, *);

88 
ªque°
(
Clõ¡
 *);

89 
£nd_°r
(, *, *, );

90 
sig_chld
();

91 
sys_√xt
(
Sy°ems
 *);

92 
sys_po¢
();

93 
sys_ªw
();

94 
ây_›í
(*, *, 
∑rôy
, );

95 
ây_dül
(, *, *, *, *);

96 
pid_t
 
is_locked
(*);

97 
lock_£t
(*, 
pid_t
);

98 
lock_ªl
(
pid_t
);

99 
DEBUG
(*, ...);

100 
DEBUG_NONL
(*, ...);

	@calld/childdial.c

1 
	~"ˇŒd.h
"

14 
	$chûd_dül
(
Clõ¡
 *
˛ùå
)

16 
fd
, 
n
;

18 
Debug
 = 
˛ùå
->Debug;

19 
	`DEBUG
("chûd,Öid %d", 
	`gëpid
());

21 i‡(
	`°rcmp
(
devi˚s
.
düÀr
, "direct") == 0) {

22 
fd
 = 
	`ây_›í
(
sy°ems
.
˛ass
, 
devi˚s
.
löe
, 
˛ùå
->
∑rôy
, 0);

23 i‡(
fd
 < 0)

24 
dõ
;

26 i‡(
	`dül_föd
(&
düÀrs
, &
devi˚s
) < 0)

27 
dõ
;

28 
fd
 = 
	`ây_›í
(
sy°ems
.
˛ass
, 
devi˚s
.
löe
, 
˛ùå
->
∑rôy
, 1);

29 i‡(
fd
 < 0)

30 
dõ
;

31 i‡(
	`ây_dül
(
fd
, 
sy°ems
.
ph⁄e
, 
düÀrs
.
düÀr
,

32 
düÀrs
.
sub
, düÀrs.
exp£nd
) < 0)

33 
dõ
;

35 
	`DEBUG
("done");

40 i‡(
	`£nd_fd
(
˛ùå
->
fd
, fd) < 0)

41 
	`log_sys
("send_fdÉrror");

42 
	`exô
(0);

44 
dõ
:

51 
n
 = 
	`°æí
(
îrmsg
);

52 i‡(
	`wrôí
(
˛ùå
->
fd
, 
îrmsg
, 
n
) !=Ç)

53 
	`log_sys
("writenÉrror");

54 
	`exô
(1);

55 
	}
}

	@calld/cliargs.c

1 
	~"ˇŒd.h
"

9 
	$˛i_¨gs
(
¨gc
, **
¨gv
)

11 
c
;

13 i‡(
¨gc
 < 2 || 
	`°rcmp
(
¨gv
[0], 
CL_CALL
) != 0) {

14 
	`°r˝y
(
îrmsg
, "usage: call <options> <hostname>");

17 
Debug
 = 0;

18 
∑rôy
 = 
NONE
;

19 
•ìd
 = 
NULL
;

20 
›ãº
 = 0;

21 
›töd
 = 1;

22 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "des:o")Ë!
EOF
) {

23 
c
) {

25 
Debug
 = 1;

29 
∑rôy
 = 
EVEN
;

33 
∑rôy
 = 
ODD
;

37 
•ìd
 = 
›èrg
;

41 
	`•rötf
(
îrmsg
, "uƒecognized o±i⁄: -%c\n", 
›t›t
);

45 i‡(
›töd
 >
¨gc
) {

46 
	`•rötf
(
îrmsg
, "missing <hostname>Åo call\n");

49 
sy¢ame
 = 
¨gv
[
›töd
];

51 
	}
}

	@calld/client.c

1 
	~"ˇŒd.h
"

4 
	$˛õ¡_Æloc
()

6 
i
;

8 i‡(
˛õ¡
 =
NULL
)

9 
˛õ¡
 = 
	`mÆloc
(
NALLOC
 * (
Clõ¡
));

11 
˛õ¡
 = 
	`ªÆloc
(client,

12 (
˛õ¡_size
 + 
NALLOC
Ë* (
Clõ¡
));

13 i‡(
˛õ¡
 =
NULL
)

14 
	`îr_sys
("can'tálloc for clientárray");

19 
i
 = 
˛õ¡_size
; i < clõ¡_sizê+ 
NALLOC
; i++)

20 
˛õ¡
[
i
].
fd
 = -1;

21 
˛õ¡_size
 +
NALLOC
;

22 
	}
}

28 
	$˛õ¡_add
(
fd
, 
uid_t
 
uid
)

30 
i
;

32 i‡(
˛õ¡
 =
NULL
)

33 
	`˛õ¡_Æloc
();

34 
agaö
:

35 
i
 = 0; i < 
˛õ¡_size
; i++) {

36 i‡(
˛õ¡
[
i
].
fd
 == -1) {

37 
˛õ¡
[
i
].
fd
 = fd;

38 
˛õ¡
[
i
].
uid
 = uid;

39 (
i
);

46 
	`˛õ¡_Æloc
();

47 
agaö
;

48 
	}
}

54 
	$˛õ¡_dñ
(
fd
)

56 
i
;

58 
i
 = 0; i < 
˛õ¡_size
; i++) {

59 i‡(
˛õ¡
[
i
].
fd
 == fd) {

60 
˛õ¡
[
i
].
fd
 = -1;

64 
	`log_quô
("ˇn'àföd clõ¡É¡ry f‹ fd %d", 
fd
);

65 
	}
}

73 
	$˛õ¡_sigchld
(
pid_t
 
pid
, 
°©
)

75 
i
;

77 
i
 = 0; i < 
˛õ¡_size
; i++) {

78 i‡(
˛õ¡
[
i
].
pid
 ==Öid) {

79 
˛õ¡
[
i
].
chûdd⁄e
 = 
°©
;

83 
	`log_quô
("ˇn'àföd clõ¡É¡ry f‹Öid %d", 
pid
);

84 
	}
}

	@calld/ctlstr.c

1 
	~"ˇŒd.h
"

8 
	$˘l_°r
(
c
)

10 
ãmp°r
[6];

12 
c
 &= 255;

13 i‡(
c
 == 0)

15 i‡(
c
 < 040)

16 
	`•rötf
(
ãmp°r
, "^%c", 
c
 + 'A' - 1);

17 i‡(
c
 == 0177)

19 i‡(
c
 > 0177)

20 
	`•rötf
(
ãmp°r
, "\\%03o", 
c
);

22 
	`•rötf
(
ãmp°r
, "%c", 
c
);

23 (
ãmp°r
);

24 
	}
}

	@calld/debug.c

1 
	~"ˇŒd.h
"

2 
	~<°d¨g.h
>

8 
	$DEBUG
(*
fmt
, ...)

10 
va_li°
 
¨gs
;

11 
löe
[
MAXLINE
];

12 
n
;

14 i‡(
Debug
 == 0)

16 
	`va_°¨t
(
¨gs
, 
fmt
);

17 
	`v•rötf
(
löe
, 
fmt
, 
¨gs
);

18 
	`°rˇt
(
löe
, "\n");

19 
	`va_íd
(
¨gs
);

20 
n
 = 
	`°æí
(
löe
);

21 i‡(
	`wrôí
(
˛ifd
, 
löe
, 
n
) !=Ç)

22 
	`log_sys
("writenÉrror");

23 
	}
}

26 
	$DEBUG_NONL
(*
fmt
, ...)

28 
va_li°
 
¨gs
;

29 
löe
[
MAXLINE
];

30 
n
;

32 i‡(
Debug
 == 0)

34 
	`va_°¨t
(
¨gs
, 
fmt
);

35 
	`v•rötf
(
löe
, 
fmt
, 
¨gs
);

36 
	`va_íd
(
¨gs
);

37 
n
 = 
	`°æí
(
löe
);

38 i‡(
	`wrôí
(
˛ifd
, 
löe
, 
n
) !=Ç)

39 
	`log_sys
("writenÉrror");

40 
	}
}

	@calld/devfile.c

1 
	~"ˇŒd.h
"

3 
FILE
 *
	gÂdev
 = 
NULL
;

4 
	gdevlöío
;

5 
	gdevlöe
[
MAXLINE
];

12 
	$dev_√xt
(
Devi˚s
 *
dev±r
)

14 i‡(
Âdev
 =
NULL
) {

15 i‡((
Âdev
 = 
	`f›í
(
DEVICES
, "r")Ë=
NULL
)

16 
	`log_sys
("ˇn'à›í %s", 
DEVICES
);

17 
devlöío
 = 0;

20 
agaö
:

21 i‡(
	`fgës
(
devlöe
, 
MAXLINE
, 
Âdev
Ë=
NULL
)

23 
devlöío
++;

24 i‡((
dev±r
->
ty≥
 = 
	`°πok
(
devlöe
, 
WHITE
)Ë=
NULL
) {

25 i‡(
devlöe
[0] == '\n')

26 
agaö
;

27 
	`log_quô
("missing `type' in Devices file,Üine %d",

28 
devlöío
);

30 i‡(
dev±r
->
ty≥
[0] == '#')

31 
agaö
;

32 i‡((
dev±r
->
löe
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

33 
	`log_quô
("missing `line' in Devices file,Üine %d",

34 
devlöío
);

35 i‡((
dev±r
->
löe2
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

36 
	`log_quô
("missing `line2' in Devices file,Üine %d",

37 
devlöío
);

38 i‡((
dev±r
->
˛ass
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

39 
	`log_quô
("missing `class' in Devices file,Üine %d",

40 
devlöío
);

41 i‡((
dev±r
->
düÀr
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

42 
	`log_quô
("missing `dialer' in Devices file,Üine %d",

43 
devlöío
);

46 
	}
}

49 
	$dev_ªw
()

51 i‡(
Âdev
 !
NULL
)

52 
	`ªwöd
(
Âdev
);

53 
devlöío
 = 0;

54 
	}
}

60 
	$dev_föd
(
Devi˚s
 *
dev±r
, c⁄° 
Sy°ems
 *
sy•å
)

62 
	`dev_ªw
();

63 
	`dev_√xt
(
dev±r
) >= 0) {

64 i‡(
	`°rcmp
(
sy•å
->
ty≥
, 
dev±r
->type) == 0 &&

65 
	`°rcmp
(
sy•å
->
˛ass
, 
dev±r
->class) == 0)

68 
	`•rötf
(
îrmsg
, "devi˚ `%s'/`%s'ÇŸ found\n", 
sy•å
->
ty≥
,

69 
sy•å
->
˛ass
);

71 
	}
}

	@calld/dialfile.c

1 
	~"ˇŒd.h
"

3 
FILE
 *
	gÂdül
 = 
NULL
;

4 
	gdüŒöío
;

5 
	gdüŒöe
[
MAXLINE
];

12 
	$dül_√xt
(
DüÀrs
 *
düÕå
)

14 i‡(
Âdül
 =
NULL
) {

15 i‡((
Âdül
 = 
	`f›í
(
DIALERS
, "r")Ë=
NULL
)

16 
	`log_sys
("ˇn'à›í %s", 
DIALERS
);

17 
düŒöío
 = 0;

20 
agaö
:

21 i‡(
	`fgës
(
düŒöe
, 
MAXLINE
, 
Âdül
Ë=
NULL
)

23 
düŒöío
++;

24 i‡((
düÕå
->
düÀr
 = 
	`°πok
(
düŒöe
, 
WHITE
)Ë=
NULL
) {

25 i‡(
düŒöe
[0] == '\n')

26 
agaö
;

27 
	`log_quô
("missing `dialer' in Dialers file,Üine %d",

28 
düŒöío
);

30 i‡(
düÕå
->
düÀr
[0] == '#')

31 
agaö
;

32 i‡((
düÕå
->
sub
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

33 
	`log_quô
("missing `sub' in Dialers file,Üine %d",

34 
düŒöío
);

35 i‡((
düÕå
->
exp£nd
 = 
	`°πok
(
NULL
, "\n")) == NULL)

36 
	`log_quô
("missing `expsend' in Dialers file,Üine %d",

37 
düŒöío
);

40 
	}
}

43 
	$dül_ªw
()

45 i‡(
Âdül
 !
NULL
)

46 
	`ªwöd
(
Âdül
);

47 
düŒöío
 = 0;

48 
	}
}

54 
	$dül_föd
(
DüÀrs
 *
düÕå
, c⁄° 
Devi˚s
 *
dev±r
)

56 
	`dül_ªw
();

57 
	`dül_√xt
(
düÕå
) >= 0) {

58 i‡(
	`°rcmp
(
düÕå
->
düÀr
, 
dev±r
->dialer) == 0)

61 
	`•rötf
(
îrmsg
, "düÀ∏`%s'ÇŸ found\n", 
düÕå
->
düÀr
);

63 
	}
}

	@calld/expectstr.c

1 
	~"ˇŒd.h
"

3 
	#EXPALRM
 45

	)

5 
	gex∑œrm
 = 
EXPALRM
;

6 vﬁ©ûê
sig_©omic_t
 
	gˇught_Ærm
;

8 
size_t


9 
	$exp_ªad
(
fd
, *
buf
)

11 i‡(
ˇught_Ærm
) {

12 
	`DEBUG
("\nreadÅimeout");

15 i‡(
	`ªad
(
fd
, 
buf
, 1) == 1) {

16 
	`DEBUG_NONL
("%s", 
	`˘l_°r
(*
buf
));

19 i‡(
î∫o
 =
EINTR
 && 
ˇught_Ærm
)

20 
	`DEBUG
("\nreadÅimeout");

22 
	`log_sys
("readÉrror");

24 
	}
}

27 
	$sig_Ærm
(
signo
)

29 
ˇught_Ærm
 = 1;

30 
	}
}

33 
	$ex≥˘_°r
(
fd
, *
±r
)

35 
exp°r
[
MAXLINE
], 
öbuf
[MAXLINE];

36 
c
;

37 *
§c
, *
d°
, *
ö±r
, *
cmµå
;

38 
i
, 
m©chÀn
;

40 i‡(
	`°rcmp
(
±r
, "\"\"") == 0)

41 
ªtu∫ok
;

46 
§c
 = 
±r
, 
d°
 = 
exp°r
; (
c
 = *src++) != 0; ) {

47 i‡(
c
 == '\\') {

48 i‡(*
§c
 == 0) {

49 
	`•rötf
(
îrmsg
, "övÆidÉx≥˘ såög: %s\n", 
±r
);

52 
c
 = *
§c
++;

53 
c
) {

55 
c
 = '\r';

59 
c
 = ' ';

64 
	`•rötf
(
îrmsg
, "unknownÉxpectÉscape char: \\%s\n",

65 
	`˘l_°r
(
c
));

69 *
d°
++ = 
c
;

71 *
d°
 = 0;

72 
m©chÀn
 = 
	`°æí
(
exp°r
);

73 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

74 
	`log_quô
("signalÉrror");

75 
ˇught_Ærm
 = 0;

77 
	`Æ¨m
(
ex∑œrm
);

79 i‡(
	`exp_ªad
(
fd
, &
c
) < 0)

81 } 
c
 !
exp°r
[0]);

82 
cmµå
 = 
ö±r
 = 
öbuf
;

83 *
ö±r
 = 
c
;

84 
i
 = 1; i < 
m©chÀn
; i++) {

85 
ö±r
++;

86 i‡(
	`exp_ªad
(
fd
, 
ö±r
) < 0)

90 i‡(
	`°∫cmp
(
cmµå
, 
exp°r
, 
m©chÀn
) == 0)

92 
ö±r
++;

93 i‡(
	`exp_ªad
(
fd
, 
ö±r
) < 0)

95 
cmµå
++;

98 
ªtu∫ok
:

99 
	`Æ¨m
(0);

100 
	`DEBUG
("\nexpect: got it");

102 
	}
}

	@calld/lock.c

1 
	~"ˇŒd.h
"

4 *
	mlöe
;

6 
pid_t
 
	mpid
;

8 } 
	tLock
;

9 
Lock
 *
	glock
 = 
NULL
;

10 
	glock_size
;

11 
	g∆ocks
;

19 
Lock
 *

20 
	$föd_löe
(*
löe
)

22 
i
;

23 
Lock
 *
Õå
;

25 
i
 = 0; i < 
∆ocks
; i++) {

26 i‡(
	`°rcmp
(
löe
, 
lock
[
i
].line) == 0)

27 (&
lock
[
i
]);

34 i‡(
∆ocks
 >
lock_size
) {

35 i‡(
lock
 =
NULL
)

36 
lock
 = 
	`mÆloc
(
NALLOC
 * (
Lock
));

38 
lock
 = 
	`ªÆloc
÷ock, (
lock_size
 + 
NALLOC
Ë* (
Lock
));

39 i‡(
lock
 =
NULL
)

40 
	`îr_sys
("can'tálloc forÜockárray");

41 
lock_size
 +
NALLOC
;

44 
Õå
 = &
lock
[
∆ocks
++];

45 i‡((
Õå
->
löe
 = 
	`mÆloc
(
	`°æí
÷öeË+ 1)Ë=
NULL
)

46 
	`log_sys
("mallocÉrror");

47 
	`°r˝y
(
Õå
->
löe
,Üine);

48 
Õå
->
pid
 = 0;

49 (
Õå
);

50 
	}
}

53 
	$lock_£t
(*
löe
, 
pid_t
 
pid
)

55 
Lock
 *
Õå
;

57 
	`log_msg
("lockög %†f‹Öid %d", 
löe
, 
pid
);

58 
Õå
 = 
	`föd_löe
(
löe
);

59 
Õå
->
pid
 =Öid;

60 
	}
}

63 
	$lock_ªl
(
pid_t
 
pid
)

65 
Lock
 *
Õå
;

67 
Õå
 = &
lock
[0];Ü±∏< &lock[
∆ocks
];Üptr++) {

68 i‡(
Õå
->
pid
 ==Öid) {

69 
	`log_msg
("u∆ockög %†f‹Öid %d", 
Õå
->
löe
, 
pid
);

70 
Õå
->
pid
 = 0;

74 
	`log_msg
("ˇn'àfödÜock f‹Öid = %d", 
pid
);

75 
	}
}

77 
pid_t


78 
	$is_locked
(*
löe
)

80 (
	`föd_löe
(
löe
)->
pid
);

81 
	}
}

	@calld/loop.c

1 
	~"ˇŒd.h
"

2 
	~<î∫o.h
>

4 
˛i_d⁄e
();

5 
chûd_d⁄e
();

11 
fd_£t
 
	gÆl£t
;

14 
	$lo›
()

16 
i
, 
n
, 
maxfd
, 
maxi
, 
li°ífd
, 
ƒód
;

17 
buf
[
MAXLINE
];

18 
Clõ¡
 *
˛ùå
;

19 
uid_t
 
uid
;

20 
fd_£t
 
r£t
;

22 i‡(
	`sig«l_öå
(
SIGCHLD
, 
sig_chld
Ë=
SIG_ERR
)

23 
	`log_sys
("signalÉrror");

28 i‡((
li°ífd
 = 
	`£rv_li°í
(
CS_CALL
)) < 0)

29 
	`log_sys
("serv_listenÉrror");

31 
	`FD_ZERO
(&
Æl£t
);

32 
	`FD_SET
(
li°ífd
, &
Æl£t
);

33 
maxfd
 = 
li°ífd
;

34 
maxi
 = -1;

37 i‡(
chld_Êag
)

38 
	`chûd_d⁄e
(
maxi
);

39 
r£t
 = 
Æl£t
;

40 i‡((
n
 = 
	`£À˘
(
maxfd
 + 1, &
r£t
, 
NULL
, NULL, NULL)) < 0) {

41 i‡(
î∫o
 =
EINTR
) {

45 
	`chûd_d⁄e
(
maxi
);

48 
	`log_sys
("selectÉrror");

52 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

56 i‡((
˛ifd
 = 
	`£rv_ac˚±
(
li°ífd
, &
uid
)) < 0)

57 
	`log_sys
("£rv_ac˚±Éº‹: %d", 
˛ifd
);

58 
i
 = 
	`˛õ¡_add
(
˛ifd
, 
uid
);

59 
	`FD_SET
(
˛ifd
, &
Æl£t
);

60 i‡(
˛ifd
 > 
maxfd
)

61 
maxfd
 = 
˛ifd
;

62 i‡(
i
 > 
maxi
)

63 
maxi
 = 
i
;

64 
	`log_msg
("√w c⁄√˘i⁄: uid %d, fd %d", 
uid
, 
˛ifd
);

72 
˛ùå
 = &
˛õ¡
[0]; clùå <&˛õ¡[
maxi
]; cliptr++) {

73 i‡((
˛ifd
 = 
˛ùå
->
fd
) < 0)

75 i‡(
	`FD_ISSET
(
˛ifd
, &
r£t
)) {

79 i‡((
ƒód
 = 
	`ªad
(
˛ifd
, 
buf
, 
MAXLINE
)) < 0) {

80 
	`log_sys
("ªadÉº‹ o¿fd %d", 
˛ifd
);

81 } i‡(
ƒód
 == 0) {

87 
	`log_msg
("closed: uid %d, fd %d",

88 
˛ùå
->
uid
, 
˛ifd
);

89 
	`lock_ªl
(
˛ùå
->
pid
);

90 
	`˛i_d⁄e
(
˛ifd
);

98 i‡(
buf
[
ƒód
-1] != 0) {

99 
	`log_quô
("request from uid %dÇotÇullÅerminated:"

100 " %*.*s", 
uid
, 
ƒód
,Çªad, 
buf
);

101 
	`˛i_d⁄e
(
˛ifd
);

104 
	`log_msg
("°¨tög: %s, from uid %d", 
buf
, 
uid
);

111 i‡(
	`buf_¨gs
(
buf
, 
˛i_¨gs
) < 0)

112 
	`log_quô
("comm™dÜöêîr‹: %s", 
buf
);

113 
˛ùå
->
Debug
 = Debug;

114 
˛ùå
->
∑rôy
 =Öarity;

115 
	`°r˝y
(
˛ùå
->
sy¢ame
, sysname);

116 
	`°r˝y
(
˛ùå
->
•ìd
, (•ìd =
NULL
) ? "" : speed);

117 
˛ùå
->
chûdd⁄e
 = 0;

118 
˛ùå
->
sys·ñl
 = 0;

119 
˛ùå
->
found⁄e
 = 0;

121 i‡(
	`ªque°
(
˛ùå
) < 0) {

125 i‡(
	`£nd_îr
(
˛ùå
->
fd
, -1, 
îrmsg
) < 0)

126 
	`log_sys
("send_errÉrror");

127 
	`˛i_d⁄e
(
˛ifd
);

138 
	}
}

146 
	$chûd_d⁄e
(
maxi
)

148 
Clõ¡
 *
˛ùå
;

150 
agaö
:

151 
chld_Êag
 = 0;

152 
˛ùå
 = &
˛õ¡
[0]; clùå <&˛õ¡[
maxi
]; cliptr++) {

153 i‡((
˛ifd
 = 
˛ùå
->
fd
) < 0)

155 i‡(
˛ùå
->
chûdd⁄e
) {

156 
	`log_msg
("child done:Öid %d, status %d",

157 
˛ùå
->
pid
, clùå->
chûdd⁄e
-1);

164 i‡(
˛ùå
->
chûdd⁄e
 == 1) {

165 
˛ùå
->
chûdd⁄e
 = 0;

173 
˛ùå
->
chûdd⁄e
 = 0;

174 
	`lock_ªl
(
˛ùå
->
pid
);

175 i‡(
	`ªque°
(
˛ùå
) < 0) {

179 i‡(
	`£nd_îr
(
˛ùå
->
fd
, -1, 
îrmsg
) < 0)

180 
	`log_sys
("send_errÉrror");

181 
	`˛i_d⁄e
(
˛ifd
);

189 i‡(
chld_Êag
)

190 
agaö
;

191 
	}
}

197 
	$˛i_d⁄e
(
˛ifd
)

199 
	`˛õ¡_dñ
(
˛ifd
);

200 
	`FD_CLR
(
˛ifd
, &
Æl£t
);

201 
	`˛o£
(
˛ifd
);

202 
	}
}

	@calld/main.c

1 
	~"ˇŒd.h
"

2 
	~<sy¶og.h
>

4 
	g˛ifd
, 
	glog_to_°dîr
, 
	g˛õ¡_size
;

5 
	gDebug
;

6 
	gîrmsg
[
MAXLINE
];

7 *
	g•ìd
, *
	gsy¢ame
;

8 
uid_t
 
	guid
;

9 
Clõ¡
 *
	g˛õ¡
 = 
NULL
;

10 
Sy°ems
 
	gsy°ems
;

11 
Devi˚s
 
	gdevi˚s
;

12 
DüÀrs
 
	gdüÀrs
;

13 vﬁ©ûê
sig_©omic_t
 
	gchld_Êag
;

14 
∑rôy
 
	g∑rôy
 = 
NONE
;

17 
	$maö
(
¨gc
, *
¨gv
[])

19 
c
;

21 
	`log_›í
("ˇŒd", 
LOG_PID
, 
LOG_USER
);

23 
›ãº
 = 0;

24 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "d")Ë!
EOF
) {

25 
c
) {

27 
log_to_°dîr
 = 1;

31 
	`log_quô
("uƒecognized o±i⁄: -%c", 
›t›t
);

35 i‡(
log_to_°dîr
 == 0)

36 
	`d´m⁄ize
("calld");

38 
	`lo›
();

39 
	}
}

	@calld/request.c

1 
	~"ˇŒd.h
"

4 
	$ªque°
(
Clõ¡
 *
˛ùå
)

6 
pid_t
 
pid
;

11 
îrmsg
[0] = 0;

12 
	`sys_po¢
(
˛ùå
->
sys·ñl
);

13 (
˛ùå
->
sys·ñl
 = 
	`sys_√xt
(&
sy°ems
)) >= 0) {

14 i‡(
	`°rcmp
(
˛ùå
->
sy¢ame
, 
sy°ems
.
«me
) == 0) {

19 i‡(
˛ùå
->
•ìd
[0] != 0 &&

20 
	`°rcmp
(
˛ùå
->
•ìd
, 
sy°ems
.
˛ass
) != 0)

23 
	`DEBUG
("åyög sys: %s, %s, %s, %s", 
sy°ems
.
«me
,

24 
sy°ems
.
ty≥
, sy°ems.
˛ass
, sy°ems.
ph⁄e
);

25 
˛ùå
->
found⁄e
++;

26 i‡(
	`dev_föd
(&
devi˚s
, &
sy°ems
) < 0)

29 
	`DEBUG
("åyög dev: %s, %s, %s, %s", 
devi˚s
.
ty≥
,

30 
devi˚s
.
löe
, devi˚s.
˛ass
, devi˚s.
düÀr
);

31 i‡((
pid
 = 
	`is_locked
(
devi˚s
.
löe
)) != 0) {

32 
	`•rötf
(
îrmsg
, "device `%s'álreadyÜocked byÖid %d\n",

33 
devi˚s
.
löe
, 
pid
);

41 
	`TELL_WAIT
();

42 i‡((
˛ùå
->
pid
 = 
	`f‹k
()) < 0) {

43 
	`log_sys
("forkÉrror");

44 } i‡(
˛ùå
->
pid
 == 0) {

45 
	`WAIT_PARENT
();

46 
	`chûd_dül
(
˛ùå
);

50 
	`lock_£t
(
devi˚s
.
löe
, 
˛ùå
->
pid
);

55 
	`TELL_CHILD
(
˛ùå
->
pid
);

63 i‡(
˛ùå
->
found⁄e
 == 0)

64 
	`•rötf
(
îrmsg
, "sy°em `%s'ÇŸ found\n", 
˛ùå
->
sy¢ame
);

65 i‡(
îrmsg
[0] == 0)

66 
	`•rötf
(
îrmsg
, "unableÅo connectÅo system `%s'\n",

67 
˛ùå
->
sy¢ame
);

69 
	}
}

	@calld/sendstr.c

1 
	~"ˇŒd.h
"

4 
	$£nd_°r
(
fd
, *
±r
, *
ph⁄e
, 
echocheck
)

6 
c
, 
ãmpc
;

11 (
c
 = *
±r
++) != 0) {

12 i‡(
c
 == '\\') {

13 i‡(*
±r
 == 0) {

14 
	`•rötf
(
îrmsg
, "backslashátÉnd of send string\n");

17 
c
 = *
±r
++;

19 
c
) {

21 i‡(*
±r
 == 0)

22 
ªtu∫ok
;

26 
	`DEBUG_NONL
("<delay>");

27 
	`¶ìp
(2);

31 
	`DEBUG_NONL
("<pause>");

32 
	`¶ìp_us
(250000);

36 
	`DEBUG_NONL
("<echo check off>");

37 
echocheck
 = 0;

41 
	`DEBUG_NONL
("<echo check on>");

42 
echocheck
 = 1;

46 
	`£nd_°r
(
fd
, 
ph⁄e
,Öh⁄e, 
echocheck
);

50 
c
 = '\r';

54 
c
 = ' ';

59 
	`•rötf
(
îrmsg
, "unknown sendÉscape char: \\%s\n",

60 
	`˘l_°r
(
c
));

65 
	`DEBUG_NONL
("%s", 
	`˘l_°r
(
c
));

66 i‡(
	`wrôe
(
fd
, &
c
, 1) != 1)

67 
	`log_sys
("writeÉrror");

68 i‡(
echocheck
) {

70 i‡(
	`ªad
(
fd
, &
ãmpc
, 1) != 1)

71 
	`log_sys
("readÉrror");

72 
	`DEBUG_NONL
("{%s}", 
	`˘l_°r
(
ãmpc
));

73 } 
ãmpc
 !
c
);

76 
c
 = '\r';

77 
	`DEBUG_NONL
("%s", 
	`˘l_°r
(
c
));

78 i‡(
	`wrôe
(
fd
, &
c
, 1) != 1)

79 
	`log_sys
("writeÉrror");

81 
ªtu∫ok
:

82 
	`DEBUG
("");

84 
	}
}

	@calld/sigchld.c

1 
	~"ˇŒd.h
"

2 
	~<sys/waô.h
>

9 
	$sig_chld
(
signo
)

11 
°©
, 
î∫o_ßve
;

12 
pid_t
 
pid
;

14 
î∫o_ßve
 = 
î∫o
;

15 
chld_Êag
 = 1;

16 i‡((
pid
 = 
	`waôpid
(-1, &
°©
, 0)) <= 0)

17 
	`log_sys
("waitpidÉrror");

19 i‡(
	`WIFEXITED
(
°©
) != 0)

20 
	`˛õ¡_sigchld
(
pid
, 
	`WEXITSTATUS
(
°©
)+1);

22 
	`log_msg
("chûd %dÅîmö©edábn‹mÆly: %04x", 
pid
, 
°©
);

24 
î∫o
 = 
î∫o_ßve
;

25 
	}
}

	@calld/sysfile.c

1 
	~"ˇŒd.h
"

3 
FILE
 *
	gÂsys
 = 
NULL
;

4 
	gsy¶öío
;

5 
	gsy¶öe
[
MAXLINE
];

12 
	$sys_√xt
(
Sy°ems
 *
sy•å
)

14 i‡(
Âsys
 =
NULL
) {

15 i‡((
Âsys
 = 
	`f›í
(
SYSTEMS
, "r")Ë=
NULL
)

16 
	`log_sys
("ˇn'à›í %s", 
SYSTEMS
);

17 
sy¶öío
 = 0;

20 
agaö
:

21 i‡(
	`fgës
(
sy¶öe
, 
MAXLINE
, 
Âsys
Ë=
NULL
)

23 
sy¶öío
++;

24 i‡((
sy•å
->
«me
 = 
	`°πok
(
sy¶öe
, 
WHITE
)Ë=
NULL
) {

25 i‡(
sy¶öe
[0] == '\n')

26 
agaö
;

27 
	`log_quô
("missög `«me' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

29 i‡(
sy•å
->
«me
[0] == '#')

30 
agaö
;

31 i‡((
sy•å
->
time
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

32 
	`log_quô
("missög `time' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

33 i‡((
sy•å
->
ty≥
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

34 
	`log_quô
("missög `ty≥' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

35 i‡((
sy•å
->
˛ass
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

36 
	`log_quô
("missög `˛ass' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

37 i‡((
sy•å
->
ph⁄e
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

38 
	`log_quô
("missög `ph⁄e' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

39 i‡((
sy•å
->
logö
 = 
	`°πok
(
NULL
, "\n")) == NULL)

40 
	`log_quô
("missög `logö' i¿Sy°em†fûe,Üöê%d", 
sy¶öío
);

42 (
	`·ñl
(
Âsys
));

43 
	}
}

46 
	$sys_ªw
()

48 i‡(
Âsys
 !
NULL
)

49 
	`ªwöd
(
Âsys
);

50 
sy¶öío
 = 0;

51 
	}
}

54 
	$sys_po¢
(
po¢
)

56 i‡(
po¢
 == 0)

57 
	`sys_ªw
();

58 i‡(
	`f£ek
(
Âsys
, 
po¢
, 
SEEK_SET
) != 0)

59 
	`log_sys
("fseekÉrror");

60 
	}
}

	@calld/ttydial.c

1 
	~"ˇŒd.h
"

4 
	$ây_dül
(
fd
, *
ph⁄e
, *
düÀr
, *
sub
, *
exp£nd
)

6 *
±r
;

8 
±r
 = 
	`°πok
(
exp£nd
, 
WHITE
);

10 
	`DEBUG_NONL
("ex≥˘ = %s\ƒód: ", 
±r
);

11 i‡(
	`ex≥˘_°r
(
fd
, 
±r
) < 0)

14 i‡((
±r
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

16 
	`DEBUG_NONL
("£nd = %s\nwrôe: ", 
±r
);

17 i‡(
	`£nd_°r
(
fd
, 
±r
, 
ph⁄e
, 0) < 0)

20 i‡((
±r
 = 
	`°πok
(
NULL
, 
WHITE
)) == NULL)

23 
	}
}

	@calld/ttyopen.c

1 
	~"ˇŒd.h
"

2 
	~<f˙é.h
>

8 
	$ây_›í
(*
˛ass
, *
löe
, 
∑rôy
Ö¨ôy, 
modem
)

10 
fd
, 
baud
;

11 
dev«me
[100];

12 
ãrmios
 
ãrm
;

17 
	`°r˝y
(
dev«me
, "/dev/");

18 
	`°rˇt
(
dev«me
, 
löe
);

19 i‡((
fd
 = 
	`›í
(
dev«me
, 
O_RDWR
 | 
O_NONBLOCK
)) < 0) {

20 
	`•rötf
(
îrmsg
, "can't open %s: %s\n",

21 
dev«me
, 
	`°ªº‹
(
î∫o
));

24 i‡(
	`ißây
(
fd
) == 0) {

25 
	`•rötf
(
îrmsg
, "%†i†nŸáÅty\n", 
dev«me
);

32 i‡(
	`tcgë©å
(
fd
, &
ãrm
) < 0)

33 
	`log_sys
("tcgetattrÉrror");

35 i‡(
∑rôy
 =
NONE
)

36 
ãrm
.
c_cÊag
 = 
CS8
;

37 i‡(
∑rôy
 =
EVEN
)

38 
ãrm
.
c_cÊag
 = 
CS7
 | 
PARENB
;

39 i‡(
∑rôy
 =
ODD
)

40 
ãrm
.
c_cÊag
 = 
CS7
 | 
PARENB
 | 
PARODD
;

42 
	`log_quô
("unknownÖarity");

43 
ãrm
.
c_cÊag
 |
CREAD
 |

44 
HUPCL
;

46 i‡(
modem
 == 0)

47 
ãrm
.
c_cÊag
 |
CLOCAL
;

49 
ãrm
.
c_oÊag
 = 0;

50 
ãrm
.
c_iÊag
 = 
IXON
 | 
IXOFF
 |

51 
IGNBRK
 |

52 
ISTRIP
 |

53 
IGNPAR
;

54 
ãrm
.
c_lÊag
 = 0;

57 
ãrm
.
c_cc
[
VMIN
] = 1;

58 
ãrm
.
c_cc
[
VTIME
] = 0;

60 i‡(
	`°rcmp
(
˛ass
, "38400") == 0) {

61 
baud
 = 
B38400
;

62 } i‡(
	`°rcmp
(
˛ass
, "19200") == 0) {

63 
baud
 = 
B19200
;

64 } i‡(
	`°rcmp
(
˛ass
, "9600") == 0) {

65 
baud
 = 
B9600
;

66 } i‡(
	`°rcmp
(
˛ass
, "4800") == 0) {

67 
baud
 = 
B4800
;

68 } i‡(
	`°rcmp
(
˛ass
, "2400") == 0) {

69 
baud
 = 
B2400
;

70 } i‡(
	`°rcmp
(
˛ass
, "1800") == 0) {

71 
baud
 = 
B1800
;

72 } i‡(
	`°rcmp
(
˛ass
, "1200") == 0) {

73 
baud
 = 
B1200
;

74 } i‡(
	`°rcmp
(
˛ass
, "600") == 0) {

75 
baud
 = 
B600
;

76 } i‡(
	`°rcmp
(
˛ass
, "300") == 0) {

77 
baud
 = 
B300
;

78 } i‡(
	`°rcmp
(
˛ass
, "200") == 0) {

79 
baud
 = 
B200
;

80 } i‡(
	`°rcmp
(
˛ass
, "150") == 0) {

81 
baud
 = 
B150
;

82 } i‡(
	`°rcmp
(
˛ass
, "134") == 0) {

83 
baud
 = 
B134
;

84 } i‡(
	`°rcmp
(
˛ass
, "110") == 0) {

85 
baud
 = 
B110
;

86 } i‡(
	`°rcmp
(
˛ass
, "75") == 0) {

87 
baud
 = 
B75
;

88 } i‡(
	`°rcmp
(
˛ass
, "50") == 0) {

89 
baud
 = 
B50
;

91 
	`•rötf
(
îrmsg
, "övÆid baudÑ©e: %s\n", 
˛ass
);

94 
	`cf£ti•ìd
(&
ãrm
, 
baud
);

95 
	`cf£to•ìd
(&
ãrm
, 
baud
);

97 i‡(
	`tc£èâr
(
fd
, 
TCSANOW
, &
ãrm
) < 0)

98 
	`log_sys
("tcsetattrÉrror");

100 
	`DEBUG
("tty open");

101 
	`˛r_Ê
(
fd
, 
O_NONBLOCK
);

102 (
fd
);

103 
	}
}

	@daemons/init.c

1 
	~"≠ue.h
"

2 
	~<sy¶og.h
>

3 
	~<f˙é.h
>

4 
	~<sys/ªsour˚.h
>

7 
	$d´m⁄ize
(c⁄° *
cmd
)

9 
i
, 
fd0
, 
fd1
, 
fd2
;

10 
pid_t
 
pid
;

11 
æimô
 
æ
;

12 
siga˘i⁄
 
ß
;

17 
	`umask
(0);

22 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) < 0)

23 
	`îr_quô
("%s: c™'àgë fûêlimô", 
cmd
);

28 i‡((
pid
 = 
	`f‹k
()) < 0)

29 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

30 i‡(
pid
 != 0)

31 
	`exô
(0);

32 
	`£tsid
();

37 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

38 
	`sigem±y£t
(&
ß
.
ß_mask
);

39 
ß
.
ß_Êags
 = 0;

40 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0)

41 
	`îr_quô
("%s: can't ignore SIGHUP");

42 i‡((
pid
 = 
	`f‹k
()) < 0)

43 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

44 i‡(
pid
 != 0)

45 
	`exô
(0);

51 i‡(
	`chdú
("/") < 0)

52 
	`îr_quô
("%s: can't change directoryÅo /");

57 i‡(
æ
.
æim_max
 =
RLIM_INFINITY
)

58 
æ
.
æim_max
 = 1024;

59 
i
 = 0; i < 
æ
.
æim_max
; i++)

60 
	`˛o£
(
i
);

65 
fd0
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
);

66 
fd1
 = 
	`dup
(0);

67 
fd2
 = 
	`dup
(0);

72 
	`›ílog
(
cmd
, 
LOG_CONS
, 
LOG_DAEMON
);

73 i‡(
fd0
 !0 || 
fd1
 !1 || 
fd2
 != 2) {

74 
	`sy¶og
(
LOG_ERR
, "unexpected file descriptors %d %d %d",

75 
fd0
, 
fd1
, 
fd2
);

76 
	`exô
(1);

78 
	}
}

	@daemons/lockfile.c

1 
	~<uni°d.h
>

2 
	~<f˙é.h
>

5 
	$lockfûe
(
fd
)

7 
Êock
 
Ê
;

9 
Ê
.
l_ty≥
 = 
F_WRLCK
;

10 
Ê
.
l_°¨t
 = 0;

11 
Ê
.
l_whí˚
 = 
SEEK_SET
;

12 
Ê
.
l_Àn
 = 0;

13 (
	`f˙é
(
fd
, 
F_SETLK
, &
Ê
));

14 
	}
}

	@daemons/reread.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

3 
	~<sy¶og.h
>

5 
sig£t_t
 
	gmask
;

7 
Æªady_ru¬ög
();

10 
	$ªªad
()

13 
	}
}

16 
	$thr_‚
(*
¨g
)

18 
îr
, 
signo
;

21 
îr
 = 
	`sigwaô
(&
mask
, &
signo
);

22 i‡(
îr
 != 0) {

23 
	`sy¶og
(
LOG_ERR
, "sigwait failed");

24 
	`exô
(1);

27 
signo
) {

28 
SIGHUP
:

29 
	`sy¶og
(
LOG_INFO
, "Re-reading configuration file");

30 
	`ªªad
();

33 
SIGTERM
:

34 
	`sy¶og
(
LOG_INFO
, "got SIGTERM;Éxiting");

35 
	`exô
(0);

38 
	`sy¶og
(
LOG_INFO
, "u√x≥˘ed sig«»%d\n", 
signo
);

42 
	}
}

45 
	$maö
(
¨gc
, *
¨gv
[])

47 
îr
;

48 
±hªad_t
 
tid
;

49 *
cmd
;

50 
siga˘i⁄
 
ß
;

52 i‡((
cmd
 = 
	`°ºchr
(
¨gv
[0], '/')Ë=
NULL
)

53 
cmd
 = 
¨gv
[0];

55 
cmd
++;

60 
	`d´m⁄ize
(
cmd
);

65 i‡(
	`Æªady_ru¬ög
()) {

66 
	`sy¶og
(
LOG_ERR
, "daemonálreadyÑunning");

67 
	`exô
(1);

73 
ß
.
ß_h™dÀr
 = 
SIG_DFL
;

74 
	`sigem±y£t
(&
ß
.
ß_mask
);

75 
ß
.
ß_Êags
 = 0;

76 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0)

77 
	`îr_quô
("%s: can'tÑestore SIGHUP default");

78 
	`sigfûl£t
(&
mask
);

79 i‡((
îr
 = 
	`±hªad_sigmask
(
SIG_BLOCK
, &
mask
, 
NULL
)) != 0)

80 
	`îr_exô
(
îr
, "SIG_BLOCKÉrror");

85 
îr
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
thr_‚
, 0);

86 i‡(
îr
 != 0)

87 
	`îr_exô
(
îr
, "can't createÅhread");

93 
	`exô
(0);

94 
	}
}

	@daemons/reread2.c

1 
	~"≠ue.h
"

2 
	~<sy¶og.h
>

3 
	~<î∫o.h
>

5 
lockfûe
();

6 
Æªady_ru¬ög
();

9 
	$ªªad
()

12 
	}
}

15 
	$sigãrm
(
signo
)

17 
	`sy¶og
(
LOG_INFO
, "got SIGTERM;Éxiting");

18 
	`exô
(0);

19 
	}
}

22 
	$sighup
(
signo
)

24 
	`sy¶og
(
LOG_INFO
, "Re-reading configuration file");

25 
	`ªªad
();

26 
	}
}

29 
	$maö
(
¨gc
, *
¨gv
[])

31 *
cmd
;

32 
siga˘i⁄
 
ß
;

34 i‡((
cmd
 = 
	`°ºchr
(
¨gv
[0], '/')Ë=
NULL
)

35 
cmd
 = 
¨gv
[0];

37 
cmd
++;

42 
	`d´m⁄ize
(
cmd
);

47 i‡(
	`Æªady_ru¬ög
()) {

48 
	`sy¶og
(
LOG_ERR
, "daemonálreadyÑunning");

49 
	`exô
(1);

55 
ß
.
ß_h™dÀr
 = 
sigãrm
;

56 
	`sigem±y£t
(&
ß
.
ß_mask
);

57 
	`sigadd£t
(&
ß
.
ß_mask
, 
SIGHUP
);

58 
ß
.
ß_Êags
 = 0;

59 i‡(
	`siga˘i⁄
(
SIGTERM
, &
ß
, 
NULL
) < 0) {

60 
	`sy¶og
(
LOG_ERR
, "ˇn'àˇtch SIGTERM: %s", 
	`°ªº‹
(
î∫o
));

61 
	`exô
(1);

63 
ß
.
ß_h™dÀr
 = 
sighup
;

64 
	`sigem±y£t
(&
ß
.
ß_mask
);

65 
	`sigadd£t
(&
ß
.
ß_mask
, 
SIGTERM
);

66 
ß
.
ß_Êags
 = 0;

67 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0) {

68 
	`sy¶og
(
LOG_ERR
, "ˇn'àˇtch SIGHUP: %s", 
	`°ªº‹
(
î∫o
));

69 
	`exô
(1);

76 
	`exô
(0);

77 
	}
}

	@daemons/single.c

1 
	~<uni°d.h
>

2 
	~<°dlib.h
>

3 
	~<f˙é.h
>

4 
	~<sy¶og.h
>

5 
	~<°rög.h
>

6 
	~<î∫o.h
>

7 
	~<°dio.h
>

8 
	~<sys/°©.h
>

10 
	#LOCKFILE
 "/v¨/run/d´m⁄.pid"

	)

11 
	#LOCKMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IROTH
)

	)

13 
lockfûe
();

16 
	$Æªady_ru¬ög
()

18 
fd
;

19 
buf
[16];

21 
fd
 = 
	`›í
(
LOCKFILE
, 
O_RDWR
|
O_CREAT
, 
LOCKMODE
);

22 i‡(
fd
 < 0) {

23 
	`sy¶og
(
LOG_ERR
, "ˇn'à›í %s: %s", 
LOCKFILE
, 
	`°ªº‹
(
î∫o
));

24 
	`exô
(1);

26 i‡(
	`lockfûe
(
fd
) < 0) {

27 i‡(
î∫o
 =
EACCES
 ||Éºnÿ=
EAGAIN
) {

28 
	`˛o£
(
fd
);

31 
	`sy¶og
(
LOG_ERR
, "ˇn'àlock %s: %s", 
LOCKFILE
, 
	`°ªº‹
(
î∫o
));

32 
	`exô
(1);

34 
	`·runˇã
(
fd
, 0);

35 
	`•rötf
(
buf
, "%ld", ()
	`gëpid
());

36 
	`wrôe
(
fd
, 
buf
, 
	`°æí
(buf)+1);

38 
	}
}

	@datafiles/getpwnam.c

1 
	~<pwd.h
>

2 
	~<°ddef.h
>

3 
	~<°rög.h
>

5 
∑sswd
 *

6 
	$gëpw«m
(c⁄° *
«me
)

8 
∑sswd
 *
±r
;

10 
	`£çwít
();

11 (
±r
 = 
	`gëpwít
()Ë!
NULL
)

12 i‡(
	`°rcmp
(
«me
, 
±r
->
pw_«me
) == 0)

14 
	`ídpwít
();

15 (
±r
);

16 
	}
}

	@db/apue_db.h

1 #i‚de‡
_APUE_DB_H


2 
	#_APUE_DB_H


	)

4 * 
	tDBHANDLE
;

6 
DBHANDLE
 
db_›í
(const *, , ...);

7 
db_˛o£
(
DBHANDLE
);

8 *
db_„tch
(
DBHANDLE
, const *);

9 
db_°‹e
(
DBHANDLE
, const *, const *, );

10 
db_dñëe
(
DBHANDLE
, const *);

11 
db_ªwöd
(
DBHANDLE
);

12 *
db_√xåec
(
DBHANDLE
, *);

17 
	#DB_INSERT
 1

	)

18 
	#DB_REPLACE
 2

	)

19 
	#DB_STORE
 3

	)

24 
	#IDXLEN_MIN
 6

	)

25 
	#IDXLEN_MAX
 1024

	)

26 
	#DATLEN_MIN
 2

	)

27 
	#DATLEN_MAX
 1024

	)

	@db/db.c

1 
	~"≠ue.h
"

2 
	~"≠ue_db.h
"

3 
	~<f˙é.h
>

4 
	~<°d¨g.h
>

5 
	~<î∫o.h
>

6 
	~<sys/uio.h
>

13 
	#IDXLEN_SZ
 4

	)

14 
	#SEP
 ':'

	)

15 
	#SPACE
 ' '

	)

16 
	#NEWLINE
 '\n'

	)

22 
	#PTR_SZ
 6

	)

23 
	#PTR_MAX
 999999

	)

24 
	#NHASH_DEF
 137

	)

25 
	#FREE_OFF
 0

	)

26 
	#HASH_OFF
 
PTR_SZ


	)

28 
	tDBHASH
;

29 
	tCOUNT
;

35 
	midxfd
;

36 
	md©fd
;

37 *
	midxbuf
;

38 *
	md©buf
;

39 *
	m«me
;

40 
off_t
 
	midxoff
;

42 
size_t
 
	midxÀn
;

45 
off_t
 
	md©off
;

46 
size_t
 
	md©Àn
;

48 
off_t
 
	m±rvÆ
;

49 
off_t
 
	m±roff
;

50 
off_t
 
	mchaöoff
;

51 
off_t
 
	mhashoff
;

52 
DBHASH
 
	mnhash
;

53 
COUNT
 
	m˙t_dñok
;

54 
COUNT
 
	m˙t_dñîr
;

55 
COUNT
 
	m˙t_„tchok
;

56 
COUNT
 
	m˙t_„tchîr
;

57 
COUNT
 
	m˙t_√xåec
;

58 
COUNT
 
	m˙t_°‹1
;

59 
COUNT
 
	m˙t_°‹2
;

60 
COUNT
 
	m˙t_°‹3
;

61 
COUNT
 
	m˙t_°‹4
;

62 
COUNT
 
	m˙t_°‹îr
;

63 } 
	tDB
;

68 
DB
 *
_db_Æloc
();

69 
_db_dodñëe
(
DB
 *);

70 
_db_föd_™d_lock
(
DB
 *, const *, );

71 
_db_föd‰ì
(
DB
 *, , );

72 
_db_‰ì
(
DB
 *);

73 
DBHASH
 
_db_hash
(
DB
 *, const *);

74 *
_db_ªadd©
(
DB
 *);

75 
off_t
 
_db_ªadidx
(
DB
 *, off_t);

76 
off_t
 
_db_ªad±r
(
DB
 *, off_t);

77 
_db_wrôed©
(
DB
 *, c⁄° *, 
off_t
, );

78 
_db_wrôeidx
(
DB
 *, c⁄° *, 
off_t
, , off_t);

79 
_db_wrôïå
(
DB
 *, 
off_t
, off_t);

84 
DBHANDLE


85 
	$db_›í
(c⁄° *
∑th«me
, 
oÊag
, ...)

87 
DB
 *
db
;

88 
Àn
, 
mode
;

89 
size_t
 
i
;

90 
asciùå
[
PTR_SZ
 + 1],

91 
hash
[(
NHASH_DEF
 + 1Ë* 
PTR_SZ
 + 2];

93 
°©
 
°©buff
;

98 
Àn
 = 
	`°æí
(
∑th«me
);

99 i‡((
db
 = 
	`_db_Æloc
(
Àn
)Ë=
NULL
)

100 
	`îr_dump
("db_open: _db_allocÉrror for DB");

102 
db
->
nhash
 = 
NHASH_DEF
;

103 
db
->
hashoff
 = 
HASH_OFF
;

104 
	`°r˝y
(
db
->
«me
, 
∑th«me
);

105 
	`°rˇt
(
db
->
«me
, ".idx");

107 i‡(
oÊag
 & 
O_CREAT
) {

108 
va_li°
 
≠
;

110 
	`va_°¨t
(
≠
, 
oÊag
);

111 
mode
 = 
	`va_¨g
(
≠
, );

112 
	`va_íd
(
≠
);

117 
db
->
idxfd
 = 
	`›í
(db->
«me
, 
oÊag
, 
mode
);

118 
	`°r˝y
(
db
->
«me
 + 
Àn
, ".dat");

119 
db
->
d©fd
 = 
	`›í
(db->
«me
, 
oÊag
, 
mode
);

124 
db
->
idxfd
 = 
	`›í
(db->
«me
, 
oÊag
);

125 
	`°r˝y
(
db
->
«me
 + 
Àn
, ".dat");

126 
db
->
d©fd
 = 
	`›í
(db->
«me
, 
oÊag
);

129 i‡(
db
->
idxfd
 < 0 || db->
d©fd
 < 0) {

130 
	`_db_‰ì
(
db
);

131 (
NULL
);

134 i‡((
oÊag
 & (
O_CREAT
 | 
O_TRUNC
)) == (O_CREAT | O_TRUNC)) {

140 i‡(
	`wrôew_lock
(
db
->
idxfd
, 0, 
SEEK_SET
, 0) < 0)

141 
	`îr_dump
("db_open: writew_lockÉrror");

143 i‡(
	`f°©
(
db
->
idxfd
, &
°©buff
) < 0)

144 
	`îr_sys
("db_open: fstatÉrror");

146 i‡(
°©buff
.
°_size
 == 0) {

152 
	`•rötf
(
asciùå
, "%*d", 
PTR_SZ
, 0);

153 
hash
[0] = 0;

154 
i
 = 0; i < 
NHASH_DEF
 + 1; i++)

155 
	`°rˇt
(
hash
, 
asciùå
);

156 
	`°rˇt
(
hash
, "\n");

157 
i
 = 
	`°æí
(
hash
);

158 i‡(
	`wrôe
(
db
->
idxfd
, 
hash
, 
i
) != i)

159 
	`îr_dump
("db_open: index file init writeÉrror");

161 i‡(
	`un_lock
(
db
->
idxfd
, 0, 
SEEK_SET
, 0) < 0)

162 
	`îr_dump
("db_open: un_lockÉrror");

164 
	`db_ªwöd
(
db
);

165 (
db
);

166 
	}
}

171 
DB
 *

172 
	$_db_Æloc
(
«mñí
)

174 
DB
 *
db
;

179 i‡((
db
 = 
	`ˇŒoc
(1, (
DB
))Ë=
NULL
)

180 
	`îr_dump
("_db_alloc: callocÉrror for DB");

181 
db
->
idxfd
 = db->
d©fd
 = -1;

187 i‡((
db
->
«me
 = 
	`mÆloc
(
«mñí
 + 5)Ë=
NULL
)

188 
	`îr_dump
("_db_alloc: mallocÉrror forÇame");

194 i‡((
db
->
idxbuf
 = 
	`mÆloc
(
IDXLEN_MAX
 + 2)Ë=
NULL
)

195 
	`îr_dump
("_db_alloc: mallocÉrror for index buffer");

196 i‡((
db
->
d©buf
 = 
	`mÆloc
(
DATLEN_MAX
 + 2)Ë=
NULL
)

197 
	`îr_dump
("_db_alloc: mallocÉrror for data buffer");

198 (
db
);

199 
	}
}

205 
	$db_˛o£
(
DBHANDLE
 
h
)

207 
	`_db_‰ì
((
DB
 *)
h
);

208 
	}
}

215 
	$_db_‰ì
(
DB
 *
db
)

217 i‡(
db
->
idxfd
 >= 0)

218 
	`˛o£
(
db
->
idxfd
);

219 i‡(
db
->
d©fd
 >= 0)

220 
	`˛o£
(
db
->
d©fd
);

221 i‡(
db
->
idxbuf
 !
NULL
)

222 
	`‰ì
(
db
->
idxbuf
);

223 i‡(
db
->
d©buf
 !
NULL
)

224 
	`‰ì
(
db
->
d©buf
);

225 i‡(
db
->
«me
 !
NULL
)

226 
	`‰ì
(
db
->
«me
);

227 
	`‰ì
(
db
);

228 
	}
}

234 
	$db_„tch
(
DBHANDLE
 
h
, c⁄° *
key
)

236 
DB
 *
db
 = 
h
;

237 *
±r
;

239 i‡(
	`_db_föd_™d_lock
(
db
, 
key
, 0) < 0) {

240 
±r
 = 
NULL
;

241 
db
->
˙t_„tchîr
++;

243 
±r
 = 
	`_db_ªadd©
(
db
);

244 
db
->
˙t_„tchok
++;

250 i‡(
	`un_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

251 
	`îr_dump
("db_fetch: un_lockÉrror");

252 (
±r
);

253 
	}
}

260 
	$_db_föd_™d_lock
(
DB
 *
db
, c⁄° *
key
, 
wrôñock
)

262 
off_t
 
off£t
, 
√xtoff£t
;

270 
db
->
chaöoff
 = (
	`_db_hash
(db, 
key
Ë* 
PTR_SZ
Ë+ db->
hashoff
;

271 
db
->
±roff
 = db->
chaöoff
;

277 i‡(
wrôñock
) {

278 i‡(
	`wrôew_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

279 
	`îr_dump
("_db_find_and_lock: writew_lockÉrror");

281 i‡(
	`ªadw_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

282 
	`îr_dump
("_db_find_and_lock:Ñeadw_lockÉrror");

289 
off£t
 = 
	`_db_ªad±r
(
db
, db->
±roff
);

290 
off£t
 != 0) {

291 
√xtoff£t
 = 
	`_db_ªadidx
(
db
, 
off£t
);

292 i‡(
	`°rcmp
(
db
->
idxbuf
, 
key
) == 0)

294 
db
->
±roff
 = 
off£t
;

295 
off£t
 = 
√xtoff£t
;

300 (
off£t
 == 0 ? -1 : 0);

301 
	}
}

306 
DBHASH


307 
	$_db_hash
(
DB
 *
db
, c⁄° *
key
)

309 
DBHASH
 
hvÆ
 = 0;

310 
c
;

311 
i
;

313 
i
 = 1; (
c
 = *
key
++) != 0; i++)

314 
hvÆ
 +
c
 * 
i
;

315 (
hvÆ
 % 
db
->
nhash
);

316 
	}
}

323 
off_t


324 
	$_db_ªad±r
(
DB
 *
db
, 
off_t
 
off£t
)

326 
asciùå
[
PTR_SZ
 + 1];

328 i‡(
	`l£ek
(
db
->
idxfd
, 
off£t
, 
SEEK_SET
) == -1)

329 
	`îr_dump
("_db_readptr:ÜseekÉrrorÅoÖtr field");

330 i‡(
	`ªad
(
db
->
idxfd
, 
asciùå
, 
PTR_SZ
) != PTR_SZ)

331 
	`îr_dump
("_db_readptr:ÑeadÉrror ofÖtr field");

332 
asciùå
[
PTR_SZ
] = 0;

333 (
	`©ﬁ
(
asciùå
));

334 
	}
}

343 
off_t


344 
	$_db_ªadidx
(
DB
 *
db
, 
off_t
 
off£t
)

346 
ssize_t
 
i
;

347 *
±r1
, *
±r2
;

348 
asciùå
[
PTR_SZ
 + 1], 
asciûí
[
IDXLEN_SZ
 + 1];

349 
iovec
 
iov
[2];

356 i‡((
db
->
idxoff
 = 
	`l£ek
(db->
idxfd
, 
off£t
,

357 
off£t
 =0 ? 
SEEK_CUR
 : 
SEEK_SET
)) == -1)

358 
	`îr_dump
("_db_readidx:ÜseekÉrror");

365 
iov
[0].
iov_ba£
 = 
asciùå
;

366 
iov
[0].
iov_Àn
 = 
PTR_SZ
;

367 
iov
[1].
iov_ba£
 = 
asciûí
;

368 
iov
[1].
iov_Àn
 = 
IDXLEN_SZ
;

369 i‡((
i
 = 
	`ªadv
(
db
->
idxfd
, &
iov
[0], 2)Ë!
PTR_SZ
 + 
IDXLEN_SZ
) {

370 i‡(
i
 =0 && 
off£t
 == 0)

372 
	`îr_dump
("_db_readidx:ÑeadvÉrror of indexÑecord");

378 
asciùå
[
PTR_SZ
] = 0;

379 
db
->
±rvÆ
 = 
	`©ﬁ
(
asciùå
);

381 
asciûí
[
IDXLEN_SZ
] = 0;

382 i‡((
db
->
idxÀn
 = 
	`©oi
(
asciûí
)Ë< 
IDXLEN_MIN
 ||

383 
db
->
idxÀn
 > 
IDXLEN_MAX
)

384 
	`îr_dump
("_db_readidx: invalidÜength");

390 i‡((
i
 = 
	`ªad
(
db
->
idxfd
, db->
idxbuf
, db->
idxÀn
)) != db->idxlen)

391 
	`îr_dump
("_db_readidx:ÑeadÉrror of indexÑecord");

392 i‡(
db
->
idxbuf
[db->
idxÀn
-1] !
NEWLINE
)

393 
	`îr_dump
("_db_readidx: missingÇewline");

394 
db
->
idxbuf
[db->
idxÀn
-1] = 0;

399 i‡((
±r1
 = 
	`°rchr
(
db
->
idxbuf
, 
SEP
)Ë=
NULL
)

400 
	`îr_dump
("_db_readidx: missing first separator");

401 *
±r1
++ = 0;

403 i‡((
±r2
 = 
	`°rchr
(
±r1
, 
SEP
)Ë=
NULL
)

404 
	`îr_dump
("_db_readidx: missing second separator");

405 *
±r2
++ = 0;

407 i‡(
	`°rchr
(
±r2
, 
SEP
Ë!
NULL
)

408 
	`îr_dump
("_db_readidx:Åoo many separators");

413 i‡((
db
->
d©off
 = 
	`©ﬁ
(
±r1
)) < 0)

414 
	`îr_dump
("_db_readidx: starting offset < 0");

415 i‡((
db
->
d©Àn
 = 
	`©ﬁ
(
±r2
)Ë<0 || db->d©À¿> 
DATLEN_MAX
)

416 
	`îr_dump
("_db_readidx: invalidÜength");

417 (
db
->
±rvÆ
);

418 
	}
}

425 
	$_db_ªadd©
(
DB
 *
db
)

427 i‡(
	`l£ek
(
db
->
d©fd
, db->
d©off
, 
SEEK_SET
) == -1)

428 
	`îr_dump
("_db_readdat:ÜseekÉrror");

429 i‡(
	`ªad
(
db
->
d©fd
, db->
d©buf
, db->
d©Àn
) != db->datlen)

430 
	`îr_dump
("_db_readdat:ÑeadÉrror");

431 i‡(
db
->
d©buf
[db->
d©Àn
-1] !
NEWLINE
)

432 
	`îr_dump
("_db_readdat: missingÇewline");

433 
db
->
d©buf
[db->
d©Àn
-1] = 0;

434 (
db
->
d©buf
);

435 
	}
}

441 
	$db_dñëe
(
DBHANDLE
 
h
, c⁄° *
key
)

443 
DB
 *
db
 = 
h
;

444 
rc
 = 0;

446 i‡(
	`_db_föd_™d_lock
(
db
, 
key
, 1) == 0) {

447 
	`_db_dodñëe
(
db
);

448 
db
->
˙t_dñok
++;

450 
rc
 = -1;

451 
db
->
˙t_dñîr
++;

453 i‡(
	`un_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

454 
	`îr_dump
("db_delete: un_lockÉrror");

455 (
rc
);

456 
	}
}

464 
	$_db_dodñëe
(
DB
 *
db
)

466 
i
;

467 *
±r
;

468 
off_t
 
‰ì±r
, 
ßvïå
;

473 
±r
 = 
db
->
d©buf
, 
i
 = 0; i < db->
d©Àn
 - 1; i++)

474 *
±r
++ = 
SPACE
;

475 *
±r
 = 0;

476 
±r
 = 
db
->
idxbuf
;

477 *
±r
)

478 *
±r
++ = 
SPACE
;

483 i‡(
	`wrôew_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

484 
	`îr_dump
("_db_dodelete: writew_lockÉrror");

489 
	`_db_wrôed©
(
db
, db->
d©buf
, db->
d©off
, 
SEEK_SET
);

496 
‰ì±r
 = 
	`_db_ªad±r
(
db
, 
FREE_OFF
);

502 
ßvïå
 = 
db
->
±rvÆ
;

509 
	`_db_wrôeidx
(
db
, db->
idxbuf
, db->
idxoff
, 
SEEK_SET
, 
‰ì±r
);

514 
	`_db_wrôïå
(
db
, 
FREE_OFF
, db->
idxoff
);

522 
	`_db_wrôïå
(
db
, db->
±roff
, 
ßvïå
);

523 i‡(
	`un_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

524 
	`îr_dump
("_db_dodelete: un_lockÉrror");

525 
	}
}

532 
	$_db_wrôed©
(
DB
 *
db
, c⁄° *
d©a
, 
off_t
 
off£t
, 
whí˚
)

534 
iovec
 
iov
[2];

535 
√wlöe
 = 
NEWLINE
;

542 i‡(
whí˚
 =
SEEK_END
)

543 i‡(
	`wrôew_lock
(
db
->
d©fd
, 0, 
SEEK_SET
, 0) < 0)

544 
	`îr_dump
("_db_writedat: writew_lockÉrror");

546 i‡((
db
->
d©off
 = 
	`l£ek
(db->
d©fd
, 
off£t
, 
whí˚
)) == -1)

547 
	`îr_dump
("_db_writedat:ÜseekÉrror");

548 
db
->
d©Àn
 = 
	`°æí
(
d©a
) + 1;

550 
iov
[0].
iov_ba£
 = (*Ë
d©a
;

551 
iov
[0].
iov_Àn
 = 
db
->
d©Àn
 - 1;

552 
iov
[1].
iov_ba£
 = &
√wlöe
;

553 
iov
[1].
iov_Àn
 = 1;

554 i‡(
	`wrôev
(
db
->
d©fd
, &
iov
[0], 2Ë!db->
d©Àn
)

555 
	`îr_dump
("_db_writedat: writevÉrror of dataÑecord");

557 i‡(
whí˚
 =
SEEK_END
)

558 i‡(
	`un_lock
(
db
->
d©fd
, 0, 
SEEK_SET
, 0) < 0)

559 
	`îr_dump
("_db_writedat: un_lockÉrror");

560 
	}
}

568 
	$_db_wrôeidx
(
DB
 *
db
, c⁄° *
key
,

569 
off_t
 
off£t
, 
whí˚
, off_à
±rvÆ
)

571 
iovec
 
iov
[2];

572 
asciùåÀn
[
PTR_SZ
 + 
IDXLEN_SZ
 +1];

573 
Àn
;

574 *
fmt
;

576 i‡((
db
->
±rvÆ
 =ÖåvÆË< 0 ||ÖåvÆ > 
PTR_MAX
)

577 
	`îr_quô
("_db_wrôeidx: invÆidÖå: %d", 
±rvÆ
);

578 i‡((
off_t
) == ())

579 
fmt
 = "%s%c%lld%c%d\n";

581 
fmt
 = "%s%c%ld%c%d\n";

582 
	`•rötf
(
db
->
idxbuf
, 
fmt
, 
key
, 
SEP
, db->
d©off
, SEP, db->
d©Àn
);

583 i‡((
Àn
 = 
	`°æí
(
db
->
idxbuf
)Ë< 
IDXLEN_MIN
 ||Üí > 
IDXLEN_MAX
)

584 
	`îr_dump
("_db_writeidx: invalidÜength");

585 
	`•rötf
(
asciùåÀn
, "%*ld%*d", 
PTR_SZ
, 
±rvÆ
, 
IDXLEN_SZ
, 
Àn
);

592 i‡(
whí˚
 =
SEEK_END
)

593 i‡(
	`wrôew_lock
(
db
->
idxfd
, ((db->
nhash
+1)*
PTR_SZ
)+1,

594 
SEEK_SET
, 0) < 0)

595 
	`îr_dump
("_db_writeidx: writew_lockÉrror");

600 i‡((
db
->
idxoff
 = 
	`l£ek
(db->
idxfd
, 
off£t
, 
whí˚
)) == -1)

601 
	`îr_dump
("_db_writeidx:ÜseekÉrror");

603 
iov
[0].
iov_ba£
 = 
asciùåÀn
;

604 
iov
[0].
iov_Àn
 = 
PTR_SZ
 + 
IDXLEN_SZ
;

605 
iov
[1].
iov_ba£
 = 
db
->
idxbuf
;

606 
iov
[1].
iov_Àn
 = 
Àn
;

607 i‡(
	`wrôev
(
db
->
idxfd
, &
iov
[0], 2Ë!
PTR_SZ
 + 
IDXLEN_SZ
 + 
Àn
)

608 
	`îr_dump
("_db_writeidx: writevÉrror of indexÑecord");

610 i‡(
whí˚
 =
SEEK_END
)

611 i‡(
	`un_lock
(
db
->
idxfd
, ((db->
nhash
+1)*
PTR_SZ
)+1,

612 
SEEK_SET
, 0) < 0)

613 
	`îr_dump
("_db_writeidx: un_lockÉrror");

614 
	}
}

621 
	$_db_wrôïå
(
DB
 *
db
, 
off_t
 
off£t
, off_à
±rvÆ
)

623 
asciùå
[
PTR_SZ
 + 1];

625 i‡(
±rvÆ
 < 0 ||ÖåvÆ > 
PTR_MAX
)

626 
	`îr_quô
("_db_wrôïå: invÆidÖå: %d", 
±rvÆ
);

627 
	`•rötf
(
asciùå
, "%*ld", 
PTR_SZ
, 
±rvÆ
);

629 i‡(
	`l£ek
(
db
->
idxfd
, 
off£t
, 
SEEK_SET
) == -1)

630 
	`îr_dump
("_db_writeptr:ÜseekÉrrorÅoÖtr field");

631 i‡(
	`wrôe
(
db
->
idxfd
, 
asciùå
, 
PTR_SZ
) != PTR_SZ)

632 
	`îr_dump
("_db_writeptr: writeÉrror ofÖtr field");

633 
	}
}

640 
	$db_°‹e
(
DBHANDLE
 
h
, c⁄° *
key
, c⁄° *
d©a
, 
Êag
)

642 
DB
 *
db
 = 
h
;

643 
rc
, 
keyÀn
, 
d©Àn
;

644 
off_t
 
±rvÆ
;

646 i‡(
Êag
 !
DB_INSERT
 && fœg !
DB_REPLACE
 &&

647 
Êag
 !
DB_STORE
) {

648 
î∫o
 = 
EINVAL
;

651 
keyÀn
 = 
	`°æí
(
key
);

652 
d©Àn
 = 
	`°æí
(
d©a
) + 1;

653 i‡(
d©Àn
 < 
DATLEN_MIN
 || d©À¿> 
DATLEN_MAX
)

654 
	`îr_dump
("db_store: invalid dataÜength");

663 i‡(
	`_db_föd_™d_lock
(
db
, 
key
, 1) < 0) {

664 i‡(
Êag
 =
DB_REPLACE
) {

665 
rc
 = -1;

666 
db
->
˙t_°‹îr
++;

667 
î∫o
 = 
ENOENT
;

668 
d‹ëu∫
;

675 
±rvÆ
 = 
	`_db_ªad±r
(
db
, db->
chaöoff
);

677 i‡(
	`_db_föd‰ì
(
db
, 
keyÀn
, 
d©Àn
) < 0) {

682 
	`_db_wrôed©
(
db
, 
d©a
, 0, 
SEEK_END
);

683 
	`_db_wrôeidx
(
db
, 
key
, 0, 
SEEK_END
, 
±rvÆ
);

689 
	`_db_wrôïå
(
db
, db->
chaöoff
, db->
idxoff
);

690 
db
->
˙t_°‹1
++;

697 
	`_db_wrôed©
(
db
, 
d©a
, db->
d©off
, 
SEEK_SET
);

698 
	`_db_wrôeidx
(
db
, 
key
, db->
idxoff
, 
SEEK_SET
, 
±rvÆ
);

699 
	`_db_wrôïå
(
db
, db->
chaöoff
, db->
idxoff
);

700 
db
->
˙t_°‹2
++;

703 i‡(
Êag
 =
DB_INSERT
) {

704 
rc
 = 1;

705 
db
->
˙t_°‹îr
++;

706 
d‹ëu∫
;

714 i‡(
d©Àn
 !
db
->datlen) {

715 
	`_db_dodñëe
(
db
);

721 
±rvÆ
 = 
	`_db_ªad±r
(
db
, db->
chaöoff
);

726 
	`_db_wrôed©
(
db
, 
d©a
, 0, 
SEEK_END
);

727 
	`_db_wrôeidx
(
db
, 
key
, 0, 
SEEK_END
, 
±rvÆ
);

732 
	`_db_wrôïå
(
db
, db->
chaöoff
, db->
idxoff
);

733 
db
->
˙t_°‹3
++;

738 
	`_db_wrôed©
(
db
, 
d©a
, db->
d©off
, 
SEEK_SET
);

739 
db
->
˙t_°‹4
++;

742 
rc
 = 0;

744 
d‹ëu∫
:

745 i‡(
	`un_lock
(
db
->
idxfd
, db->
chaöoff
, 
SEEK_SET
, 1) < 0)

746 
	`îr_dump
("db_store: un_lockÉrror");

747 (
rc
);

748 
	}
}

755 
	$_db_föd‰ì
(
DB
 *
db
, 
keyÀn
, 
d©Àn
)

757 
rc
;

758 
off_t
 
off£t
, 
√xtoff£t
, 
ßveoff£t
;

763 i‡(
	`wrôew_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

764 
	`îr_dump
("_db_findfree: writew_lockÉrror");

769 
ßveoff£t
 = 
FREE_OFF
;

770 
off£t
 = 
	`_db_ªad±r
(
db
, 
ßveoff£t
);

772 
off£t
 != 0) {

773 
√xtoff£t
 = 
	`_db_ªadidx
(
db
, 
off£t
);

774 i‡(
	`°æí
(
db
->
idxbuf
Ë=
keyÀn
 && db->
d©Àn
 == datlen)

776 
ßveoff£t
 = 
off£t
;

777 
off£t
 = 
√xtoff£t
;

780 i‡(
off£t
 == 0) {

781 
rc
 = -1;

791 
	`_db_wrôïå
(
db
, 
ßveoff£t
, db->
±rvÆ
);

792 
rc
 = 0;

804 i‡(
	`un_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

805 
	`îr_dump
("_db_findfree: un_lockÉrror");

806 (
rc
);

807 
	}
}

815 
	$db_ªwöd
(
DBHANDLE
 
h
)

817 
DB
 *
db
 = 
h
;

818 
off_t
 
off£t
;

820 
off£t
 = (
db
->
nhash
 + 1Ë* 
PTR_SZ
;

827 i‡((
db
->
idxoff
 = 
	`l£ek
(db->
idxfd
, 
off£t
+1, 
SEEK_SET
)) == -1)

828 
	`îr_dump
("db_rewind:ÜseekÉrror");

829 
	}
}

838 
	$db_√xåec
(
DBHANDLE
 
h
, *
key
)

840 
DB
 *
db
 = 
h
;

841 
c
;

842 *
±r
;

848 i‡(
	`ªadw_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

849 
	`îr_dump
("db_nextrec:Ñeadw_lockÉrror");

855 i‡(
	`_db_ªadidx
(
db
, 0) < 0) {

856 
±r
 = 
NULL
;

857 
d‹ëu∫
;

863 
±r
 = 
db
->
idxbuf
;

864 (
c
 = *
±r
++Ë!0 && c =
SPACE
)

866 } 
c
 == 0);

868 i‡(
key
 !
NULL
)

869 
	`°r˝y
(
key
, 
db
->
idxbuf
);

870 
±r
 = 
	`_db_ªadd©
(
db
);

871 
db
->
˙t_√xåec
++;

873 
d‹ëu∫
:

874 i‡(
	`un_lock
(
db
->
idxfd
, 
FREE_OFF
, 
SEEK_SET
, 1) < 0)

875 
	`îr_dump
("db_nextrec: un_lockÉrror");

876 (
±r
);

877 
	}
}

	@db/t4.c

1 
	~"≠ue.h
"

2 
	~"≠ue_db.h
"

3 
	~<f˙é.h
>

6 
	$maö
()

8 
DBHANDLE
 
db
;

10 i‡((
db
 = 
	`db_›í
("db4", 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
,

11 
FILE_MODE
)Ë=
NULL
)

12 
	`îr_sys
("db_openÉrror");

14 i‡(
	`db_°‹e
(
db
, "AÕha", "d©a1", 
DB_INSERT
) != 0)

15 
	`îr_quô
("db_storeÉrror forálpha");

16 i‡(
	`db_°‹e
(
db
, "bëa", "D©®f‹ bëa", 
DB_INSERT
) != 0)

17 
	`îr_quô
("db_storeÉrror for beta");

18 i‡(
	`db_°‹e
(
db
, "gamma", "ªc‹d3", 
DB_INSERT
) != 0)

19 
	`îr_quô
("db_storeÉrror for gamma");

21 
	`db_˛o£
(
db
);

22 
	`exô
(0);

23 
	}
}

	@environ/cmd1.c

1 
	~"≠ue.h
"

3 
	#TOK_ADD
 5

	)

5 
do_löe
(*);

6 
cmd_add
();

7 
gë_tokí
();

10 
	$maö
()

12 
löe
[
MAXLINE
];

14 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
)

15 
	`do_löe
(
löe
);

16 
	`exô
(0);

17 
	}
}

19 *
	gtok_±r
;

22 
	$do_löe
(*
±r
)

24 
cmd
;

26 
tok_±r
 = 
±r
;

27 (
cmd
 = 
	`gë_tokí
()) > 0) {

28 
cmd
) {

29 
TOK_ADD
:

30 
	`cmd_add
();

34 
	}
}

37 
	$cmd_add
()

39 
tokí
;

41 
tokí
 = 
	`gë_tokí
();

43 
	}
}

46 
	$gë_tokí
()

49 
	}
}

	@environ/cmd2.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

4 
	#TOK_ADD
 5

	)

6 
jmp_buf
 
	gjmpbuf„r
;

9 
	$maö
()

11 
löe
[
MAXLINE
];

13 i‡(
	`£tjmp
(
jmpbuf„r
) != 0)

14 
	`¥ötf
("error");

15 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
)

16 
	`do_löe
(
löe
);

17 
	`exô
(0);

18 
	}
}

23 
	$cmd_add
()

25 
tokí
;

27 
tokí
 = 
	`gë_tokí
();

28 i‡(
tokí
 < 0)

29 
	`l⁄gjmp
(
jmpbuf„r
, 1);

31 
	}
}

	@environ/doatexit.c

1 
	~"≠ue.h
"

3 
my_exô1
();

4 
my_exô2
();

7 
	$maö
()

9 i‡(
	`©exô
(
my_exô2
) != 0)

10 
	`îr_sys
("can'tÑegister my_exit2");

12 i‡(
	`©exô
(
my_exô1
) != 0)

13 
	`îr_sys
("can'tÑegister my_exit1");

14 i‡(
	`©exô
(
my_exô1
) != 0)

15 
	`îr_sys
("can'tÑegister my_exit1");

17 
	`¥ötf
("main is done\n");

19 
	}
}

22 
	$my_exô1
()

24 
	`¥ötf
("firstÉxit handler\n");

25 
	}
}

28 
	$my_exô2
()

30 
	`¥ötf
("secondÉxit handler\n");

31 
	}
}

	@environ/getrlimit.c

1 
	~"≠ue.h
"

2 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
)

3 
	~<sys/time.h
>

4 
	#FMT
 "%10Œd "

	)

6 
	#FMT
 "%10ld "

	)

8 
	~<sys/ªsour˚.h
>

10 
	#doô
(
«me
Ë
	`¥_limôs
(#«me,Çame)

	)

12 
¥_limôs
(*, );

15 
	$maö
()

17 #ifdef 
RLIMIT_AS


18 
	`doô
(
RLIMIT_AS
);

20 
	`doô
(
RLIMIT_CORE
);

21 
	`doô
(
RLIMIT_CPU
);

22 
	`doô
(
RLIMIT_DATA
);

23 
	`doô
(
RLIMIT_FSIZE
);

24 #ifde‡ 
RLIMIT_LOCKS


25 
	`doô
(
RLIMIT_LOCKS
);

27 #ifdef 
RLIMIT_MEMLOCK


28 
	`doô
(
RLIMIT_MEMLOCK
);

30 
	`doô
(
RLIMIT_NOFILE
);

31 #ifdef 
RLIMIT_NPROC


32 
	`doô
(
RLIMIT_NPROC
);

34 #ifdef 
RLIMIT_RSS


35 
	`doô
(
RLIMIT_RSS
);

37 #ifdef 
RLIMIT_SBSIZE


38 
	`doô
(
RLIMIT_SBSIZE
);

40 
	`doô
(
RLIMIT_STACK
);

41 #ifdef 
RLIMIT_VMEM


42 
	`doô
(
RLIMIT_VMEM
);

44 
	`exô
(0);

45 
	}
}

48 
	$¥_limôs
(*
«me
, 
ªsour˚
)

50 
æimô
 
limô
;

52 i‡(
	`gëæimô
(
ªsour˚
, &
limô
) < 0)

53 
	`îr_sys
("gëæimôÉº‹ f‹ %s", 
«me
);

54 
	`¥ötf
("%-14† ", 
«me
);

55 i‡(
limô
.
æim_cur
 =
RLIM_INFINITY
)

56 
	`¥ötf
("(infinite) ");

58 
	`¥ötf
(
FMT
, 
limô
.
æim_cur
);

59 i‡(
limô
.
æim_max
 =
RLIM_INFINITY
)

60 
	`¥ötf
("(infinite)");

62 
	`¥ötf
(
FMT
, 
limô
.
æim_max
);

63 
	`putch¨
(()'\n');

64 
	}
}

	@environ/hello1.c

1 
	~<°dio.h
>

3 
	$maö
()

5 
	`¥ötf
("hello, world\n");

6 
	}
}

	@environ/opendata.c

1 
	~<°dio.h
>

3 
	#DATAFILE
 "d©afûe"

	)

5 
FILE
 *

6 
	$›í_d©a
()

8 
FILE
 *
Â
;

9 
d©abuf
[
BUFSIZ
];

11 i‡((
Â
 = 
	`f›í
(
DATAFILE
, "r")Ë=
NULL
)

12 (
NULL
);

13 i‡(
	`£tvbuf
(
Â
, 
d©abuf
, 
_IOLBF
, 
BUFSIZ
) != 0)

14 (
NULL
);

15 (
Â
);

16 
	}
}

	@environ/testjmp.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

4 
f1
(, , , );

5 
f2
();

7 
jmp_buf
 
	gjmpbuf„r
;

8 
	gglobvÆ
;

11 
	$maö
()

13 
autovÆ
;

14 
ªgivÆ
;

15 vﬁ©ûê
vﬁavÆ
;

16 
°©vÆ
;

18 
globvÆ
 = 1; 
autovÆ
 = 2; 
ªgivÆ
 = 3; 
vﬁavÆ
 = 4; 
°©vÆ
 = 5;

20 i‡(
	`£tjmp
(
jmpbuf„r
) != 0) {

21 
	`¥ötf
("afterÜongjmp:\n");

22 
	`¥ötf
("globval = %d,áutoval = %d,Ñegival = %d,"

24 
globvÆ
, 
autovÆ
, 
ªgivÆ
, 
vﬁavÆ
, 
°©vÆ
);

25 
	`exô
(0);

31 
globvÆ
 = 95; 
autovÆ
 = 96; 
ªgivÆ
 = 97; 
vﬁavÆ
 = 98;

32 
°©vÆ
 = 99;

34 
	`f1
(
autovÆ
, 
ªgivÆ
, 
vﬁavÆ
, 
°©vÆ
);

35 
	`exô
(0);

36 
	}
}

39 
	$f1
(
i
, 
j
, 
k
, 
l
)

41 
	`¥ötf
("in f1():\n");

42 
	`¥ötf
("globval = %d,áutoval = %d,Ñegival = %d,"

43 " vﬁavÆ = %d, sètvÆ = %d\n", 
globvÆ
, 
i
, 
j
, 
k
, 
l
);

44 
	`f2
();

45 
	}
}

48 
	$f2
()

50 
	`l⁄gjmp
(
jmpbuf„r
, 1);

51 
	}
}

	@exercises/asyncsocket.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<sys/sockë.h
>

5 
	~<sys/io˘l.h
>

6 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
Ë|| deföed(
SOLARIS
)

7 
	~<sys/fûio.h
>

11 
	$£èsync
(
sockfd
)

13 
n
;

15 i‡(
	`f˙é
(
sockfd
, 
F_SETOWN
, 
	`gëpid
()) < 0)

17 
n
 = 1;

18 i‡(
	`io˘l
(
sockfd
, 
FIOASYNC
, &
n
) < 0)

21 
	}
}

24 
	$˛øsync
(
sockfd
)

26 
n
;

28 
n
 = 0;

29 i‡(
	`io˘l
(
sockfd
, 
FIOASYNC
, &
n
) < 0)

32 
	}
}

	@exercises/getlogin.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
FILE
 *
Â
;

7 *
p
;

9 
	`d´m⁄ize
("getlog");

10 
p
 = 
	`gëlogö
();

11 
Â
 = 
	`f›í
("/tmp/getlog.out", "w");

12 i‡(
Â
 !
NULL
) {

13 i‡(
p
 =
NULL
)

14 
	`Ârötf
(
Â
, "noÜoginÇame\n");

16 
	`Ârötf
(
Â
, "logöÇame: %s\n", 
p
);

18 
	`exô
(0);

19 
	}
}

	@exercises/getpw44bsd.c

1 
	~"≠ue.h
"

2 
	~<pwd.h
>

5 
	$maö
()

7 
∑sswd
 *
±r
;

9 i‡((
±r
 = 
	`gëpw«m
("ßr")Ë=
NULL
)

10 
	`îr_sys
("getpwnamÉrror");

11 
	`¥ötf
("pw_∑sswd = %s\n", 
±r
->
pw_∑sswd
 =
NULL
 ||

12 
±r
->
pw_∑sswd
[0] == 0 ? "(null)" :Ötr->pw_passwd);

13 
	`exô
(0);

14 
	}
}

	@exercises/getpwsvr4.c

1 
	~"≠ue.h
"

2 
	~<shadow.h
>

5 
	$maö
()

7 
•wd
 *
±r
;

9 i‡((
±r
 = 
	`gë•«m
("ßr")Ë=
NULL
)

10 
	`îr_sys
("getspnamÉrror");

11 
	`¥ötf
("•_pwd∞%s\n", 
±r
->
•_pwdp
 =
NULL
 ||

12 
±r
->
•_pwdp
[0] == 0 ? "(null)" :Ötr->sp_pwdp);

13 
	`exô
(0);

14 
	}
}

	@exercises/goodexit.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

4 
	sfoo
 {

5 
	ma
, 
	mb
, 
	mc
, 
	md
;

9 
	$¥ötfoo
(c⁄° *
s
, c⁄° 
foo
 *
Â
)

11 
	`¥ötf
(
s
);

12 
	`¥ötf
(" såu˘uªáà0x%x\n", ()
Â
);

13 
	`¥ötf
(" foo.®%d\n", 
Â
->
a
);

14 
	`¥ötf
(" foo.b = %d\n", 
Â
->
b
);

15 
	`¥ötf
(" foo.¯%d\n", 
Â
->
c
);

16 
	`¥ötf
(" foo.d = %d\n", 
Â
->
d
);

17 
	}
}

20 
	$thr_‚1
(*
¨g
)

22 
foo
 *
Â
;

24 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë=
NULL
)

25 
	`îr_sys
("can'tállocate memory");

26 
Â
->
a
 = 1;

27 
Â
->
b
 = 2;

28 
Â
->
c
 = 3;

29 
Â
->
d
 = 4;

30 
	`¥ötfoo
("thªad:\n", 
Â
);

31 ((*)
Â
);

32 
	}
}

35 
	$maö
()

37 
îr
;

38 
±hªad_t
 
tid1
;

39 
foo
 *
Â
;

41 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, NULL);

42 i‡(
îr
 != 0)

43 
	`îr_exô
(
îr
, "can't createÅhread 1");

44 
îr
 = 
	`±hªad_joö
(
tid1
, (*)&
Â
);

45 i‡(
îr
 != 0)

46 
	`îr_exô
(
îr
, "can't join withÅhread 1");

47 
	`¥ötfoo
("∑ª¡:\n", 
Â
);

48 
	`exô
(0);

49 
	}
}

	@exercises/openmax.c

1 
	~"≠ue.h
"

2 
	~<limôs.h
>

3 
	~<sys/ªsour˚.h
>

5 
	#OPEN_MAX_GUESS
 256

	)

8 
	$›í_max
()

10 
›ímax
;

11 
æimô
 
æ
;

13 i‡((
›ímax
 = 
	`sysc⁄f
(
_SC_OPEN_MAX
)) < 0 ||

14 
›ímax
 =
LONG_MAX
) {

15 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) < 0)

16 
	`îr_sys
("can't get fileÜimit");

17 i‡(
æ
.
æim_max
 =
RLIM_INFINITY
)

18 
›ímax
 = 
OPEN_MAX_GUESS
;

20 
›ímax
 = 
æ
.
æim_max
;

22 (
›ímax
);

23 
	}
}

	@exercises/prtime.c

1 
	~"≠ue.h
"

2 
	~<time.h
>

5 
	$maö
()

7 
time_t
 
ˇ…ime
;

8 
tm
 *tm;

9 
löe
[
MAXLINE
];

11 i‡((
ˇ…ime
 = 
	`time
(
NULL
)) == -1)

12 
	`îr_sys
("timeÉrror");

13 i‡((
tm
 = 
	`loˇ…ime
(&
ˇ…ime
)Ë=
NULL
)

14 
	`îr_sys
("localtimeÉrror");

15 i‡(
	`°r·ime
(
löe
, 
MAXLINE
, "%®%b %d %X %Z %Y\n", 
tm
) == 0)

16 
	`îr_sys
("strftimeÉrror");

17 
	`Âuts
(
löe
, 
°dout
);

18 
	`exô
(0);

19 
	}
}

	@exercises/sizepipe.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
()

7 
i
, 
n
;

8 
fd
[2];

10 i‡(
	`pùe
(
fd
) < 0)

11 
	`îr_sys
("pipeÉrror");

12 
	`£t_Ê
(
fd
[1], 
O_NONBLOCK
);

17 
n
 = 0; ;Ç++) {

18 i‡((
i
 = 
	`wrôe
(
fd
[1], "a", 1)) != 1) {

19 
	`¥ötf
("wrôêªà%d, ", 
i
);

23 
	`¥ötf
("pùêˇ∑côy = %d\n", 
n
);

24 
	`exô
(0);

25 
	}
}

	@exercises/sleep.c

1 
	~<uni°d.h
>

2 
	~<time.h
>

3 
	~<sys/£À˘.h
>

6 
	$¶ìp
(
n£c
)

8 
n
;

9 
¶ït
;

10 
time_t
 
°¨t
, 
íd
;

11 
timevÆ
 
tv
;

13 
tv
.
tv_£c
 = 
n£c
;

14 
tv
.
tv_u£c
 = 0;

15 
	`time
(&
°¨t
);

16 
n
 = 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tv
);

17 i‡(
n
 == 0)

19 
	`time
(&
íd
);

20 
¶ït
 = 
íd
 - 
°¨t
;

21 i‡(
¶ït
 >
n£c
)

23 (
n£c
 - 
¶ït
);

24 
	}
}

	@exercises/sleepus_poll.c

1 
	~<pﬁl.h
>

4 
	$¶ìp_us
(
nu£cs
)

6 
pﬁlfd
 
dummy
;

7 
timeout
;

9 i‡((
timeout
 = 
nu£cs
 / 1000) <= 0)

10 
timeout
 = 1;

11 
	`pﬁl
(&
dummy
, 0, 
timeout
);

12 
	}
}

	@exercises/sleepus_select.c

1 
	~"≠ue.h
"

2 
	~<sys/£À˘.h
>

5 
	$¶ìp_us
(
nu£cs
)

7 
timevÆ
 
tvÆ
;

9 
tvÆ
.
tv_£c
 = 
nu£cs
 / 1000000;

10 
tvÆ
.
tv_u£c
 = 
nu£cs
 % 1000000;

11 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tvÆ
);

12 
	}
}

	@file/access.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 i‡(
¨gc
 != 2)

8 
	`îr_quô
("usage:á.out <pathname>");

9 i‡(
	`ac˚ss
(
¨gv
[1], 
R_OK
) < 0)

10 
	`îr_ªt
("ac˚s†îr‹ f‹ %s", 
¨gv
[1]);

12 
	`¥ötf
("readáccess OK\n");

13 i‡(
	`›í
(
¨gv
[1], 
O_RDONLY
) < 0)

14 
	`îr_ªt
("›íÉº‹ f‹ %s", 
¨gv
[1]);

16 
	`¥ötf
("open forÑeading OK\n");

17 
	`exô
(0);

18 
	}
}

	@file/cdpwd.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 *
±r
;

7 
size
;

9 i‡(
	`chdú
("/usr/spool/uucppublic") < 0)

10 
	`îr_sys
("chdir failed");

12 
±r
 = 
	`∑th_Æloc
(&
size
);

13 i‡(
	`gëcwd
(
±r
, 
size
Ë=
NULL
)

14 
	`îr_sys
("getcwd failed");

16 
	`¥ötf
("cwd = %s\n", 
±r
);

17 
	`exô
(0);

18 
	}
}

	@file/changemod.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
°©
 
°©buf
;

10 i‡(
	`°©
("foo", &
°©buf
) < 0)

11 
	`îr_sys
("statÉrror for foo");

12 i‡(
	`chmod
("foo", (
°©buf
.
°_mode
 & ~
S_IXGRP
Ë| 
S_ISGID
) < 0)

13 
	`îr_sys
("chmodÉrror for foo");

17 i‡(
	`chmod
("b¨", 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
) < 0)

18 
	`îr_sys
("chmodÉrror for bar");

20 
	`exô
(0);

21 
	}
}

	@file/devrdev.c

1 
	~"≠ue.h
"

2 #ifde‡
SOLARIS


3 
	~<sys/mkdev.h
>

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
i
;

10 
°©
 
buf
;

12 
i
 = 1; i < 
¨gc
; i++) {

13 
	`¥ötf
("%s: ", 
¨gv
[
i
]);

14 i‡(
	`°©
(
¨gv
[
i
], &
buf
) < 0) {

15 
	`îr_ªt
("statÉrror");

19 
	`¥ötf
("dev = %d/%d", 
	`maj‹
(
buf
.
°_dev
), 
	`mö‹
(buf.st_dev));

21 i‡(
	`S_ISCHR
(
buf
.
°_mode
Ë|| 
	`S_ISBLK
(buf.st_mode)) {

22 
	`¥ötf
(" (%s)Ñdev = %d/%d",

23 (
	`S_ISCHR
(
buf
.
°_mode
)) ? "character" : "block",

24 
	`maj‹
(
buf
.
°_rdev
), 
	`mö‹
(buf.st_rdev));

26 
	`¥ötf
("\n");

29 
	`exô
(0);

30 
	}
}

	@file/fileflags.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
vÆ
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:á.out <descriptor#>");

12 i‡((
vÆ
 = 
	`f˙é
(
	`©oi
(
¨gv
[1]), 
F_GETFL
, 0)) < 0)

13 
	`îr_sys
("f˙éÉº‹ f‹ fd %d", 
	`©oi
(
¨gv
[1]));

15 
vÆ
 & 
O_ACCMODE
) {

16 
O_RDONLY
:

17 
	`¥ötf
("read only");

20 
O_WRONLY
:

21 
	`¥ötf
("write only");

24 
O_RDWR
:

25 
	`¥ötf
("read write");

29 
	`îr_dump
("unknownáccess mode");

32 i‡(
vÆ
 & 
O_APPEND
)

33 
	`¥ötf
(",áppend");

34 i‡(
vÆ
 & 
O_NONBLOCK
)

35 
	`¥ötf
(",Çonblocking");

36 #i‡
	`deföed
(
O_SYNC
)

37 i‡(
vÆ
 & 
O_SYNC
)

38 
	`¥ötf
(", synchronous writes");

40 #i‡!
	`deföed
(
_POSIX_C_SOURCE
Ë&& deföed(
O_FSYNC
)

41 i‡(
vÆ
 & 
O_FSYNC
)

42 
	`¥ötf
(", synchronous writes");

44 
	`putch¨
('\n');

45 
	`exô
(0);

46 
	}
}

	@file/filetype.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
i
;

7 
°©
 
buf
;

8 *
±r
;

10 
i
 = 1; i < 
¨gc
; i++) {

11 
	`¥ötf
("%s: ", 
¨gv
[
i
]);

12 i‡(
	`l°©
(
¨gv
[
i
], &
buf
) < 0) {

13 
	`îr_ªt
("lstatÉrror");

16 i‡(
	`S_ISREG
(
buf
.
°_mode
))

17 
±r
 = "regular";

18 i‡(
	`S_ISDIR
(
buf
.
°_mode
))

19 
±r
 = "directory";

20 i‡(
	`S_ISCHR
(
buf
.
°_mode
))

21 
±r
 = "character special";

22 i‡(
	`S_ISBLK
(
buf
.
°_mode
))

23 
±r
 = "block special";

24 i‡(
	`S_ISFIFO
(
buf
.
°_mode
))

25 
±r
 = "fifo";

26 i‡(
	`S_ISLNK
(
buf
.
°_mode
))

27 
±r
 = "symbolicÜink";

28 i‡(
	`S_ISSOCK
(
buf
.
°_mode
))

29 
±r
 = "socket";

31 
±r
 = "** unknown mode **";

32 
	`¥ötf
("%s\n", 
±r
);

34 
	`exô
(0);

35 
	}
}

	@file/ftw4.c

1 
	~"≠ue.h
"

2 
	~<dúít.h
>

3 
	~<limôs.h
>

6 
	tMyfunc
(c⁄° *, c⁄° 
	t°©
 *, );

8 
Myfunc
 
	gmyfunc
;

9 
my·w
(*, 
Myfunc
 *);

10 
d›©h
(
Myfunc
 *);

12 
	gƒeg
, 
	gndú
, 
	gnblk
, 
	gnchr
, 
	gnfifo
, 
	gn¶ök
, 
	gnsock
, 
	g¡Ÿ
;

15 
	$maö
(
¨gc
, *
¨gv
[])

17 
ªt
;

19 i‡(
¨gc
 != 2)

20 
	`îr_quô
("usage: ftw <starting-pathname>");

22 
ªt
 = 
	`my·w
(
¨gv
[1], 
myfunc
);

24 
¡Ÿ
 = 
ƒeg
 + 
ndú
 + 
nblk
 + 
nchr
 + 
nfifo
 + 
n¶ök
 + 
nsock
;

25 i‡(
¡Ÿ
 == 0)

26 
¡Ÿ
 = 1;

27 
	`¥ötf
("ªguœ∏fûe† = %7ld, %5.2‡%%\n", 
ƒeg
,

28 
ƒeg
*100.0/
¡Ÿ
);

29 
	`¥ötf
("dúe˘‹õ† = %7ld, %5.2‡%%\n", 
ndú
,

30 
ndú
*100.0/
¡Ÿ
);

31 
	`¥ötf
("block s≥cü» = %7ld, %5.2‡%%\n", 
nblk
,

32 
nblk
*100.0/
¡Ÿ
);

33 
	`¥ötf
("ch¨ s≥cü» = %7ld, %5.2‡%%\n", 
nchr
,

34 
nchr
*100.0/
¡Ÿ
);

35 
	`¥ötf
("FIFO† = %7ld, %5.2‡%%\n", 
nfifo
,

36 
nfifo
*100.0/
¡Ÿ
);

37 
	`¥ötf
("symbﬁi¯lök†%7ld, %5.2‡%%\n", 
n¶ök
,

38 
n¶ök
*100.0/
¡Ÿ
);

39 
	`¥ötf
("sockë† = %7ld, %5.2‡%%\n", 
nsock
,

40 
nsock
*100.0/
¡Ÿ
);

42 
	`exô
(
ªt
);

43 
	}
}

49 
	#FTW_F
 1

	)

50 
	#FTW_D
 2

	)

51 
	#FTW_DNR
 3

	)

52 
	#FTW_NS
 4

	)

54 *
	gfuŒ∑th
;

57 
	$my·w
(*
∑th«me
, 
Myfunc
 *
func
)

59 
Àn
;

60 
fuŒ∑th
 = 
	`∑th_Æloc
(&
Àn
);

62 
	`°∫˝y
(
fuŒ∑th
, 
∑th«me
, 
Àn
);

63 
fuŒ∑th
[
Àn
-1] = 0;

65 (
	`d›©h
(
func
));

66 
	}
}

75 
	$d›©h
(
Myfunc
* 
func
)

77 
°©
 
°©buf
;

78 
dúít
 *
dúp
;

79 
DIR
 *
dp
;

80 
ªt
;

81 *
±r
;

83 i‡(
	`l°©
(
fuŒ∑th
, &
°©buf
) < 0)

84 (
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_NS
));

85 i‡(
	`S_ISDIR
(
°©buf
.
°_mode
) == 0)

86 (
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_F
));

92 i‡((
ªt
 = 
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_D
)) != 0)

93 (
ªt
);

95 
±r
 = 
fuŒ∑th
 + 
	`°æí
(fullpath);

96 *
±r
++ = '/';

97 *
±r
 = 0;

99 i‡((
dp
 = 
	`›ídú
(
fuŒ∑th
)Ë=
NULL
)

100 (
	`func
(
fuŒ∑th
, &
°©buf
, 
FTW_DNR
));

102 (
dúp
 = 
	`ªaddú
(
dp
)Ë!
NULL
) {

103 i‡(
	`°rcmp
(
dúp
->
d_«me
, ".") == 0 ||

104 
	`°rcmp
(
dúp
->
d_«me
, "..") == 0)

107 
	`°r˝y
(
±r
, 
dúp
->
d_«me
);

109 i‡((
ªt
 = 
	`d›©h
(
func
)) != 0)

112 
±r
[-1] = 0;

114 i‡(
	`˛o£dú
(
dp
) < 0)

115 
	`îr_ªt
("ˇn'à˛o£ dúe˘‹y %s", 
fuŒ∑th
);

117 (
ªt
);

118 
	}
}

121 
	$myfunc
(c⁄° *
∑th«me
, c⁄° 
°©
 *
°©±r
, 
ty≥
)

123 
ty≥
) {

124 
FTW_F
:

125 
°©±r
->
°_mode
 & 
S_IFMT
) {

126 
S_IFREG
: 
ƒeg
++; ;

127 
S_IFBLK
: 
nblk
++; ;

128 
S_IFCHR
: 
nchr
++; ;

129 
S_IFIFO
: 
nfifo
++; ;

130 
S_IFLNK
: 
n¶ök
++; ;

131 
S_IFSOCK
: 
nsock
++; ;

132 
S_IFDIR
:

133 
	`îr_dump
("f‹ S_IFDIR f‹ %s", 
∑th«me
);

138 
FTW_D
:

139 
ndú
++;

142 
FTW_DNR
:

143 
	`îr_ªt
("ˇn'àªad dúe˘‹y %s", 
∑th«me
);

146 
FTW_NS
:

147 
	`îr_ªt
("°©Éº‹ f‹ %s", 
∑th«me
);

151 
	`îr_dump
("unknow¿ty≥ %d f‹Ö©h«mê%s", 
ty≥
, 
∑th«me
);

155 
	}
}

	@file/hello.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("hñlÿw‹ld fromÖro˚s†ID %d\n", 
	`gëpid
());

7 
	`exô
(0);

8 
	}
}

	@file/hole.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	gbuf1
[] = "abcdefghij";

5 
	gbuf2
[] = "ABCDEFGHIJ";

8 
	$maö
()

10 
fd
;

12 i‡((
fd
 = 
	`¸ót
("fûe.hﬁe", 
FILE_MODE
)) < 0)

13 
	`îr_sys
("creatÉrror");

15 i‡(
	`wrôe
(
fd
, 
buf1
, 10) != 10)

16 
	`îr_sys
("buf1 writeÉrror");

19 i‡(
	`l£ek
(
fd
, 16384, 
SEEK_SET
) == -1)

20 
	`îr_sys
("lseekÉrror");

23 i‡(
	`wrôe
(
fd
, 
buf2
, 10) != 10)

24 
	`îr_sys
("buf2 writeÉrror");

27 
	`exô
(0);

28 
	}
}

	@file/longpath.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	#DEPTH
 100

	)

5 
	#MYHOME
 "/home/ßr"

	)

6 
	#NAME
 "Æ⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄gl⁄g«me"

	)

7 
	#MAXSZ
 8192

	)

10 
	$maö
()

12 
i
, 
size
;

13 *
∑th
;

15 i‡(
	`chdú
(
MYHOME
) < 0)

16 
	`îr_sys
("chdirÉrror");

18 
i
 = 0; i < 
DEPTH
; i++) {

19 i‡(
	`mkdú
(
NAME
, 
DIR_MODE
) < 0)

20 
	`îr_sys
("mkdú faûed, i = %d", 
i
);

21 i‡(
	`chdú
(
NAME
) < 0)

22 
	`îr_sys
("chdú faûed, i = %d", 
i
);

24 i‡(
	`¸ót
("afûe", 
FILE_MODE
) < 0)

25 
	`îr_sys
("creatÉrror");

31 
∑th
 = 
	`∑th_Æloc
(&
size
);

33 i‡(
	`gëcwd
(
∑th
, 
size
Ë!
NULL
) {

36 
	`îr_ªt
("gëcwd faûed, sizê%d", 
size
);

37 
size
 += 100;

38 i‡(
size
 > 
MAXSZ
)

39 
	`îr_quô
("giving up");

40 i‡((
∑th
 = 
	`ªÆloc
’©h, 
size
)Ë=
NULL
)

41 
	`îr_sys
("reallocÉrror");

44 
	`¥ötf
("Àngth = %d\n%s\n", 
	`°æí
(
∑th
),Öath);

46 
	`exô
(0);

47 
	}
}

	@file/ls1.c

1 
	~"≠ue.h
"

2 
	~<dúít.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
DIR
 *
dp
;

8 
dúít
 *
dúp
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Üs directory_name");

13 i‡((
dp
 = 
	`›ídú
(
¨gv
[1])Ë=
NULL
)

14 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

15 (
dúp
 = 
	`ªaddú
(
dp
)Ë!
NULL
)

16 
	`¥ötf
("%s\n", 
dúp
->
d_«me
);

18 
	`˛o£dú
(
dp
);

19 
	`exô
(0);

20 
	}
}

	@file/mycd.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 i‡(
	`chdú
("/tmp") < 0)

7 
	`îr_sys
("chdir failed");

8 
	`¥ötf
("chdirÅo /tmp succeeded\n");

9 
	`exô
(0);

10 
	}
}

	@file/seek.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 i‡(
	`l£ek
(
STDIN_FILENO
, 0, 
SEEK_CUR
) == -1)

7 
	`¥ötf
("cannot seek\n");

9 
	`¥ötf
("seek OK\n");

10 
	`exô
(0);

11 
	}
}

	@file/testerror.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
	`Ârötf
(
°dîr
, "EACCES: %s\n", 
	`°ªº‹
(
EACCES
));

8 
î∫o
 = 
ENOENT
;

9 
	`≥º‹
(
¨gv
[0]);

10 
	`exô
(0);

11 
	}
}

	@file/uidgid.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("uid = %d, gid = %d\n", 
	`gëuid
(), 
	`gëgid
());

7 
	`exô
(0);

8 
	}
}

	@file/umask.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	#RWRWRW
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

7 
	$maö
()

9 
	`umask
(0);

10 i‡(
	`¸ót
("foo", 
RWRWRW
) < 0)

11 
	`îr_sys
("creatÉrror for foo");

12 
	`umask
(
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
 | 
S_IWOTH
);

13 i‡(
	`¸ót
("b¨", 
RWRWRW
) < 0)

14 
	`îr_sys
("creatÉrror for bar");

15 
	`exô
(0);

16 
	}
}

	@file/unlink.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
()

7 i‡(
	`›í
("ãmpfûe", 
O_RDWR
) < 0)

8 
	`îr_sys
("openÉrror");

9 i‡(
	`u∆ök
("tempfile") < 0)

10 
	`îr_sys
("unlinkÉrror");

11 
	`¥ötf
("file unlinked\n");

12 
	`¶ìp
(15);

13 
	`¥ötf
("done\n");

14 
	`exô
(0);

15 
	}
}

	@file/zap.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<utime.h
>

6 
	$maö
(
¨gc
, *
¨gv
[])

8 
i
, 
fd
;

9 
°©
 
°©buf
;

10 
utimbuf
 
timebuf
;

12 
i
 = 1; i < 
¨gc
; i++) {

13 i‡(
	`°©
(
¨gv
[
i
], &
°©buf
) < 0) {

14 
	`îr_ªt
("%s: sèàîr‹", 
¨gv
[
i
]);

17 i‡((
fd
 = 
	`›í
(
¨gv
[
i
], 
O_RDWR
 | 
O_TRUNC
)) < 0) {

18 
	`îr_ªt
("%s: o≥¿îr‹", 
¨gv
[
i
]);

21 
	`˛o£
(
fd
);

22 
timebuf
.
a˘ime
 = 
°©buf
.
°_©ime
;

23 
timebuf
.
modtime
 = 
°©buf
.
°_mtime
;

24 i‡(
	`utime
(
¨gv
[
i
], &
timebuf
) < 0) {

25 
	`îr_ªt
("%s: utimêîr‹", 
¨gv
[
i
]);

29 
	`exô
(0);

30 
	}
}

	@include/apue.h

3 #i‚def 
_APUE_H


4 
	#_APUE_H


	)

6 #i‡
deföed
(
SOLARIS
)

7 
	#_XOPEN_SOURCE
 500

	)

8 
	#CMSG_LEN
(
x
Ë
	`_CMSG_DATA_ALIGN
((
cmsghdr
)+(x))

	)

9 #ñi‡!
deföed
(
BSD
)

10 
	#_XOPEN_SOURCE
 600

	)

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 
	~<sys/ãrmios.h
>

16 #i‚de‡
TIOCGWINSZ


17 
	~<sys/io˘l.h
>

19 
	~<°dio.h
>

20 
	~<°dlib.h
>

21 
	~<°ddef.h
>

22 
	~<°rög.h
>

23 
	~<uni°d.h
>

24 
	~<sig«l.h
>

26 
	#MAXLINE
 4096

	)

31 
	#FILE_MODE
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

36 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

38 
	tSigfunc
();

40 #if 
deföed
(
SIG_IGN
Ë&& !deföed(
SIG_ERR
)

41 
	#SIG_ERR
 ((
Sigfunc
 *)-1)

	)

44 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

45 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

50 *
∑th_Æloc
(*);

51 
›í_max
();

52 
˛r_Ê
(, );

53 
£t_Ê
(, );

54 
¥_exô
();

55 
¥_mask
(const *);

56 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

58 
ây_cbªak
();

59 
ây_øw
();

60 
ây_ª£t
();

61 
ây_©exô
();

62 #ifdef 
ECHO


63 
ãrmios
 *
ây_ãrmios
();

66 
¶ìp_us
();

67 
ssize_t
 
ªadn
(, *, 
size_t
);

68 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

69 
d´m⁄ize
(const *);

71 
s_pùe
(*);

72 
ªcv_fd
(, 
	$ssize_t
 (*
func
)(,

73 c⁄° *, 
size_t
));

74 
	`£nd_fd
(, );

75 
	`£nd_îr
(, ,

77 
	`£rv_li°í
(const *);

78 
	`£rv_ac˚±
(, 
uid_t
 *);

79 
	`˛i_c⁄n
(const *);

80 
	`buf_¨gs
(*, (*
func
)(,

83 
	`±ym_›í
(*, );

84 
	`±ys_›í
(*);

85 #ifdef 
TIOCGWINSZ


86 
pid_t
 
	`±y_f‹k
(*, *, , c⁄° 
ãrmios
 *,

87 c⁄° 
wösize
 *);

90 
	`lock_ªg
(, , , 
off_t
, , off_t);

91 
	#ªad_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

92 
	`lock_ªg
((
fd
), 
F_SETLK
, 
F_RDLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

93 
	#ªadw_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

94 
	`lock_ªg
((
fd
), 
F_SETLKW
, 
F_RDLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

95 
	#wrôe_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

96 
	`lock_ªg
((
fd
), 
F_SETLK
, 
F_WRLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

97 
	#wrôew_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

98 
	`lock_ªg
((
fd
), 
F_SETLKW
, 
F_WRLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

99 
	#un_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

100 
	`lock_ªg
((
fd
), 
F_SETLK
, 
F_UNLCK
, (
off£t
), (
whí˚
), (
Àn
))

	)

102 
pid_t
 
	`lock_ã°
(, , 
off_t
, , off_t);

104 
	#is_ªad_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

105 (
	`lock_ã°
((
fd
), 
F_RDLCK
, (
off£t
), (
whí˚
), (
Àn
)Ë=0)

	)

106 
	#is_wrôe_lockabÀ
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

107 (
	`lock_ã°
((
fd
), 
F_WRLCK
, (
off£t
), (
whí˚
), (
Àn
)Ë=0)

	)

109 
	`îr_dump
(const *, ...);

110 
	`îr_msg
(const *, ...);

111 
	`îr_quô
(const *, ...);

112 
	`îr_exô
(, const *, ...);

113 
	`îr_ªt
(const *, ...);

114 
	`îr_sys
(const *, ...);

116 
	`log_msg
(const *, ...);

117 
	`log_›í
(const *, , );

118 
	`log_quô
(const *, ...);

119 
	`log_ªt
(const *, ...);

120 
	`log_sys
(const *, ...);

122 
	`TELL_WAIT
();

123 
	`TELL_PARENT
(
pid_t
);

124 
	`TELL_CHILD
(
pid_t
);

125 
	`WAIT_PARENT
();

126 
	`WAIT_CHILD
();

	@ipc/add2.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
n
, 
öt1
, 
öt2
;

7 
löe
[
MAXLINE
];

9 (
n
 = 
	`ªad
(
STDIN_FILENO
, 
löe
, 
MAXLINE
)) > 0) {

10 
löe
[
n
] = 0;

11 i‡(
	`ssˇnf
(
löe
, "%d%d", &
öt1
, &
öt2
) == 2) {

12 
	`•rötf
(
löe
, "%d\n", 
öt1
 + 
öt2
);

13 
n
 = 
	`°æí
(
löe
);

14 i‡(
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
) !=Ç)

15 
	`îr_sys
("writeÉrror");

17 i‡(
	`wrôe
(
STDOUT_FILENO
, "invalidárgs\n", 13) != 13)

18 
	`îr_sys
("writeÉrror");

21 
	`exô
(0);

22 
	}
}

	@ipc/add2stdio.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
öt1
, 
öt2
;

7 
löe
[
MAXLINE
];

9 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

10 i‡(
	`ssˇnf
(
löe
, "%d%d", &
öt1
, &
öt2
) == 2) {

11 i‡(
	`¥ötf
("%d\n", 
öt1
 + 
öt2
Ë=
EOF
)

12 
	`îr_sys
("printfÉrror");

14 i‡(
	`¥ötf
("övÆidárgs\n"Ë=
EOF
)

15 
	`îr_sys
("printfÉrror");

18 
	`exô
(0);

19 
	}
}

	@ipc/fifo1.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
	#FIFO
 "ãmp.fifo"

	)

7 
	$maö
()

9 
fdªad
, 
fdwrôe
;

11 
	`u∆ök
(
FIFO
);

12 i‡(
	`mkfifo
(
FIFO
, 
FILE_MODE
) < 0)

13 
	`îr_sys
("mkfifoÉrror");

14 i‡((
fdªad
 = 
	`›í
(
FIFO
, 
O_RDONLY
 | 
O_NONBLOCK
)) < 0)

15 
	`îr_sys
("openÉrror forÑeading");

16 i‡((
fdwrôe
 = 
	`›í
(
FIFO
, 
O_WRONLY
)) < 0)

17 
	`îr_sys
("openÉrror for writing");

18 
	`˛r_Ê
(
fdªad
, 
O_NONBLOCK
);

19 
	`exô
(0);

20 
	}
}

	@ipc/myuclc.c

1 
	~"≠ue.h
"

2 
	~<˘y≥.h
>

5 
	$maö
()

7 
c
;

9 (
c
 = 
	`gëch¨
()Ë!
EOF
) {

10 i‡(
	`isuµî
(
c
))

11 
c
 = 
	`tﬁowî
(c);

12 i‡(
	`putch¨
(
c
Ë=
EOF
)

13 
	`îr_sys
("outputÉrror");

14 i‡(
c
 == '\n')

15 
	`fÊush
(
°dout
);

17 
	`exô
(0);

18 
	}
}

	@ipc/pipe1.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
n
;

7 
fd
[2];

8 
pid_t
 
pid
;

9 
löe
[
MAXLINE
];

11 i‡(
	`pùe
(
fd
) < 0)

12 
	`îr_sys
("pipeÉrror");

13 i‡((
pid
 = 
	`f‹k
()) < 0) {

14 
	`îr_sys
("forkÉrror");

15 } i‡(
pid
 > 0) {

16 
	`˛o£
(
fd
[0]);

17 
	`wrôe
(
fd
[1], "hello world\n", 12);

19 
	`˛o£
(
fd
[1]);

20 
n
 = 
	`ªad
(
fd
[0], 
löe
, 
MAXLINE
);

21 
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
);

23 
	`exô
(0);

24 
	}
}

	@ipc/pipe2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
	#DEF_PAGER
 "/bö/m‹e"

	)

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
n
;

10 
fd
[2];

11 
pid_t
 
pid
;

12 *
∑gî
, *
¨gv0
;

13 
löe
[
MAXLINE
];

14 
FILE
 *
Â
;

16 i‡(
¨gc
 != 2)

17 
	`îr_quô
("usage:á.out <pathname>");

19 i‡((
Â
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

20 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

21 i‡(
	`pùe
(
fd
) < 0)

22 
	`îr_sys
("pipeÉrror");

24 i‡((
pid
 = 
	`f‹k
()) < 0) {

25 
	`îr_sys
("forkÉrror");

26 } i‡(
pid
 > 0) {

27 
	`˛o£
(
fd
[0]);

30 
	`fgës
(
löe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

31 
n
 = 
	`°æí
(
löe
);

32 i‡(
	`wrôe
(
fd
[1], 
löe
, 
n
) !=Ç)

33 
	`îr_sys
("writeÉrrorÅoÖipe");

35 i‡(
	`„º‹
(
Â
))

36 
	`îr_sys
("fgetsÉrror");

38 
	`˛o£
(
fd
[1]);

40 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

41 
	`îr_sys
("waitpidÉrror");

42 
	`exô
(0);

44 
	`˛o£
(
fd
[1]);

45 i‡(
fd
[0] !
STDIN_FILENO
) {

46 i‡(
	`dup2
(
fd
[0], 
STDIN_FILENO
) != STDIN_FILENO)

47 
	`îr_sys
("dup2ÉrrorÅo stdin");

48 
	`˛o£
(
fd
[0]);

52 i‡((
∑gî
 = 
	`gëív
("PAGER")Ë=
NULL
)

53 
∑gî
 = 
DEF_PAGER
;

54 i‡((
¨gv0
 = 
	`°ºchr
(
∑gî
, '/')Ë!
NULL
)

55 
¨gv0
++;

57 
¨gv0
 = 
∑gî
;

59 i‡(
	`exe˛
(
∑gî
, 
¨gv0
, (*)0) < 0)

60 
	`îr_sys
("exe˛Éº‹ f‹ %s", 
∑gî
);

62 
	`exô
(0);

63 
	}
}

	@ipc/pipe4.c

1 
	~"≠ue.h
"

3 
sig_pùe
();

6 
	$maö
()

8 
n
, 
fd1
[2], 
fd2
[2];

9 
pid_t
 
pid
;

10 
löe
[
MAXLINE
];

12 i‡(
	`sig«l
(
SIGPIPE
, 
sig_pùe
Ë=
SIG_ERR
)

13 
	`îr_sys
("signalÉrror");

15 i‡(
	`pùe
(
fd1
Ë< 0 ||Öùe(
fd2
) < 0)

16 
	`îr_sys
("pipeÉrror");

18 i‡((
pid
 = 
	`f‹k
()) < 0) {

19 
	`îr_sys
("forkÉrror");

20 } i‡(
pid
 > 0) {

21 
	`˛o£
(
fd1
[0]);

22 
	`˛o£
(
fd2
[1]);

24 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

25 
n
 = 
	`°æí
(
löe
);

26 i‡(
	`wrôe
(
fd1
[1], 
löe
, 
n
) !=Ç)

27 
	`îr_sys
("writeÉrrorÅoÖipe");

28 i‡((
n
 = 
	`ªad
(
fd2
[0], 
löe
, 
MAXLINE
)) < 0)

29 
	`îr_sys
("readÉrror fromÖipe");

30 i‡(
n
 == 0) {

31 
	`îr_msg
("child closedÖipe");

34 
löe
[
n
] = 0;

35 i‡(
	`Âuts
(
löe
, 
°dout
Ë=
EOF
)

36 
	`îr_sys
("fputsÉrror");

39 i‡(
	`„º‹
(
°dö
))

40 
	`îr_sys
("fgetsÉrror on stdin");

41 
	`exô
(0);

43 
	`˛o£
(
fd1
[1]);

44 
	`˛o£
(
fd2
[0]);

45 i‡(
fd1
[0] !
STDIN_FILENO
) {

46 i‡(
	`dup2
(
fd1
[0], 
STDIN_FILENO
) != STDIN_FILENO)

47 
	`îr_sys
("dup2ÉrrorÅo stdin");

48 
	`˛o£
(
fd1
[0]);

51 i‡(
fd2
[1] !
STDOUT_FILENO
) {

52 i‡(
	`dup2
(
fd2
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

53 
	`îr_sys
("dup2ÉrrorÅo stdout");

54 
	`˛o£
(
fd2
[1]);

56 i‡(
	`exe˛
("./add2", "add2", (*)0) < 0)

57 
	`îr_sys
("execlÉrror");

59 
	`exô
(0);

60 
	}
}

63 
	$sig_pùe
(
signo
)

65 
	`¥ötf
("SIGPIPE caught\n");

66 
	`exô
(1);

67 
	}
}

	@ipc/popen1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
löe
[
MAXLINE
];

8 
FILE
 *
Âö
;

10 i‡((
Âö
 = 
	`p›í
("myu˛c", "r")Ë=
NULL
)

11 
	`îr_sys
("popenÉrror");

13 
	`Âuts
("¥om±> ", 
°dout
);

14 
	`fÊush
(
°dout
);

15 i‡(
	`fgës
(
löe
, 
MAXLINE
, 
Âö
Ë=
NULL
)

17 i‡(
	`Âuts
(
löe
, 
°dout
Ë=
EOF
)

18 
	`îr_sys
("fputsÉrrorÅoÖipe");

20 i‡(
	`p˛o£
(
Âö
) == -1)

21 
	`îr_sys
("pcloseÉrror");

22 
	`putch¨
('\n');

23 
	`exô
(0);

24 
	}
}

	@ipc/popen2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
	#PAGER
 "${PAGER:-m‹e}"

	)

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
löe
[
MAXLINE
];

10 
FILE
 *
Âö
, *
Âout
;

12 i‡(
¨gc
 != 2)

13 
	`îr_quô
("usage:á.out <pathname>");

14 i‡((
Âö
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

15 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

17 i‡((
Âout
 = 
	`p›í
(
PAGER
, "w")Ë=
NULL
)

18 
	`îr_sys
("popenÉrror");

21 
	`fgës
(
löe
, 
MAXLINE
, 
Âö
Ë!
NULL
) {

22 i‡(
	`Âuts
(
löe
, 
Âout
Ë=
EOF
)

23 
	`îr_sys
("fputsÉrrorÅoÖipe");

25 i‡(
	`„º‹
(
Âö
))

26 
	`îr_sys
("fgetsÉrror");

27 i‡(
	`p˛o£
(
Âout
) == -1)

28 
	`îr_sys
("pcloseÉrror");

30 
	`exô
(0);

31 
	}
}

	@ipc/spipe4.c

1 
	~"≠ue.h
"

3 
sig_pùe
();

6 
	$maö
()

8 
n
;

9 
fd
[2];

10 
pid_t
 
pid
;

11 
löe
[
MAXLINE
];

13 i‡(
	`sig«l
(
SIGPIPE
, 
sig_pùe
Ë=
SIG_ERR
)

14 
	`îr_sys
("signalÉrror");

16 i‡(
	`s_pùe
(
fd
) < 0)

17 
	`îr_sys
("pipeÉrror");

19 i‡((
pid
 = 
	`f‹k
()) < 0) {

20 
	`îr_sys
("forkÉrror");

21 } i‡(
pid
 > 0) {

22 
	`˛o£
(
fd
[1]);

23 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

24 
n
 = 
	`°æí
(
löe
);

25 i‡(
	`wrôe
(
fd
[0], 
löe
, 
n
) !=Ç)

26 
	`îr_sys
("writeÉrrorÅoÖipe");

27 i‡((
n
 = 
	`ªad
(
fd
[0], 
löe
, 
MAXLINE
)) < 0)

28 
	`îr_sys
("readÉrror fromÖipe");

29 i‡(
n
 == 0) {

30 
	`îr_msg
("child closedÖipe");

33 
löe
[
n
] = 0;

34 i‡(
	`Âuts
(
löe
, 
°dout
Ë=
EOF
)

35 
	`îr_sys
("fputsÉrror");

38 i‡(
	`„º‹
(
°dö
))

39 
	`îr_sys
("fgetsÉrror on stdin");

40 
	`exô
(0);

42 
	`˛o£
(
fd
[0]);

43 i‡(
fd
[1] !
STDIN_FILENO
 &&

44 
	`dup2
(
fd
[1], 
STDIN_FILENO
) != STDIN_FILENO)

45 
	`îr_sys
("dup2ÉrrorÅo stdin");

46 i‡(
fd
[1] !
STDOUT_FILENO
 &&

47 
	`dup2
(
fd
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

48 
	`îr_sys
("dup2ÉrrorÅo stdout");

49 i‡(
	`exe˛
("./add2", "add2", (*)0) < 0)

50 
	`îr_sys
("execlÉrror");

52 
	`exô
(0);

53 
	}
}

56 
	$sig_pùe
(
signo
)

58 
	`¥ötf
("SIGPIPE caught\n");

59 
	`exô
(1);

60 
	}
}

	@ipc/tellwait.c

1 
	~"≠ue.h
"

3 
	gpfd1
[2], 
	gpfd2
[2];

6 
	$TELL_WAIT
()

8 i‡(
	`pùe
(
pfd1
Ë< 0 ||Öùe(
pfd2
) < 0)

9 
	`îr_sys
("pipeÉrror");

10 
	}
}

13 
	$TELL_PARENT
(
pid_t
 
pid
)

15 i‡(
	`wrôe
(
pfd2
[1], "c", 1) != 1)

16 
	`îr_sys
("writeÉrror");

17 
	}
}

20 
	$WAIT_PARENT
()

22 
c
;

24 i‡(
	`ªad
(
pfd1
[0], &
c
, 1) != 1)

25 
	`îr_sys
("readÉrror");

27 i‡(
c
 != 'p')

28 
	`îr_quô
("WAIT_PARENT: incorrect data");

29 
	}
}

32 
	$TELL_CHILD
(
pid_t
 
pid
)

34 i‡(
	`wrôe
(
pfd1
[1], "p", 1) != 1)

35 
	`îr_sys
("writeÉrror");

36 
	}
}

39 
	$WAIT_CHILD
()

41 
c
;

43 i‡(
	`ªad
(
pfd2
[0], &
c
, 1) != 1)

44 
	`îr_sys
("readÉrror");

46 i‡(
c
 != 'c')

47 
	`îr_quô
("WAIT_CHILD: incorrect data");

48 
	}
}

	@ipc/tshm.c

1 
	~"≠ue.h
"

2 
	~<sys/shm.h
>

4 
	#ARRAY_SIZE
 40000

	)

5 
	#MALLOC_SIZE
 100000

	)

6 
	#SHM_SIZE
 100000

	)

7 
	#SHM_MODE
 0600

	)

9 
	g¨øy
[
ARRAY_SIZE
];

12 
	$maö
()

14 
shmid
;

15 *
±r
, *
shm±r
;

17 
	`¥ötf
("¨øy[] from %lxÅÿ%lx\n", ()&
¨øy
[0],

18 ()&
¨øy
[
ARRAY_SIZE
]);

19 
	`¥ötf
("°ackáround %lx\n", ()&
shmid
);

21 i‡((
±r
 = 
	`mÆloc
(
MALLOC_SIZE
)Ë=
NULL
)

22 
	`îr_sys
("mallocÉrror");

23 
	`¥ötf
("mÆlo˚d from %lxÅÿ%lx\n", ()
±r
,

24 ()
±r
+
MALLOC_SIZE
);

26 i‡((
shmid
 = 
	`shmgë
(
IPC_PRIVATE
, 
SHM_SIZE
, 
SHM_MODE
)) < 0)

27 
	`îr_sys
("shmgetÉrror");

28 i‡((
shm±r
 = 
	`shm©
(
shmid
, 0, 0)) == (*)-1)

29 
	`îr_sys
("shmatÉrror");

30 
	`¥ötf
("shared memoryáttached from %lxÅo %lx\n",

31 ()
shm±r
, ()shm±r+
SHM_SIZE
);

33 i‡(
	`shm˘l
(
shmid
, 
IPC_RMID
, 0) < 0)

34 
	`îr_sys
("shmctlÉrror");

36 
	`exô
(0);

37 
	}
}

	@ipp/ipp.h

1 #i‚de‡
_IPP_H


2 
	#_IPP_H


	)

12 
	#STATCLASS_OK
(
x
Ë((xË>0x0000 && (xË<0x00ff)

	)

13 
	#STATCLASS_INFO
(
x
Ë((xË>0x0100 && (xË<0x01ff)

	)

14 
	#STATCLASS_REDIR
(
x
Ë((xË>0x0200 && (xË<0x02ff)

	)

15 
	#STATCLASS_CLIERR
(
x
Ë((xË>0x0400 && (xË<0x04ff)

	)

16 
	#STATCLASS_SRVERR
(
x
Ë((xË>0x0500 && (xË<0x05ff)

	)

21 
	#STAT_OK
 0x0000

	)

22 
	#STAT_OK_ATTRIGN
 0x0001

	)

23 
	#STAT_OK_ATTRCON
 0x0002

	)

25 
	#STAT_CLI_BADREQ
 0x0400

	)

26 
	#STAT_CLI_FORBID
 0x0401

	)

27 
	#STAT_CLI_NOAUTH
 0x0402

	)

28 
	#STAT_CLI_NOPERM
 0x0403

	)

29 
	#STAT_CLI_NOTPOS
 0x0404

	)

30 
	#STAT_CLI_TIMOUT
 0x0405

	)

31 
	#STAT_CLI_NOTFND
 0x0406

	)

32 
	#STAT_CLI_OBJGONE
 0x0407

	)

33 
	#STAT_CLI_TOOBIG
 0x0408

	)

34 
	#STAT_CLI_TOOLNG
 0x0409

	)

35 
	#STAT_CLI_BADFMT
 0x040®

	)

36 
	#STAT_CLI_NOTSUP
 0x040b

	)

37 
	#STAT_CLI_NOSCHM
 0x040¯

	)

38 
	#STAT_CLI_NOCHAR
 0x040d

	)

39 
	#STAT_CLI_ATTRCON
 0x040ê

	)

40 
	#STAT_CLI_NOCOMP
 0x040‡

	)

41 
	#STAT_CLI_COMPERR
 0x0410

	)

42 
	#STAT_CLI_FMTERR
 0x0411

	)

43 
	#STAT_CLI_ACCERR
 0x0412

	)

45 
	#STAT_SRV_INTERN
 0x0500

	)

46 
	#STAT_SRV_NOTSUP
 0x0501

	)

47 
	#STAT_SRV_UNAVAIL
 0x0502

	)

48 
	#STAT_SRV_BADVER
 0x0503

	)

49 
	#STAT_SRV_DEVERR
 0x0504

	)

50 
	#STAT_SRV_TMPERR
 0x0505

	)

51 
	#STAT_SRV_REJECT
 0x0506

	)

52 
	#STAT_SRV_TOOBUSY
 0x0507

	)

53 
	#STAT_SRV_CANCEL
 0x0508

	)

54 
	#STAT_SRV_NOMULTI
 0x0509

	)

59 
	#OP_PRINT_JOB
 0x02

	)

60 
	#OP_PRINT_URI
 0x03

	)

61 
	#OP_VALIDATE_JOB
 0x04

	)

62 
	#OP_CREATE_JOB
 0x05

	)

63 
	#OP_SEND_DOC
 0x06

	)

64 
	#OP_SEND_URI
 0x07

	)

65 
	#OP_CANCEL_JOB
 0x08

	)

66 
	#OP_GET_JOB_ATTR
 0x09

	)

67 
	#OP_GET_JOBS
 0x0a

	)

68 
	#OP_GET_PRINTER_ATTR
 0x0b

	)

69 
	#OP_HOLD_JOB
 0x0c

	)

70 
	#OP_RELEASE_JOB
 0x0d

	)

71 
	#OP_RESTART_JOB
 0x0e

	)

72 
	#OP_PAUSE_PRINTER
 0x10

	)

73 
	#OP_RESUME_PRINTER
 0x11

	)

74 
	#OP_PURGE_JOBS
 0x12

	)

79 
	#TAG_OPERATION_ATTR
 0x01

	)

80 
	#TAG_JOB_ATTR
 0x02

	)

81 
	#TAG_END_OF_ATTR
 0x03

	)

82 
	#TAG_PRINTER_ATTR
 0x04

	)

83 
	#TAG_UNSUPP_ATTR
 0x05

	)

88 
	#TAG_UNSUPPORTED
 0x10

	)

89 
	#TAG_UNKNOWN
 0x12

	)

90 
	#TAG_NONE
 0x13

	)

91 
	#TAG_INTEGER
 0x21

	)

92 
	#TAG_BOOLEAN
 0x22

	)

93 
	#TAG_ENUM
 0x23

	)

94 
	#TAG_OCTSTR
 0x30

	)

95 
	#TAG_DATETIME
 0x31

	)

96 
	#TAG_RESOLUTION
 0x32

	)

97 
	#TAG_INTRANGE
 0x33

	)

98 
	#TAG_TEXTWLANG
 0x35

	)

99 
	#TAG_NAMEWLANG
 0x36

	)

100 
	#TAG_TEXTWOLANG
 0x41

	)

101 
	#TAG_NAMEWOLANG
 0x42

	)

102 
	#TAG_KEYWORD
 0x44

	)

103 
	#TAG_URI
 0x45

	)

104 
	#TAG_URISCHEME
 0x46

	)

105 
	#TAG_CHARSET
 0x47

	)

106 
	#TAG_NATULANG
 0x48

	)

107 
	#TAG_MIMETYPE
 0x49

	)

109 
	sùp_hdr
 {

110 
öt8_t
 
	mmaj‹_vîsi⁄
;

111 
öt8_t
 
	mmö‹_vîsi⁄
;

113 
öt16_t
 
	m›
;

114 
öt16_t
 
	m°
;

115 } 
	mu
;

116 
öt32_t
 
	mªque°_id
;

117 
	m©å_group
[1];

121 
	#›î©i⁄
 
u
.
›


	)

122 
	#°©us
 
u
.
°


	)

	@ipp/print.c

6 
	~"≠ue.h
"

7 
	~"¥öt.h
"

8 
	~<f˙é.h
>

9 
	~<pwd.h
>

14 
	glog_to_°dîr
 = 1;

16 
submô_fûe
(, , c⁄° *, 
size_t
, );

19 
	$maö
(
¨gc
, *
¨gv
[])

21 
fd
, 
sockfd
, 
îr
, 
ãxt
, 
c
;

22 
°©
 
sbuf
;

23 *
ho°
;

24 
addröfo
 *
aûi°
, *
aù
;

26 
îr
 = 0;

27 
ãxt
 = 0;

28 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "t")) != -1) {

29 
c
) {

31 
ãxt
 = 1;

35 
îr
 = 1;

39 i‡(
îr
 || (
›töd
 !
¨gc
 - 1))

40 
	`îr_quô
("usage:Örint [-t] filename");

41 i‡((
fd
 = 
	`›í
(
¨gv
[
›töd
], 
O_RDONLY
)) < 0)

42 
	`îr_sys
("¥öt: c™'à›í %s", 
¨gv
[1]);

43 i‡(
	`f°©
(
fd
, &
sbuf
) < 0)

44 
	`îr_sys
("¥öt: c™'à°© %s", 
¨gv
[1]);

45 i‡(!
	`S_ISREG
(
sbuf
.
°_mode
))

46 
	`îr_quô
("¥öt: %†mu° bê®ªguœ∏fûe\n", 
¨gv
[1]);

51 i‡((
ho°
 = 
	`gë_¥öt£rvî
()Ë=
NULL
)

52 
	`îr_quô
("print:ÇoÖrint server defined");

53 i‡((
îr
 = 
	`gëaddæi°
(
ho°
, "¥öt", &
aûi°
)) != 0)

54 
	`îr_quô
("¥öt: gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

56 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

57 i‡((
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0) {

58 
îr
 = 
î∫o
;

59 } i‡(
	`c⁄√˘_ªåy
(
sockfd
, 
aù
->
ai_addr
,

60 
aù
->
ai_addæí
) < 0) {

61 
îr
 = 
î∫o
;

63 
	`submô_fûe
(
fd
, 
sockfd
, 
¨gv
[1], 
sbuf
.
°_size
, 
ãxt
);

64 
	`exô
(0);

67 
î∫o
 = 
îr
;

68 
	`îr_ªt
("¥öt: c™'àc⁄è˘ %s", 
ho°
);

69 
	`exô
(1);

70 
	}
}

76 
	$submô_fûe
(
fd
, 
sockfd
, c⁄° *
‚ame
, 
size_t
 
nbyãs
,

77 
ãxt
)

79 
ƒ
, 
nw
, 
Àn
;

80 
∑sswd
 *
pwd
;

81 
¥öåeq
 
ªq
;

82 
¥öåe•
 
ªs
;

83 
buf
[
IOBUFSZ
];

88 i‡((
pwd
 = 
	`gëpwuid
(
	`gëeuid
())Ë=
NULL
)

89 
	`°r˝y
(
ªq
.
u£∫m
, "unknown");

91 
	`°r˝y
(
ªq
.
u£∫m
, 
pwd
->
pw_«me
);

92 
ªq
.
size
 = 
	`ht⁄l
(
nbyãs
);

93 i‡(
ãxt
)

94 
ªq
.
Êags
 = 
	`ht⁄l
(
PR_TEXT
);

96 
ªq
.
Êags
 = 0;

97 i‡((
Àn
 = 
	`°æí
(
‚ame
)Ë>
JOBNM_MAX
) {

102 
	`°r˝y
(
ªq
.
jobnm
, "... ");

103 
	`°∫ˇt
(
ªq
.
jobnm
, &
‚ame
[
Àn
-
JOBNM_MAX
+5], JOBNM_MAX-5);

105 
	`°r˝y
(
ªq
.
jobnm
, 
‚ame
);

111 
nw
 = 
	`wrôí
(
sockfd
, &
ªq
, (
¥öåeq
));

112 i‡(
nw
 !(
¥öåeq
)) {

113 i‡(
nw
 < 0)

114 
	`îr_sys
("can't writeÅoÖrint server");

116 
	`îr_quô
("short write (%d/%d)ÅoÖrint server",

117 
nw
, (
¥öåeq
));

123 (
ƒ
 = 
	`ªad
(
fd
, 
buf
, 
IOBUFSZ
)) != 0) {

124 
nw
 = 
	`wrôí
(
sockfd
, 
buf
, 
ƒ
);

125 i‡(
nw
 !
ƒ
) {

126 i‡(
nw
 < 0)

127 
	`îr_sys
("can't writeÅoÖrint server");

129 
	`îr_quô
("short write (%d/%d)ÅoÖrint server",

130 
nw
, 
ƒ
);

137 i‡((
ƒ
 = 
	`ªadn
(
sockfd
, &
ªs
, (
¥öåe•
))) !=

138 (
¥öåe•
))

139 
	`îr_sys
("can'tÑeadÑesponse from server");

140 i‡(
ªs
.
ªtcode
 != 0) {

141 
	`¥ötf
("ªje˘ed: %s\n", 
ªs
.
msg
);

142 
	`exô
(1);

144 
	`¥ötf
("job ID %ld\n", 
	`¡ohl
(
ªs
.
jobid
));

146 
	`exô
(0);

147 
	}
}

	@ipp/print.h

1 #i‚de‡
_PRINT_H


2 
	#_PRINT_H


	)

6 
	~<sys/sockë.h
>

7 
	~<¨∑/öë.h
>

8 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
)

9 
	~<√töë/ö.h
>

11 
	~<√tdb.h
>

12 
	~<î∫o.h
>

14 
	#CONFIG_FILE
 "/ëc/¥öãr.c⁄f"

	)

15 
	#SPOOLDIR
 "/v¨/•oﬁ/¥öãr"

	)

16 
	#JOBFILE
 "jobno"

	)

17 
	#DATADIR
 "d©a"

	)

18 
	#REQDIR
 "ªqs"

	)

20 
	#FILENMSZ
 64

	)

21 
	#FILEPERM
 (
S_IRUSR
|
S_IWUSR
)

	)

22 
	#USERNM_MAX
 64

	)

23 
	#JOBNM_MAX
 256

	)

24 
	#MSGLEN_MAX
 512

	)

26 #i‚de‡
HOST_NAME_MAX


27 
	#HOST_NAME_MAX
 256

	)

30 
	#IPP_PORT
 631

	)

31 
	#QLEN
 10

	)

32 
	#IBUFSZ
 512

	)

33 
	#HBUFSZ
 512

	)

34 
	#IOBUFSZ
 8192

	)

36 #i‚de‡
ETIME


37 
	#ETIME
 
ETIMEDOUT


	)

40 
gëaddæi°
(const *, const *,

41 
addröfo
 **);

42 *
gë_¥öt£rvî
();

43 
addröfo
 *
gë_¥öèddr
();

44 
ssize_t
 
åód
(, *, 
size_t
, );

45 
ssize_t
 
åódn
(, *, 
size_t
, );

46 
c⁄√˘_ªåy
(, c⁄° 
sockaddr
 *, 
sockÀn_t
);

47 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

52 
	s¥öåeq
 {

53 
	msize
;

54 
	mÊags
;

55 
	mu£∫m
[
USERNM_MAX
];

56 
	mjobnm
[
JOBNM_MAX
];

62 
	#PR_TEXT
 0x01

	)

67 
	s¥öåe•
 {

68 
	mªtcode
;

69 
	mjobid
;

70 
	mmsg
[
MSGLEN_MAX
];

	@ipp/printd.c

4 
	~"≠ue.h
"

5 
	~"¥öt.h
"

6 
	~"ùp.h
"

7 
	~<f˙é.h
>

8 
	~<dúít.h
>

9 
	~<˘y≥.h
>

10 
	~<pwd.h
>

11 
	~<±hªad.h
>

12 
	~<°rögs.h
>

13 
	~<sys/£À˘.h
>

14 
	~<sys/uio.h
>

19 
	#HTTP_INFO
(
x
Ë((xË>100 && (xË<199)

	)

20 
	#HTTP_SUCCESS
(
x
Ë((xË>200 && (xË<299)

	)

25 
	sjob
 {

26 
job
 *
	m√xt
;

27 
job
 *
	m¥ev
;

28 
	mjobid
;

29 
¥öåeq
 
	mªq
;

35 
	sw‹kî_thªad
 {

36 
w‹kî_thªad
 *
	m√xt
;

37 
w‹kî_thªad
 *
	m¥ev
;

38 
±hªad_t
 
	mtid
;

39 
	msockfd
;

45 
	glog_to_°dîr
 = 0;

50 
addröfo
 *
	g¥öãr
;

51 *
	g¥öãr_«me
;

52 
±hªad_muãx_t
 
	gc⁄figlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

53 
	gªªad
;

58 
w‹kî_thªad
 *
	gw‹kîs
;

59 
±hªad_muãx_t
 
	gw‹kîlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

60 
sig£t_t
 
	gmask
;

65 
job
 *
	gjobhód
, *
	gjobèû
;

66 
	gjobfd
;

67 
	g√xtjob
;

68 
±hªad_muãx_t
 
	gjoblock
 = 
PTHREAD_MUTEX_INITIALIZER
;

69 
±hªad_c⁄d_t
 
	gjobwaô
 = 
PTHREAD_COND_INITIALIZER
;

74 
öô_ªque°
();

75 
öô_¥öãr
();

76 
upd©e_jobno
();

77 
gë_√wjobno
();

78 
add_job
(
¥öåeq
 *, );

79 
ª∂a˚_job
(
job
 *);

80 
ªmove_job
(
job
 *);

81 
buûd_q⁄°¨t
();

82 *
˛õ¡_thªad
(*);

83 *
¥öãr_thªad
(*);

84 *
sig«l_thªad
(*);

85 
ssize_t
 
ªadm‹e
(, **, , *);

86 
¥öãr_°©us
(, 
job
 *);

87 
add_w‹kî
(
±hªad_t
, );

88 
kûl_w‹kîs
();

89 
˛õ¡_˛ónup
(*);

98 
	$maö
(
¨gc
, *
¨gv
[])

100 
±hªad_t
 
tid
;

101 
addröfo
 *
aûi°
, *
aù
;

102 
sockfd
, 
îr
, 
i
, 
n
, 
maxfd
;

103 *
ho°
;

104 
fd_£t
 
ªndezvous
, 
r£t
;

105 
siga˘i⁄
 
ß
;

106 
∑sswd
 *
pwdp
;

108 i‡(
¨gc
 != 1)

109 
	`îr_quô
("usage:Örintd");

110 
	`d´m⁄ize
("printd");

112 
	`sigem±y£t
(&
ß
.
ß_mask
);

113 
ß
.
ß_Êags
 = 0;

114 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

115 i‡(
	`siga˘i⁄
(
SIGPIPE
, &
ß
, 
NULL
) < 0)

116 
	`log_sys
("sigaction failed");

117 
	`sigem±y£t
(&
mask
);

118 
	`sigadd£t
(&
mask
, 
SIGHUP
);

119 
	`sigadd£t
(&
mask
, 
SIGTERM
);

120 i‡((
îr
 = 
	`±hªad_sigmask
(
SIG_BLOCK
, &
mask
, 
NULL
)) != 0)

121 
	`log_sys
("pthread_sigmask failed");

122 
	`öô_ªque°
();

123 
	`öô_¥öãr
();

125 #ifde‡
_SC_HOST_NAME_MAX


126 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

127 i‡(
n
 < 0)

129 
n
 = 
HOST_NAME_MAX
;

131 i‡((
ho°
 = 
	`mÆloc
(
n
)Ë=
NULL
)

132 
	`log_sys
("mallocÉrror");

133 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

134 
	`log_sys
("gethostnameÉrror");

135 i‡((
îr
 = 
	`gëaddæi°
(
ho°
, "¥öt", &
aûi°
)) != 0) {

136 
	`log_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

137 
	`exô
(1);

139 
	`FD_ZERO
(&
ªndezvous
);

140 
maxfd
 = -1;

141 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

142 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_STREAM
, 
aù
->
ai_addr
,

143 
aù
->
ai_addæí
, 
QLEN
)) >= 0) {

144 
	`FD_SET
(
sockfd
, &
ªndezvous
);

145 i‡(
sockfd
 > 
maxfd
)

146 
maxfd
 = 
sockfd
;

149 i‡(
maxfd
 == -1)

150 
	`log_quô
("serviceÇotÉnabled");

152 
pwdp
 = 
	`gëpw«m
("lp");

153 i‡(
pwdp
 =
NULL
)

154 
	`log_sys
("can't find userÜp");

155 i‡(
pwdp
->
pw_uid
 == 0)

156 
	`log_quô
("userÜp isÖrivileged");

157 i‡(
	`£tuid
(
pwdp
->
pw_uid
) < 0)

158 
	`log_sys
("can't change IDsÅo userÜp");

160 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
¥öãr_thªad
, NULL);

161 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
sig«l_thªad
, NULL);

162 
	`buûd_q⁄°¨t
();

164 
	`log_msg
("daemon initialized");

167 
r£t
 = 
ªndezvous
;

168 i‡(
	`£À˘
(
maxfd
+1, &
r£t
, 
NULL
, NULL, NULL) < 0)

169 
	`log_sys
("select failed");

170 
i
 = 0; i <
maxfd
; i++) {

171 i‡(
	`FD_ISSET
(
i
, &
r£t
)) {

177 
sockfd
 = 
	`ac˚±
(
i
, 
NULL
, NULL);

178 i‡(
sockfd
 < 0)

179 
	`log_ªt
("accept failed");

180 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
˛õ¡_thªad
,

181 (*)
sockfd
);

185 
	`exô
(1);

186 
	}
}

195 
	$öô_ªque°
()

197 
n
;

198 
«me
[
FILENMSZ
];

200 
	`•rötf
(
«me
, "%s/%s", 
SPOOLDIR
, 
JOBFILE
);

201 
jobfd
 = 
	`›í
(
«me
, 
O_CREAT
|
O_RDWR
, 
S_IRUSR
|
S_IWUSR
);

202 i‡(
	`wrôe_lock
(
jobfd
, 0, 
SEEK_SET
, 0) < 0)

203 
	`log_quô
("daemonálreadyÑunning");

208 i‡((
n
 = 
	`ªad
(
jobfd
, 
«me
, 
FILENMSZ
)) < 0)

209 
	`log_sys
("can'tÑead job file");

210 i‡(
n
 == 0)

211 
√xtjob
 = 1;

213 
√xtjob
 = 
	`©ﬁ
(
«me
);

214 
	}
}

222 
	$öô_¥öãr
()

224 
¥öãr
 = 
	`gë_¥öèddr
();

225 i‡(
¥öãr
 =
NULL
) {

226 
	`log_msg
("noÖrinter deviceÑegistered");

227 
	`exô
(1);

229 
¥öãr_«me
 = 
¥öãr
->
ai_ˇn⁄«me
;

230 i‡(
¥öãr_«me
 =
NULL
)

231 
¥öãr_«me
 = "printer";

232 
	`log_msg
("¥öã∏i†%s", 
¥öãr_«me
);

233 
	}
}

241 
	$upd©e_jobno
()

243 
buf
[32];

245 
	`l£ek
(
jobfd
, 0, 
SEEK_SET
);

246 
	`•rötf
(
buf
, "%ld", 
√xtjob
);

247 i‡(
	`wrôe
(
jobfd
, 
buf
, 
	`°æí
(buf)) < 0)

248 
	`log_sys
("can't update job file");

249 
	}
}

257 
	$gë_√wjobno
()

259 
jobid
;

261 
	`±hªad_muãx_lock
(&
joblock
);

262 
jobid
 = 
√xtjob
++;

263 i‡(
√xtjob
 <= 0)

264 
√xtjob
 = 1;

265 
	`±hªad_muãx_u∆ock
(&
joblock
);

266 (
jobid
);

267 
	}
}

276 
	$add_job
(
¥öåeq
 *
ªqp
, 
jobid
)

278 
job
 *
jp
;

280 i‡((
jp
 = 
	`mÆloc
((
job
))Ë=
NULL
)

281 
	`log_sys
("malloc failed");

282 
	`mem˝y
(&
jp
->
ªq
, 
ªqp
, (
¥öåeq
));

283 
jp
->
jobid
 = jobid;

284 
jp
->
√xt
 = 
NULL
;

285 
	`±hªad_muãx_lock
(&
joblock
);

286 
jp
->
¥ev
 = 
jobèû
;

287 i‡(
jobèû
 =
NULL
)

288 
jobhód
 = 
jp
;

290 
jobèû
->
√xt
 = 
jp
;

291 
jobèû
 = 
jp
;

292 
	`±hªad_muãx_u∆ock
(&
joblock
);

293 
	`±hªad_c⁄d_sig«l
(&
jobwaô
);

294 
	}
}

302 
	$ª∂a˚_job
(
job
 *
jp
)

304 
	`±hªad_muãx_lock
(&
joblock
);

305 
jp
->
¥ev
 = 
NULL
;

306 
jp
->
√xt
 = 
jobhód
;

307 i‡(
jobhód
 =
NULL
)

308 
jobèû
 = 
jp
;

310 
jobhód
->
¥ev
 = 
jp
;

311 
jobhód
 = 
jp
;

312 
	`±hªad_muãx_u∆ock
(&
joblock
);

313 
	}
}

321 
	$ªmove_job
(
job
 *
èrgë
)

323 i‡(
èrgë
->
√xt
 !
NULL
)

324 
èrgë
->
√xt
->
¥ev
 =Åarget->prev;

326 
jobèû
 = 
èrgë
->
¥ev
;

327 i‡(
èrgë
->
¥ev
 !
NULL
)

328 
èrgë
->
¥ev
->
√xt
 =Åarget->next;

330 
jobhód
 = 
èrgë
->
√xt
;

331 
	}
}

339 
	$buûd_q⁄°¨t
()

341 
fd
, 
îr
, 
ƒ
;

342 
jobid
;

343 
DIR
 *
dúp
;

344 
dúít
 *
íç
;

345 
¥öåeq
 
ªq
;

346 
d«me
[
FILENMSZ
], 
‚ame
[FILENMSZ];

348 
	`•rötf
(
d«me
, "%s/%s", 
SPOOLDIR
, 
REQDIR
);

349 i‡((
dúp
 = 
	`›ídú
(
d«me
)Ë=
NULL
)

351 (
íç
 = 
	`ªaddú
(
dúp
)Ë!
NULL
) {

355 i‡(
	`°rcmp
(
íç
->
d_«me
, ".") == 0 ||

356 
	`°rcmp
(
íç
->
d_«me
, "..") == 0)

362 
	`•rötf
(
‚ame
, "%s/%s/%s", 
SPOOLDIR
, 
REQDIR
, 
íç
->
d_«me
);

363 i‡((
fd
 = 
	`›í
(
‚ame
, 
O_RDONLY
)) < 0)

365 
ƒ
 = 
	`ªad
(
fd
, &
ªq
, (
¥öåeq
));

366 i‡(
ƒ
 !(
¥öåeq
)) {

367 i‡(
ƒ
 < 0)

368 
îr
 = 
î∫o
;

370 
îr
 = 
EIO
;

371 
	`˛o£
(
fd
);

372 
	`log_msg
("build_qonstart: can'tÑead %s: %s",

373 
‚ame
, 
	`°ªº‹
(
îr
));

374 
	`u∆ök
(
‚ame
);

375 
	`•rötf
(
‚ame
, "%s/%s/%s", 
SPOOLDIR
, 
DATADIR
,

376 
íç
->
d_«me
);

377 
	`u∆ök
(
‚ame
);

380 
jobid
 = 
	`©ﬁ
(
íç
->
d_«me
);

381 
	`log_msg
("addög job %ldÅÿqueue", 
jobid
);

382 
	`add_job
(&
ªq
, 
jobid
);

384 
	`˛o£dú
(
dúp
);

385 
	}
}

393 
	$˛õ¡_thªad
(*
¨g
)

395 
n
, 
fd
, 
sockfd
, 
ƒ
, 
nw
, 
fú°
;

396 
jobid
;

397 
±hªad_t
 
tid
;

398 
¥öåeq
 
ªq
;

399 
¥öåe•
 
ªs
;

400 
«me
[
FILENMSZ
];

401 
buf
[
IOBUFSZ
];

403 
tid
 = 
	`±hªad_£lf
();

404 
	`±hªad_˛ónup_push
(
˛õ¡_˛ónup
, (*)
tid
);

405 
sockfd
 = ()
¨g
;

406 
	`add_w‹kî
(
tid
, 
sockfd
);

411 i‡((
n
 = 
	`åódn
(
sockfd
, &
ªq
, (
¥öåeq
), 10)) !=

412 (
¥öåeq
)) {

413 
ªs
.
jobid
 = 0;

414 i‡(
n
 < 0)

415 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

417 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

418 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

419 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

420 
	`±hªad_exô
((*)1);

422 
ªq
.
size
 = 
	`¡ohl
(req.size);

423 
ªq
.
Êags
 = 
	`¡ohl
(req.flags);

428 
jobid
 = 
	`gë_√wjobno
();

429 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jobid
);

430 i‡((
fd
 = 
	`¸ót
(
«me
, 
FILEPERM
)) < 0) {

431 
ªs
.
jobid
 = 0;

432 i‡(
n
 < 0)

433 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

435 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

436 
	`log_msg
("˛õ¡_thªad: c™'à¸óã %s: %s", 
«me
,

437 
	`°ªº‹
(
ªs
.
ªtcode
));

438 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

439 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

440 
	`±hªad_exô
((*)1);

446 
fú°
 = 1;

447 (
ƒ
 = 
	`åód
(
sockfd
, 
buf
, 
IOBUFSZ
, 20)) > 0) {

448 i‡(
fú°
) {

449 
fú°
 = 0;

450 i‡(
	`°∫cmp
(
buf
, "%!PS", 4) != 0)

451 
ªq
.
Êags
 |
PR_TEXT
;

453 
nw
 = 
	`wrôe
(
fd
, 
buf
, 
ƒ
);

454 i‡(
nw
 !
ƒ
) {

455 i‡(
nw
 < 0)

456 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

458 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

459 
	`log_msg
("˛õ¡_thªad: c™'àwrôê%s: %s", 
«me
,

460 
	`°ªº‹
(
ªs
.
ªtcode
));

461 
	`˛o£
(
fd
);

462 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

463 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

464 
	`u∆ök
(
«me
);

465 
	`±hªad_exô
((*)1);

468 
	`˛o£
(
fd
);

473 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
REQDIR
, 
jobid
);

474 
fd
 = 
	`¸ót
(
«me
, 
FILEPERM
);

475 i‡(
fd
 < 0) {

476 
ªs
.
jobid
 = 0;

477 i‡(
n
 < 0)

478 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

480 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

481 
	`log_msg
("˛õ¡_thªad: c™'à¸óã %s: %s", 
«me
,

482 
	`°ªº‹
(
ªs
.
ªtcode
));

483 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

484 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

485 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jobid
);

486 
	`u∆ök
(
«me
);

487 
	`±hªad_exô
((*)1);

489 
nw
 = 
	`wrôe
(
fd
, &
ªq
, (
¥öåeq
));

490 i‡(
nw
 !(
¥öåeq
)) {

491 
ªs
.
jobid
 = 0;

492 i‡(
nw
 < 0)

493 
ªs
.
ªtcode
 = 
	`ht⁄l
(
î∫o
);

495 
ªs
.
ªtcode
 = 
	`ht⁄l
(
EIO
);

496 
	`log_msg
("˛õ¡_thªad: c™'àwrôê%s: %s", 
«me
,

497 
	`°ªº‹
(
ªs
.
ªtcode
));

498 
	`˛o£
(
fd
);

499 
	`°∫˝y
(
ªs
.
msg
, 
	`°ªº‹
‘es.
ªtcode
), 
MSGLEN_MAX
);

500 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

501 
	`u∆ök
(
«me
);

502 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jobid
);

503 
	`u∆ök
(
«me
);

504 
	`±hªad_exô
((*)1);

506 
	`˛o£
(
fd
);

511 
ªs
.
ªtcode
 = 0;

512 
ªs
.
jobid
 = 
	`ht⁄l
(jobid);

513 
	`•rötf
(
ªs
.
msg
, "ªque° ID %ld", 
jobid
);

514 
	`wrôí
(
sockfd
, &
ªs
, (
¥öåe•
));

519 
	`log_msg
("addög job %ldÅÿqueue", 
jobid
);

520 
	`add_job
(&
ªq
, 
jobid
);

521 
	`±hªad_˛ónup_p›
(1);

523 
	}
}

531 
	$add_w‹kî
(
±hªad_t
 
tid
, 
sockfd
)

533 
w‹kî_thªad
 *
wç
;

535 i‡((
wç
 = 
	`mÆloc
((
w‹kî_thªad
))Ë=
NULL
) {

536 
	`log_ªt
("add_worker: can't malloc");

537 
	`±hªad_exô
((*)1);

539 
wç
->
tid
 =Åid;

540 
wç
->
sockfd
 = sockfd;

541 
	`±hªad_muãx_lock
(&
w‹kîlock
);

542 
wç
->
¥ev
 = 
NULL
;

543 
wç
->
√xt
 = 
w‹kîs
;

544 i‡(
w‹kîs
 =
NULL
)

545 
w‹kîs
 = 
wç
;

547 
w‹kîs
->
¥ev
 = 
wç
;

548 
	`±hªad_muãx_u∆ock
(&
w‹kîlock
);

549 
	}
}

557 
	$kûl_w‹kîs
()

559 
w‹kî_thªad
 *
wç
;

561 
	`±hªad_muãx_lock
(&
w‹kîlock
);

562 
wç
 = 
w‹kîs
; wç !
NULL
; wç = wç->
√xt
)

563 
	`±hªad_ˇn˚l
(
wç
->
tid
);

564 
	`±hªad_muãx_u∆ock
(&
w‹kîlock
);

565 
	}
}

573 
	$˛õ¡_˛ónup
(*
¨g
)

575 
w‹kî_thªad
 *
wç
;

576 
±hªad_t
 
tid
;

578 
tid
 = (
±hªad_t
)
¨g
;

579 
	`±hªad_muãx_lock
(&
w‹kîlock
);

580 
wç
 = 
w‹kîs
; wç !
NULL
; wç = wç->
√xt
) {

581 i‡(
wç
->
tid
 ==Åid) {

582 i‡(
wç
->
√xt
 !
NULL
)

583 
wç
->
√xt
->
¥ev
 = wtp->prev;

584 i‡(
wç
->
¥ev
 !
NULL
)

585 
wç
->
¥ev
->
√xt
 = wtp->next;

587 
w‹kîs
 = 
wç
->
√xt
;

591 
	`±hªad_muãx_u∆ock
(&
w‹kîlock
);

592 i‡(
wç
 !
NULL
) {

593 
	`˛o£
(
wç
->
sockfd
);

594 
	`‰ì
(
wç
);

596 
	}
}

604 
	$sig«l_thªad
(*
¨g
)

606 
îr
, 
signo
;

609 
îr
 = 
	`sigwaô
(&
mask
, &
signo
);

610 i‡(
îr
 != 0)

611 
	`log_quô
("sigwaô faûed: %s", 
	`°ªº‹
(
îr
));

612 
signo
) {

613 
SIGHUP
:

617 
	`±hªad_muãx_lock
(&
c⁄figlock
);

618 
ªªad
 = 1;

619 
	`±hªad_muãx_u∆ock
(&
c⁄figlock
);

622 
SIGTERM
:

623 
	`kûl_w‹kîs
();

624 
	`log_msg
("ãrmö©êwôh sig«»%s", 
	`°rsig«l
(
signo
));

625 
	`exô
(0);

628 
	`kûl_w‹kîs
();

629 
	`log_quô
("u√x≥˘ed sig«»%d", 
signo
);

632 
	}
}

640 
	$add_›ti⁄
(*
˝
, 
èg
, *
›äame
, *
›tvÆ
)

642 
n
;

644 
öt16_t
 
s
;

645 
c
[2];

646 } 
u
;

648 *
˝
++ = 
èg
;

649 
n
 = 
	`°æí
(
›äame
);

650 
u
.
s
 = 
	`ht⁄s
(
n
);

651 *
˝
++ = 
u
.
c
[0];

652 *
˝
++ = 
u
.
c
[1];

653 
	`°r˝y
(
˝
, 
›äame
);

654 
˝
 +
n
;

655 
n
 = 
	`°æí
(
›tvÆ
);

656 
u
.
s
 = 
	`ht⁄s
(
n
);

657 *
˝
++ = 
u
.
c
[0];

658 *
˝
++ = 
u
.
c
[1];

659 
	`°r˝y
(
˝
, 
›tvÆ
);

660 (
˝
 + 
n
);

661 
	}
}

669 
	$¥öãr_thªad
(*
¨g
)

671 
job
 *
jp
;

672 
hÀn
, 
ûí
, 
sockfd
, 
fd
, 
ƒ
, 
nw
;

673 *
i˝
, *
h˝
;

674 
ùp_hdr
 *
hp
;

675 
°©
 
sbuf
;

676 
iovec
 
iov
[2];

677 
«me
[
FILENMSZ
];

678 
hbuf
[
HBUFSZ
];

679 
ibuf
[
IBUFSZ
];

680 
buf
[
IOBUFSZ
];

681 
°r
[64];

687 
	`±hªad_muãx_lock
(&
joblock
);

688 
jobhód
 =
NULL
) {

689 
	`log_msg
("printer_thread: waiting...");

690 
	`±hªad_c⁄d_waô
(&
jobwaô
, &
joblock
);

692 
	`ªmove_job
(
jp
 = 
jobhód
);

693 
	`log_msg
("¥öãr_thªad:Öicked u∞job %ld", 
jp
->
jobid
);

694 
	`±hªad_muãx_u∆ock
(&
joblock
);

696 
	`upd©e_jobno
();

701 
	`±hªad_muãx_lock
(&
c⁄figlock
);

702 i‡(
ªªad
) {

703 
	`‰ìaddröfo
(
¥öãr
);

704 
¥öãr
 = 
NULL
;

705 
¥öãr_«me
 = 
NULL
;

706 
ªªad
 = 0;

707 
	`±hªad_muãx_u∆ock
(&
c⁄figlock
);

708 
	`öô_¥öãr
();

710 
	`±hªad_muãx_u∆ock
(&
c⁄figlock
);

716 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
DATADIR
, 
jp
->
jobid
);

717 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDONLY
)) < 0) {

718 
	`log_msg
("job %ld canceled - can't open %s: %s",

719 
jp
->
jobid
, 
«me
, 
	`°ªº‹
(
î∫o
));

720 
	`‰ì
(
jp
);

723 i‡(
	`f°©
(
fd
, &
sbuf
) < 0) {

724 
	`log_msg
("job %ld canceled - can't fstat %s: %s",

725 
jp
->
jobid
, 
«me
, 
	`°ªº‹
(
î∫o
));

726 
	`‰ì
(
jp
);

727 
	`˛o£
(
fd
);

730 i‡((
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0) {

731 
	`log_msg
("job %ld deferred - can't create socket: %s",

732 
jp
->
jobid
, 
	`°ªº‹
(
î∫o
));

733 
de„r
;

735 i‡(
	`c⁄√˘_ªåy
(
sockfd
, 
¥öãr
->
ai_addr
,

736 
¥öãr
->
ai_addæí
) < 0) {

737 
	`log_msg
("job %ld deferred - can't contactÖrinter: %s",

738 
jp
->
jobid
, 
	`°ªº‹
(
î∫o
));

739 
de„r
;

745 
i˝
 = 
ibuf
;

746 
hp
 = (
ùp_hdr
 *)
i˝
;

747 
hp
->
maj‹_vîsi⁄
 = 1;

748 
hp
->
mö‹_vîsi⁄
 = 1;

749 
hp
->
›î©i⁄
 = 
	`ht⁄s
(
OP_PRINT_JOB
);

750 
hp
->
ªque°_id
 = 
	`ht⁄l
(
jp
->
jobid
);

751 
i˝
 +
	`off£tof
(
ùp_hdr
, 
©å_group
);

752 *
i˝
++ = 
TAG_OPERATION_ATTR
;

753 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_CHARSET
, "attributes-charset",

755 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_NATULANG
,

757 
	`•rötf
(
°r
, "hâp://%s:%d", 
¥öãr_«me
, 
IPP_PORT
);

758 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_URI
, "¥öãr-uri", 
°r
);

759 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_NAMEWOLANG
,

760 "ªque°ög-u£r-«me", 
jp
->
ªq
.
u£∫m
);

761 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_NAMEWOLANG
, "job-name",

762 
jp
->
ªq
.
jobnm
);

763 i‡(
jp
->
ªq
.
Êags
 & 
PR_TEXT
) {

764 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_MIMETYPE
, "document-format",

767 
i˝
 = 
	`add_›ti⁄
(i˝, 
TAG_MIMETYPE
, "document-format",

770 *
i˝
++ = 
TAG_END_OF_ATTR
;

771 
ûí
 = 
i˝
 - 
ibuf
;

776 
h˝
 = 
hbuf
;

777 
	`•rötf
(
h˝
, "POST /%s/ù∞HTTP/1.1\r\n", 
¥öãr_«me
);

778 
h˝
 +
	`°æí
(hcp);

779 
	`•rötf
(
h˝
, "Content-Length: %ld\r\n",

780 ()
sbuf
.
°_size
 + 
ûí
);

781 
h˝
 +
	`°æí
(hcp);

782 
	`°r˝y
(
h˝
, "Content-Type:ápplication/ipp\r\n");

783 
h˝
 +
	`°æí
(hcp);

784 
	`•rötf
(
h˝
, "Ho°: %s:%d\r\n", 
¥öãr_«me
, 
IPP_PORT
);

785 
h˝
 +
	`°æí
(hcp);

786 *
h˝
++ = '\r';

787 *
h˝
++ = '\n';

788 
hÀn
 = 
h˝
 - 
hbuf
;

793 
iov
[0].
iov_ba£
 = 
hbuf
;

794 
iov
[0].
iov_Àn
 = 
hÀn
;

795 
iov
[1].
iov_ba£
 = 
ibuf
;

796 
iov
[1].
iov_Àn
 = 
ûí
;

797 i‡((
nw
 = 
	`wrôev
(
sockfd
, 
iov
, 2)Ë!
hÀn
 + 
ûí
) {

798 
	`log_ªt
("can't writeÅoÖrinter");

799 
de„r
;

801 (
ƒ
 = 
	`ªad
(
fd
, 
buf
, 
IOBUFSZ
)) > 0) {

802 i‡((
nw
 = 
	`wrôe
(
sockfd
, 
buf
, 
ƒ
)) !=Çr) {

803 i‡(
nw
 < 0)

804 
	`log_ªt
("can't writeÅoÖrinter");

806 
	`log_msg
("sh‹àwrôê(%d/%dËtÿ¥öãr", 
nw
, 
ƒ
);

807 
de„r
;

810 i‡(
ƒ
 < 0) {

811 
	`log_ªt
("ˇn'àªad %s", 
«me
);

812 
de„r
;

818 i‡(
	`¥öãr_°©us
(
sockfd
, 
jp
)) {

819 
	`u∆ök
(
«me
);

820 
	`•rötf
(
«me
, "%s/%s/%ld", 
SPOOLDIR
, 
REQDIR
, 
jp
->
jobid
);

821 
	`u∆ök
(
«me
);

822 
	`‰ì
(
jp
);

823 
jp
 = 
NULL
;

825 
de„r
:

826 
	`˛o£
(
fd
);

827 i‡(
sockfd
 >= 0)

828 
	`˛o£
(
sockfd
);

829 i‡(
jp
 !
NULL
) {

830 
	`ª∂a˚_job
(
jp
);

831 
	`¶ìp
(60);

834 
	}
}

842 
ssize_t


843 
	$ªadm‹e
(
sockfd
, **
bµ
, 
off
, *
bszp
)

845 
ssize_t
 
ƒ
;

846 *
bp
 = *
bµ
;

847 
bsz
 = *
bszp
;

849 i‡(
off
 >
bsz
) {

850 
bsz
 +
IOBUFSZ
;

851 i‡((
bp
 = 
	`ªÆloc
(*
bµ
, 
bsz
)Ë=
NULL
)

852 
	`log_sys
("readmore: can'tállocate biggerÑead buffer");

853 *
bszp
 = 
bsz
;

854 *
bµ
 = 
bp
;

856 i‡((
ƒ
 = 
	`åód
(
sockfd
, &
bp
[
off
], 
bsz
-off, 1)) > 0)

857 (
off
+
ƒ
);

860 
	}
}

869 
	$¥öãr_°©us
(
sockfd
, 
job
 *
jp
)

871 
i
, 
suc˚ss
, 
code
, 
Àn
, 
found
, 
bufsz
;

872 
jobid
;

873 
ssize_t
 
ƒ
;

874 *
°©code
, *
ªas⁄
, *
˝
, *
c⁄ã¡Àn
;

875 
ùp_hdr
 *
hp
;

876 *
bp
;

883 
suc˚ss
 = 0;

884 
bufsz
 = 
IOBUFSZ
;

885 i‡((
bp
 = 
	`mÆloc
(
IOBUFSZ
)Ë=
NULL
)

886 
	`log_sys
("printer_status: can'tállocateÑead buffer");

888 (
ƒ
 = 
	`åód
(
sockfd
, 
bp
, 
IOBUFSZ
, 5)) > 0) {

893 
˝
 = 
bp
 + 8;

894 
	`is•a˚
(()*
˝
))

895 
˝
++;

896 
°©code
 = 
˝
;

897 
	`isdigô
(()*
˝
))

898 
˝
++;

899 i‡(
˝
 =
°©code
) {

900 
	`log_msg
(
bp
);

902 *
˝
++ = '\0';

903 
ªas⁄
 = 
˝
;

904 *
˝
 != '\r' && *cp != '\n')

905 
˝
++;

906 *
˝
 = '\0';

907 
code
 = 
	`©oi
(
°©code
);

908 i‡(
	`HTTP_INFO
(
code
))

910 i‡(!
	`HTTP_SUCCESS
(
code
)) {

911 
bp
[
ƒ
] = '\0';

912 
	`log_msg
("îr‹: %s", 
ªas⁄
);

921 
i
 = 
˝
 - 
bp
;

923 *
˝
 !'C' && *˝ !'c' && 
i
 < 
ƒ
) {

924 
˝
++;

925 
i
++;

927 i‡(
i
 >
ƒ
 &&

928 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

929 
out
;

930 
˝
 = &
bp
[
i
];

931 i‡(
	`°∫ˇ£cmp
(
˝
, "Content-Length:", 15) == 0) {

932 
˝
 += 15;

933 
	`is•a˚
(()*
˝
))

934 
˝
++;

935 
c⁄ã¡Àn
 = 
˝
;

936 
	`isdigô
(()*
˝
))

937 
˝
++;

938 *
˝
++ = '\0';

939 
i
 = 
˝
 - 
bp
;

940 
Àn
 = 
	`©oi
(
c⁄ã¡Àn
);

943 
˝
++;

944 
i
++;

947 i‡(
i
 >
ƒ
 &&

948 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

949 
out
;

950 
˝
 = &
bp
[
i
];

952 
found
 = 0;

953 !
found
) {

954 
i
 < 
ƒ
 - 2) {

955 i‡(*
˝
 == '\n' && *(cp + 1) == '\r' &&

956 *(
˝
 + 2) == '\n') {

957 
found
 = 1;

958 
˝
 += 3;

959 
i
 += 3;

962 
˝
++;

963 
i
++;

965 i‡(
i
 >
ƒ
 &&

966 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

967 
out
;

968 
˝
 = &
bp
[
i
];

971 i‡(
ƒ
 - 
i
 < 
Àn
 &&

972 ((
ƒ
 = 
	`ªadm‹e
(
sockfd
, &
bp
, 
i
, &
bufsz
)) < 0))

973 
out
;

974 
˝
 = &
bp
[
i
];

976 
hp
 = (
ùp_hdr
 *)
˝
;

977 
i
 = 
	`¡ohs
(
hp
->
°©us
);

978 
jobid
 = 
	`¡ohl
(
hp
->
ªque°_id
);

979 i‡(
jobid
 !
jp
->jobid) {

983 
	`log_msg
("jobid %ld sètu†codê%d", 
jobid
, 
i
);

987 i‡(
	`STATCLASS_OK
(
i
))

988 
suc˚ss
 = 1;

993 
out
:

994 
	`‰ì
(
bp
);

995 i‡(
ƒ
 < 0) {

996 
	`log_msg
("jobid %ld:ÉrrorÑeadingÖrinterÑesponse: %s",

997 
jobid
, 
	`°ªº‹
(
î∫o
));

999 (
suc˚ss
);

1000 
	}
}

	@ipp/util.c

1 
	~"≠ue.h
"

2 
	~"¥öt.h
"

3 
	~<˘y≥.h
>

4 
	~<sys/£À˘.h
>

6 
	#MAXCFGLINE
 512

	)

7 
	#MAXKWLEN
 16

	)

8 
	#MAXFMTLEN
 16

	)

19 
	$gëaddæi°
(c⁄° *
ho°
, c⁄° *
£rvi˚
,

20 
addröfo
 **
aûi°µ
)

22 
îr
;

23 
addröfo
 
höt
;

25 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

26 
höt
.
ai_Ámûy
 = 
AF_INET
;

27 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

28 
höt
.
ai_¥Ÿocﬁ
 = 0;

29 
höt
.
ai_addæí
 = 0;

30 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

31 
höt
.
ai_addr
 = 
NULL
;

32 
höt
.
ai_√xt
 = 
NULL
;

33 
îr
 = 
	`gëaddröfo
(
ho°
, 
£rvi˚
, &
höt
, 
aûi°µ
);

34 (
îr
);

35 
	}
}

44 
	$sˇn_c⁄figfûe
(*
keyw‹d
)

46 
n
, 
m©ch
;

47 
FILE
 *
Â
;

48 
keybuf
[
MAXKWLEN
], 
∑âîn
[
MAXFMTLEN
];

49 
löe
[
MAXCFGLINE
];

50 
vÆbuf
[
MAXCFGLINE
];

52 i‡((
Â
 = 
	`f›í
(
CONFIG_FILE
, "r")Ë=
NULL
)

53 
	`log_sys
("ˇn'à›í %s", 
CONFIG_FILE
);

54 
	`•rötf
(
∑âîn
, "%%%d†%%%ds", 
MAXKWLEN
-1, 
MAXCFGLINE
-1);

55 
m©ch
 = 0;

56 
	`fgës
(
löe
, 
MAXCFGLINE
, 
Â
Ë!
NULL
) {

57 
n
 = 
	`ssˇnf
(
löe
, 
∑âîn
, 
keybuf
, 
vÆbuf
);

58 i‡(
n
 =2 && 
	`°rcmp
(
keyw‹d
, 
keybuf
) == 0) {

59 
m©ch
 = 1;

63 
	`f˛o£
(
Â
);

64 i‡(
m©ch
 != 0)

65 (
vÆbuf
);

67 (
NULL
);

68 
	}
}

76 
	$gë_¥öt£rvî
()

78 (
	`sˇn_c⁄figfûe
("printserver"));

79 
	}
}

86 
addröfo
 *

87 
	$gë_¥öèddr
()

89 
îr
;

90 *
p
;

91 
addröfo
 *
aûi°
;

93 i‡((
p
 = 
	`sˇn_c⁄figfûe
("¥öãr")Ë!
NULL
) {

94 i‡((
îr
 = 
	`gëaddæi°
(
p
, "ùp", &
aûi°
)) != 0) {

95 
	`log_msg
("nÿaddªs†öf‹m©i⁄ f‹ %s", 
p
);

96 (
NULL
);

98 (
aûi°
);

100 
	`log_msg
("noÖrinteráddress specified");

101 (
NULL
);

102 
	}
}

111 
ssize_t


112 
	$åód
(
fd
, *
buf
, 
size_t
 
nbyãs
, 
timout
)

114 
nfds
;

115 
fd_£t
 
ªadfds
;

116 
timevÆ
 
tv
;

118 
tv
.
tv_£c
 = 
timout
;

119 
tv
.
tv_u£c
 = 0;

120 
	`FD_ZERO
(&
ªadfds
);

121 
	`FD_SET
(
fd
, &
ªadfds
);

122 
nfds
 = 
	`£À˘
(
fd
+1, &
ªadfds
, 
NULL
, NULL, &
tv
);

123 i‡(
nfds
 <= 0) {

124 i‡(
nfds
 == 0)

125 
î∫o
 = 
ETIME
;

128 (
	`ªad
(
fd
, 
buf
, 
nbyãs
));

129 
	}
}

138 
ssize_t


139 
	$åódn
(
fd
, *
buf
, 
size_t
 
nbyãs
, 
timout
)

141 
size_t
 
∆e·
;

142 
ssize_t
 
ƒód
;

144 
∆e·
 = 
nbyãs
;

145 
∆e·
 > 0) {

146 i‡((
ƒód
 = 
	`åód
(
fd
, 
buf
, 
∆e·
, 
timout
)) < 0) {

147 i‡(
∆e·
 =
nbyãs
)

151 } i‡(
ƒód
 == 0) {

154 
∆e·
 -
ƒód
;

155 
buf
 +
ƒód
;

157 (
nbyãs
 - 
∆e·
);

158 
	}
}

	@lib/bsd_ptyopen.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<gΩ.h
>

6 #i‚de‡
_HAS_OPENPT


8 
	$posix_›í±
(
oÊag
)

10 
fdm
;

11 *
±r1
, *
±r2
;

12 
±m_«me
[16];

14 
	`°r˝y
(
±m_«me
, "/dev/ptyXY");

16 
±r1
 = "pqrstuvwxyzPQRST"; *ptr1 != 0;Ötr1++) {

17 
±m_«me
[8] = *
±r1
;

18 
±r2
 = "0123456789abcdef"; *ptr2 != 0;Ötr2++) {

19 
±m_«me
[9] = *
±r2
;

24 i‡((
fdm
 = 
	`›í
(
±m_«me
, 
oÊag
)) < 0) {

25 i‡(
î∫o
 =
ENOENT
)

30 (
fdm
);

33 
î∫o
 = 
EAGAIN
;

35 
	}
}

38 #i‚de‡
_HAS_PTSNAME


40 
	$±¢ame
(
fdm
)

42 
±s_«me
[16];

43 *
±m_«me
;

45 
±m_«me
 = 
	`ây«me
(
fdm
);

46 i‡(
±m_«me
 =
NULL
)

47 (
NULL
);

48 
	`°∫˝y
(
±s_«me
, 
±m_«me
, (pts_name));

49 
±s_«me
[(pts_name) - 1] = '\0';

50 i‡(
	`°∫cmp
(
±s_«me
, "/dev/pty/", 9) == 0)

51 
±s_«me
[9] = 's';

53 
±s_«me
[5] = 't';

54 (
±s_«me
);

55 
	}
}

58 #i‚de‡
_HAS_GRANTPT


60 
	$gø¡±
(
fdm
)

62 
group
 *
gΩå
;

63 
gid
;

64 *
±s_«me
;

66 
±s_«me
 = 
	`±¢ame
(
fdm
);

67 i‡((
gΩå
 = 
	`gëg∫am
("ây")Ë!
NULL
)

68 
gid
 = 
gΩå
->
gr_gid
;

70 
gid
 = -1;

75 i‡(
	`chown
(
±s_«me
, 
	`gëuid
(), 
gid
) < 0)

77 (
	`chmod
(
±s_«me
, 
S_IRUSR
 | 
S_IWUSR
 | 
S_IWGRP
));

78 
	}
}

81 #i‚de‡
_HAS_UNLOCKPT


83 
	$u∆ock±
(
fdm
)

86 
	}
}

90 
	$±ym_›í
(*
±s_«me
, 
±s_«mesz
)

92 *
±r
;

93 
fdm
;

100 
	`°∫˝y
(
±s_«me
, "/dev/±yXX", 
±s_«mesz
);

101 
±s_«me
[
±s_«mesz
 - 1] = '\0';

102 i‡((
fdm
 = 
	`posix_›í±
(
O_RDWR
)) < 0)

104 i‡(
	`gø¡±
(
fdm
) < 0) {

105 
	`˛o£
(
fdm
);

108 i‡(
	`u∆ock±
(
fdm
) < 0) {

109 
	`˛o£
(
fdm
);

112 i‡((
±r
 = 
	`±¢ame
(
fdm
)Ë=
NULL
) {

113 
	`˛o£
(
fdm
);

121 
	`°∫˝y
(
±s_«me
, 
±r
, 
±s_«mesz
);

122 
±s_«me
[
±s_«mesz
 - 1] = '\0';

123 (
fdm
);

124 
	}
}

127 
	$±ys_›í
(*
±s_«me
)

129 
fds
;

131 i‡((
fds
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

133 (
fds
);

134 
	}
}

	@lib/bufargs.c

1 
	~"≠ue.h
"

3 
	#MAXARGC
 50

	)

4 
	#WHITE
 " \t\n"

	)

14 
buf_¨gs
(*
buf
, (*
›tfunc
)(, **))

16 *
±r
, *
¨gv
[
MAXARGC
];

17 
¨gc
;

19 i‡(
	`°πok
(
buf
, 
WHITE
Ë=
NULL
)

21 
¨gv
[
¨gc
 = 0] = 
buf
;

22 (
±r
 = 
	`°πok
(
NULL
, 
WHITE
)) != NULL) {

23 i‡(++
¨gc
 >
MAXARGC
-1)

25 
¨gv
[
¨gc
] = 
±r
;

27 
¨gv
[++
¨gc
] = 
NULL
;

34 ((*
›tfunc
)(
¨gc
, 
¨gv
));

35 
	}
}

	@lib/cliconn.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#CLI_PATH
 "/v¨/tmp/"

	)

7 
	#CLI_PERM
 
S_IRWXU


	)

14 
	$˛i_c⁄n
(c⁄° *
«me
)

16 
fd
, 
Àn
, 
îr
, 
rvÆ
;

17 
sockaddr_un
 
un
;

20 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

24 
	`mem£t
(&
un
, 0, (un));

25 
un
.
sun_Ámûy
 = 
AF_UNIX
;

26 
	`•rötf
(
un
.
sun_∑th
, "%s%05d", 
CLI_PATH
, 
	`gëpid
());

27 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
un
.sun_path);

29 
	`u∆ök
(
un
.
sun_∑th
);

30 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

31 
rvÆ
 = -2;

32 
îrout
;

34 i‡(
	`chmod
(
un
.
sun_∑th
, 
CLI_PERM
) < 0) {

35 
rvÆ
 = -3;

36 
îrout
;

40 
	`mem£t
(&
un
, 0, (un));

41 
un
.
sun_Ámûy
 = 
AF_UNIX
;

42 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

43 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

44 i‡(
	`c⁄√˘
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

45 
rvÆ
 = -4;

46 
îrout
;

48 (
fd
);

50 
îrout
:

51 
îr
 = 
î∫o
;

52 
	`˛o£
(
fd
);

53 
î∫o
 = 
îr
;

54 (
rvÆ
);

55 
	}
}

	@lib/clrfl.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$˛r_Ê
(
fd
, 
Êags
)

8 
vÆ
;

10 i‡((
vÆ
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0)) < 0)

11 
	`îr_sys
("fcntl F_GETFLÉrror");

13 
vÆ
 &~
Êags
;

15 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
vÆ
) < 0)

16 
	`îr_sys
("fcntl F_SETFLÉrror");

17 
	}
}

	@lib/daemonize.c

1 
	~"≠ue.h
"

2 
	~<sy¶og.h
>

3 
	~<f˙é.h
>

4 #ifde‡
BSD


5 
	~<sys/time.h
>

7 
	~<sys/ªsour˚.h
>

10 
	$d´m⁄ize
(c⁄° *
cmd
)

12 
i
, 
fd0
, 
fd1
, 
fd2
;

13 
pid_t
 
pid
;

14 
æimô
 
æ
;

15 
siga˘i⁄
 
ß
;

20 
	`umask
(0);

25 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) < 0)

26 
	`îr_quô
("%s: c™'àgë fûêlimô", 
cmd
);

31 i‡((
pid
 = 
	`f‹k
()) < 0)

32 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

33 i‡(
pid
 != 0)

34 
	`exô
(0);

35 
	`£tsid
();

40 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

41 
	`sigem±y£t
(&
ß
.
ß_mask
);

42 
ß
.
ß_Êags
 = 0;

43 i‡(
	`siga˘i⁄
(
SIGHUP
, &
ß
, 
NULL
) < 0)

44 
	`îr_quô
("%s: can't ignore SIGHUP");

45 i‡((
pid
 = 
	`f‹k
()) < 0)

46 
	`îr_quô
("%s: c™'àf‹k", 
cmd
);

47 i‡(
pid
 != 0)

48 
	`exô
(0);

54 i‡(
	`chdú
("/") < 0)

55 
	`îr_quô
("%s: can't change directoryÅo /");

60 i‡(
æ
.
æim_max
 =
RLIM_INFINITY
)

61 
æ
.
æim_max
 = 1024;

62 
i
 = 0; i < 
æ
.
æim_max
; i++)

63 
	`˛o£
(
i
);

68 
fd0
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
);

69 
fd1
 = 
	`dup
(0);

70 
fd2
 = 
	`dup
(0);

75 
	`›ílog
(
cmd
, 
LOG_CONS
, 
LOG_DAEMON
);

76 i‡(
fd0
 !0 || 
fd1
 !1 || 
fd2
 != 2) {

77 
	`sy¶og
(
LOG_ERR
, "unexpected file descriptors %d %d %d",

78 
fd0
, 
fd1
, 
fd2
);

79 
	`exô
(1);

81 
	}
}

	@lib/error.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<°d¨g.h
>

5 
îr_doô
(, , c⁄° *, 
va_li°
);

12 
	$îr_ªt
(c⁄° *
fmt
, ...)

14 
va_li°
 
≠
;

16 
	`va_°¨t
(
≠
, 
fmt
);

17 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

18 
	`va_íd
(
≠
);

19 
	}
}

26 
	$îr_sys
(c⁄° *
fmt
, ...)

28 
va_li°
 
≠
;

30 
	`va_°¨t
(
≠
, 
fmt
);

31 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

32 
	`va_íd
(
≠
);

33 
	`exô
(1);

34 
	}
}

42 
	$îr_exô
(
îr‹
, c⁄° *
fmt
, ...)

44 
va_li°
 
≠
;

46 
	`va_°¨t
(
≠
, 
fmt
);

47 
	`îr_doô
(1, 
îr‹
, 
fmt
, 
≠
);

48 
	`va_íd
(
≠
);

49 
	`exô
(1);

50 
	}
}

57 
	$îr_dump
(c⁄° *
fmt
, ...)

59 
va_li°
 
≠
;

61 
	`va_°¨t
(
≠
, 
fmt
);

62 
	`îr_doô
(1, 
î∫o
, 
fmt
, 
≠
);

63 
	`va_íd
(
≠
);

64 
	`ab‹t
();

65 
	`exô
(1);

66 
	}
}

73 
	$îr_msg
(c⁄° *
fmt
, ...)

75 
va_li°
 
≠
;

77 
	`va_°¨t
(
≠
, 
fmt
);

78 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

79 
	`va_íd
(
≠
);

80 
	}
}

87 
	$îr_quô
(c⁄° *
fmt
, ...)

89 
va_li°
 
≠
;

91 
	`va_°¨t
(
≠
, 
fmt
);

92 
	`îr_doô
(0, 0, 
fmt
, 
≠
);

93 
	`va_íd
(
≠
);

94 
	`exô
(1);

95 
	}
}

102 
	$îr_doô
(
î∫oÊag
, 
îr‹
, c⁄° *
fmt
, 
va_li°
 
≠
)

104 
buf
[
MAXLINE
];

106 
	`v¢¥ötf
(
buf
, 
MAXLINE
, 
fmt
, 
≠
);

107 i‡(
î∫oÊag
)

108 
	`¢¥ötf
(
buf
+
	`°æí
(buf), 
MAXLINE
-strlen(buf), ": %s",

109 
	`°ªº‹
(
îr‹
));

110 
	`°rˇt
(
buf
, "\n");

111 
	`fÊush
(
°dout
);

112 
	`Âuts
(
buf
, 
°dîr
);

113 
	`fÊush
(
NULL
);

114 
	}
}

	@lib/errorlog.c

5 
	~"≠ue.h
"

6 
	~<î∫o.h
>

7 
	~<°d¨g.h
>

8 
	~<sy¶og.h
>

10 
log_doô
(, , c⁄° *, 
va_li°
 
≠
);

16 
log_to_°dîr
;

22 
	$log_›í
(c⁄° *
idít
, 
›ti⁄
, 
Ácûôy
)

24 i‡(
log_to_°dîr
 == 0)

25 
	`›ílog
(
idít
, 
›ti⁄
, 
Ácûôy
);

26 
	}
}

33 
	$log_ªt
(c⁄° *
fmt
, ...)

35 
va_li°
 
≠
;

37 
	`va_°¨t
(
≠
, 
fmt
);

38 
	`log_doô
(1, 
LOG_ERR
, 
fmt
, 
≠
);

39 
	`va_íd
(
≠
);

40 
	}
}

47 
	$log_sys
(c⁄° *
fmt
, ...)

49 
va_li°
 
≠
;

51 
	`va_°¨t
(
≠
, 
fmt
);

52 
	`log_doô
(1, 
LOG_ERR
, 
fmt
, 
≠
);

53 
	`va_íd
(
≠
);

54 
	`exô
(2);

55 
	}
}

62 
	$log_msg
(c⁄° *
fmt
, ...)

64 
va_li°
 
≠
;

66 
	`va_°¨t
(
≠
, 
fmt
);

67 
	`log_doô
(0, 
LOG_ERR
, 
fmt
, 
≠
);

68 
	`va_íd
(
≠
);

69 
	}
}

76 
	$log_quô
(c⁄° *
fmt
, ...)

78 
va_li°
 
≠
;

80 
	`va_°¨t
(
≠
, 
fmt
);

81 
	`log_doô
(0, 
LOG_ERR
, 
fmt
, 
≠
);

82 
	`va_íd
(
≠
);

83 
	`exô
(2);

84 
	}
}

91 
	$log_doô
(
î∫oÊag
, 
¥i‹ôy
, c⁄° *
fmt
, 
va_li°
 
≠
)

93 
î∫o_ßve
;

94 
buf
[
MAXLINE
];

96 
î∫o_ßve
 = 
î∫o
;

97 
	`v¢¥ötf
(
buf
, 
MAXLINE
, 
fmt
, 
≠
);

98 i‡(
î∫oÊag
)

99 
	`¢¥ötf
(
buf
+
	`°æí
(buf), 
MAXLINE
-strlen(buf), ": %s",

100 
	`°ªº‹
(
î∫o_ßve
));

101 
	`°rˇt
(
buf
, "\n");

102 i‡(
log_to_°dîr
) {

103 
	`fÊush
(
°dout
);

104 
	`Âuts
(
buf
, 
°dîr
);

105 
	`fÊush
(
°dîr
);

107 
	`sy¶og
(
¥i‹ôy
, 
buf
);

109 
	}
}

	@lib/linux_ptyopen.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 #i‚de‡
_HAS_OPENPT


6 
	$posix_›í±
(
oÊag
)

8 
fdm
;

10 
fdm
 = 
	`›í
("/dev/±mx", 
oÊag
);

11 (
fdm
);

12 
	}
}

15 #i‚de‡
_HAS_PTSNAME


17 
	$±¢ame
(
fdm
)

19 
smö‹
;

20 
±s_«me
[16];

22 i‡(
	`io˘l
(
fdm
, 
TIOCGPTN
, &
smö‹
) < 0)

23 (
NULL
);

24 
	`¢¥ötf
(
±s_«me
, ’ts_«me), "/dev/±s/%d", 
smö‹
);

25 (
±s_«me
);

26 
	}
}

29 #i‚de‡
_HAS_GRANTPT


31 
	$gø¡±
(
fdm
)

33 *
±s_«me
;

35 
±s_«me
 = 
	`±¢ame
(
fdm
);

36 (
	`chmod
(
±s_«me
, 
S_IRUSR
 | 
S_IWUSR
 | 
S_IWGRP
));

37 
	}
}

40 #i‚de‡
_HAS_UNLOCKPT


42 
	$u∆ock±
(
fdm
)

44 
lock
 = 0;

46 (
	`io˘l
(
fdm
, 
TIOCSPTLCK
, &
lock
));

47 
	}
}

51 
	$±ym_›í
(*
±s_«me
, 
±s_«mesz
)

53 *
±r
;

54 
fdm
;

61 
	`°∫˝y
(
±s_«me
, "/dev/±mx", 
±s_«mesz
);

62 
±s_«me
[
±s_«mesz
 - 1] = '\0';

64 
fdm
 = 
	`posix_›í±
(
O_RDWR
);

65 i‡(
fdm
 < 0)

67 i‡(
	`gø¡±
(
fdm
) < 0) {

68 
	`˛o£
(
fdm
);

71 i‡(
	`u∆ock±
(
fdm
) < 0) {

72 
	`˛o£
(
fdm
);

75 i‡((
±r
 = 
	`±¢ame
(
fdm
)Ë=
NULL
) {

76 
	`˛o£
(
fdm
);

84 
	`°∫˝y
(
±s_«me
, 
±r
, 
±s_«mesz
);

85 
±s_«me
[
±s_«mesz
 - 1] = '\0';

86 (
fdm
);

87 
	}
}

90 
	$±ys_›í
(*
±s_«me
)

92 
fds
;

94 i‡((
fds
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

96 (
fds
);

97 
	}
}

	@lib/lockreg.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$lock_ªg
(
fd
, 
cmd
, 
ty≥
, 
off_t
 
off£t
, 
whí˚
, off_à
Àn
)

7 
Êock
 
lock
;

9 
lock
.
l_ty≥
 = 
ty≥
;

10 
lock
.
l_°¨t
 = 
off£t
;

11 
lock
.
l_whí˚
 = 
whí˚
;

12 
lock
.
l_Àn
 = 
Àn
;

14 (
	`f˙é
(
fd
, 
cmd
, &
lock
));

15 
	}
}

	@lib/locktest.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

4 
pid_t


5 
	$lock_ã°
(
fd
, 
ty≥
, 
off_t
 
off£t
, 
whí˚
, off_à
Àn
)

7 
Êock
 
lock
;

9 
lock
.
l_ty≥
 = 
ty≥
;

10 
lock
.
l_°¨t
 = 
off£t
;

11 
lock
.
l_whí˚
 = 
whí˚
;

12 
lock
.
l_Àn
 = 
Àn
;

14 i‡(
	`f˙é
(
fd
, 
F_GETLK
, &
lock
) < 0)

15 
	`îr_sys
("fcntlÉrror");

17 i‡(
lock
.
l_ty≥
 =
F_UNLCK
)

19 (
lock
.
l_pid
);

20 
	}
}

	@lib/nspipe.c

3 
	~"≠ue.h
"

4 
	~<sys/sockë.h
>

5 
	~<sys/un.h
>

8 
	$ns_pùe
(c⁄° *
«me
, 
fd
[2])

10 
Àn
;

11 
sockaddr_un
 
unix_addr
;

13 i‡(
	`s_pùe
(
fd
) < 0)

16 
	`u∆ök
(
«me
);

18 
	`mem£t
(&
unix_addr
, 0, (unix_addr));

19 
unix_addr
.
sun_Ámûy
 = 
AF_UNIX
;

20 
	`°r˝y
(
unix_addr
.
sun_∑th
, 
«me
);

21 
Àn
 = 
	`°æí
(
unix_addr
.
sun_∑th
Ë+ (unix_addr.
sun_Ámûy
);

23 (
	`böd
(
fd
[0], (
sockaddr
 *Ë&
unix_addr
, 
Àn
));

25 
	}
}

	@lib/openmax.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

5 #ifdef 
OPEN_MAX


6 
	g›ímax
 = 
OPEN_MAX
;

8 
	g›ímax
 = 0;

15 
	#OPEN_MAX_GUESS
 256

	)

18 
	$›í_max
()

20 i‡(
›ímax
 == 0) {

21 
î∫o
 = 0;

22 i‡((
›ímax
 = 
	`sysc⁄f
(
_SC_OPEN_MAX
)) < 0) {

23 i‡(
î∫o
 == 0)

24 
›ímax
 = 
OPEN_MAX_GUESS
;

26 
	`îr_sys
("sysconfÉrror for _SC_OPEN_MAX");

30 (
›ímax
);

31 
	}
}

	@lib/pathalloc.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

5 #ifdef 
PATH_MAX


6 
	g∑thmax
 = 
PATH_MAX
;

8 
	g∑thmax
 = 0;

11 
	#SUSV3
 200112L

	)

13 
	gposix_vîsi⁄
 = 0;

16 
	#PATH_MAX_GUESS
 1024

	)

19 
	$∑th_Æloc
(*
sizï
)

21 *
±r
;

22 
size
;

24 i‡(
posix_vîsi⁄
 == 0)

25 
posix_vîsi⁄
 = 
	`sysc⁄f
(
_SC_VERSION
);

27 i‡(
∑thmax
 == 0) {

28 
î∫o
 = 0;

29 i‡((
∑thmax
 = 
	`∑thc⁄f
("/", 
_PC_PATH_MAX
)) < 0) {

30 i‡(
î∫o
 == 0)

31 
∑thmax
 = 
PATH_MAX_GUESS
;

33 
	`îr_sys
("pathconfÉrror for _PC_PATH_MAX");

35 
∑thmax
++;

38 i‡(
posix_vîsi⁄
 < 
SUSV3
)

39 
size
 = 
∑thmax
 + 1;

41 
size
 = 
∑thmax
;

43 i‡((
±r
 = 
	`mÆloc
(
size
)Ë=
NULL
)

44 
	`îr_sys
("mallocÉrror forÖathname");

46 i‡(
sizï
 !
NULL
)

47 *
sizï
 = 
size
;

48 (
±r
);

49 
	}
}

	@lib/popen.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<sys/waô.h
>

9 
pid_t
 *
	gchûdpid
 = 
NULL
;

14 
	gmaxfd
;

16 
FILE
 *

17 
	$p›í
(c⁄° *
cmd°rög
, c⁄° *
ty≥
)

19 
i
;

20 
pfd
[2];

21 
pid_t
 
pid
;

22 
FILE
 *
Â
;

25 i‡((
ty≥
[0] != 'r' &&Åype[0] != 'w') ||Åype[1] != 0) {

26 
î∫o
 = 
EINVAL
;

27 (
NULL
);

30 i‡(
chûdpid
 =
NULL
) {

32 
maxfd
 = 
	`›í_max
();

33 i‡((
chûdpid
 = 
	`ˇŒoc
(
maxfd
, (
pid_t
))Ë=
NULL
)

34 (
NULL
);

37 i‡(
	`pùe
(
pfd
) < 0)

38 (
NULL
);

40 i‡((
pid
 = 
	`f‹k
()) < 0) {

41 (
NULL
);

42 } i‡(
pid
 == 0) {

43 i‡(*
ty≥
 == 'r') {

44 
	`˛o£
(
pfd
[0]);

45 i‡(
pfd
[1] !
STDOUT_FILENO
) {

46 
	`dup2
(
pfd
[1], 
STDOUT_FILENO
);

47 
	`˛o£
(
pfd
[1]);

50 
	`˛o£
(
pfd
[1]);

51 i‡(
pfd
[0] !
STDIN_FILENO
) {

52 
	`dup2
(
pfd
[0], 
STDIN_FILENO
);

53 
	`˛o£
(
pfd
[0]);

58 
i
 = 0; i < 
maxfd
; i++)

59 i‡(
chûdpid
[
i
] > 0)

60 
	`˛o£
(
i
);

62 
	`exe˛
("/bö/sh", "sh", "-c", 
cmd°rög
, (*)0);

63 
	`_exô
(127);

67 i‡(*
ty≥
 == 'r') {

68 
	`˛o£
(
pfd
[1]);

69 i‡((
Â
 = 
	`fd›í
(
pfd
[0], 
ty≥
)Ë=
NULL
)

70 (
NULL
);

72 
	`˛o£
(
pfd
[0]);

73 i‡((
Â
 = 
	`fd›í
(
pfd
[1], 
ty≥
)Ë=
NULL
)

74 (
NULL
);

77 
chûdpid
[
	`fûío
(
Â
)] = 
pid
;

78 (
Â
);

79 
	}
}

82 
	$p˛o£
(
FILE
 *
Â
)

84 
fd
, 
°©
;

85 
pid_t
 
pid
;

87 i‡(
chûdpid
 =
NULL
) {

88 
î∫o
 = 
EINVAL
;

92 
fd
 = 
	`fûío
(
Â
);

93 i‡((
pid
 = 
chûdpid
[
fd
]) == 0) {

94 
î∫o
 = 
EINVAL
;

98 
chûdpid
[
fd
] = 0;

99 i‡(
	`f˛o£
(
Â
Ë=
EOF
)

102 
	`waôpid
(
pid
, &
°©
, 0) < 0)

103 i‡(
î∫o
 !
EINTR
)

106 (
°©
);

107 
	}
}

	@lib/prexit.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$¥_exô
(
°©us
)

7 i‡(
	`WIFEXITED
(
°©us
))

8 
	`¥ötf
("normalÅermination,Éxit status = %d\n",

9 
	`WEXITSTATUS
(
°©us
));

10 i‡(
	`WIFSIGNALED
(
°©us
))

11 
	`¥ötf
("abnormalÅermination, signalÇumber = %d%s\n",

12 
	`WTERMSIG
(
°©us
),

13 #ifdef 
WCOREDUMP


14 
	`WCOREDUMP
(
°©us
) ? " (core file generated)" : "");

18 i‡(
	`WIFSTOPPED
(
°©us
))

19 
	`¥ötf
("child stopped, signalÇumber = %d\n",

20 
	`WSTOPSIG
(
°©us
));

21 
	}
}

	@lib/prmask.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

5 
	$¥_mask
(c⁄° *
°r
)

7 
sig£t_t
 
sig£t
;

8 
î∫o_ßve
;

10 
î∫o_ßve
 = 
î∫o
;

11 i‡(
	`sig¥ocmask
(0, 
NULL
, &
sig£t
) < 0)

12 
	`îr_sys
("sigprocmaskÉrror");

14 
	`¥ötf
("%s", 
°r
);

15 i‡(
	`sigismembî
(&
sig£t
, 
SIGINT
)Ë
	`¥ötf
("SIGINT ");

16 i‡(
	`sigismembî
(&
sig£t
, 
SIGQUIT
)Ë
	`¥ötf
("SIGQUIT ");

17 i‡(
	`sigismembî
(&
sig£t
, 
SIGUSR1
)Ë
	`¥ötf
("SIGUSR1 ");

18 i‡(
	`sigismembî
(&
sig£t
, 
SIGALRM
)Ë
	`¥ötf
("SIGALRM ");

22 
	`¥ötf
("\n");

23 
î∫o
 = 
î∫o_ßve
;

24 
	}
}

	@lib/ptyfork.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 #i‚def 
TIOCGWINSZ


4 
	~<sys/io˘l.h
>

7 
pid_t


8 
	$±y_f‹k
(*
±rfdm
, *
¶ave_«me
, 
¶ave_«mesz
,

9 c⁄° 
ãrmios
 *
¶ave_ãrmios
,

10 c⁄° 
wösize
 *
¶ave_wösize
)

12 
fdm
, 
fds
;

13 
pid_t
 
pid
;

14 
±s_«me
[20];

16 i‡((
fdm
 = 
	`±ym_›í
(
±s_«me
, (pts_name))) < 0)

17 
	`îr_sys
("ˇn'à›í ma°îÖty: %s,Éº‹ %d", 
±s_«me
, 
fdm
);

19 i‡(
¶ave_«me
 !
NULL
) {

24 
	`°∫˝y
(
¶ave_«me
, 
±s_«me
, 
¶ave_«mesz
);

25 
¶ave_«me
[
¶ave_«mesz
 - 1] = '\0';

28 i‡((
pid
 = 
	`f‹k
()) < 0) {

30 } i‡(
pid
 == 0) {

31 i‡(
	`£tsid
() < 0)

32 
	`îr_sys
("setsidÉrror");

37 i‡((
fds
 = 
	`±ys_›í
(
±s_«me
)) < 0)

38 
	`îr_sys
("can't open slaveÖty");

39 
	`˛o£
(
fdm
);

41 #if 
	`deföed
(
TIOCSCTTY
)

45 i‡(
	`io˘l
(
fds
, 
TIOCSCTTY
, (*)0) < 0)

46 
	`îr_sys
("TIOCSCTTYÉrror");

51 i‡(
¶ave_ãrmios
 !
NULL
) {

52 i‡(
	`tc£èâr
(
fds
, 
TCSANOW
, 
¶ave_ãrmios
) < 0)

53 
	`îr_sys
("tcsetattrÉrror on slaveÖty");

55 i‡(
¶ave_wösize
 !
NULL
) {

56 i‡(
	`io˘l
(
fds
, 
TIOCSWINSZ
, 
¶ave_wösize
) < 0)

57 
	`îr_sys
("TIOCSWINSZÉrror on slaveÖty");

63 i‡(
	`dup2
(
fds
, 
STDIN_FILENO
) != STDIN_FILENO)

64 
	`îr_sys
("dup2ÉrrorÅo stdin");

65 i‡(
	`dup2
(
fds
, 
STDOUT_FILENO
) != STDOUT_FILENO)

66 
	`îr_sys
("dup2ÉrrorÅo stdout");

67 i‡(
	`dup2
(
fds
, 
STDERR_FILENO
) != STDERR_FILENO)

68 
	`îr_sys
("dup2ÉrrorÅo stderr");

69 i‡(
fds
 !
STDIN_FILENO
 && fd†!
STDOUT_FILENO
 &&

70 
fds
 !
STDERR_FILENO
)

71 
	`˛o£
(
fds
);

74 *
±rfdm
 = 
fdm
;

75 (
pid
);

77 
	}
}

	@lib/readn.c

1 
	~"≠ue.h
"

3 
ssize_t


4 
	$ªadn
(
fd
, *
±r
, 
size_t
 
n
)

6 
size_t
 
∆e·
;

7 
ssize_t
 
ƒód
;

9 
∆e·
 = 
n
;

10 
∆e·
 > 0) {

11 i‡((
ƒód
 = 
	`ªad
(
fd
, 
±r
, 
∆e·
)) < 0) {

12 i‡(
∆e·
 =
n
)

16 } i‡(
ƒód
 == 0) {

19 
∆e·
 -
ƒód
;

20 
±r
 +
ƒód
;

22 (
n
 - 
∆e·
);

23 
	}
}

	@lib/recvfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

9 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

11 
cmsghdr
 *
	gcm±r
 = 
NULL
;

19 
ªcv_fd
(
fd
, 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

21 
√wfd
, 
ƒ
, 
°©us
;

22 *
±r
;

23 
buf
[
MAXLINE
];

24 
iovec
 
iov
[1];

25 
msghdr
 
msg
;

27 
°©us
 = -1;

29 
iov
[0].
iov_ba£
 = 
buf
;

30 
iov
[0].
iov_Àn
 = (
buf
);

31 
msg
.
msg_iov
 = 
iov
;

32 
msg
.
msg_iovÀn
 = 1;

33 
msg
.
msg_«me
 = 
NULL
;

34 
msg
.
msg_«mñí
 = 0;

35 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

37 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

38 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

39 i‡((
ƒ
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0) {

40 
	`îr_sys
("recvmsgÉrror");

41 } i‡(
ƒ
 == 0) {

42 
	`îr_ªt
("connection closed by server");

51 
±r
 = 
buf
;Öå < &buf[
ƒ
]; ) {

52 i‡(*
±r
++ == 0) {

53 i‡(
±r
 !&
buf
[
ƒ
-1])

54 
	`îr_dump
("message formatÉrror");

55 
°©us
 = *
±r
 & 0xFF;

56 i‡(
°©us
 == 0) {

57 i‡(
msg
.
msg_c⁄åﬁÀn
 !
CONTROLLEN
)

58 
	`îr_dump
("status = 0 butÇo fd");

59 
√wfd
 = *(*)
	`CMSG_DATA
(
cm±r
);

61 
√wfd
 = -
°©us
;

63 
ƒ
 -= 2;

66 i‡(
ƒ
 > 0 && (*
u£rfunc
)(
STDERR_FILENO
, 
buf
,Çr) !=Çr)

68 i‡(
°©us
 >= 0)

69 (
√wfd
);

71 
	}
}

	@lib/semaph.c

30 
	~"≠ue.h
"

31 
	~<sys/ùc.h
>

32 
	~<sys/£m.h
>

33 
	~<î∫o.h
>

35 
£m_›
(, );

36 
£m_¸óã
(
key_t
, );

37 
£m_›í
(
key_t
);

38 
£m_rm
();

39 
£m_˛o£
();

40 
£m_waô
();

41 
£m_sig«l
();

43 
	#BIGCOUNT
 10000

	)

49 
£mbuf
 
	g›_lock
[2] = {

51 2, 1, 
SEM_UNDO


56 
£mbuf
 
	g›_íd¸óã
[2] = {

57 1, -1, 
SEM_UNDO
,

60 2, -1, 
SEM_UNDO


63 
£mbuf
 
	g›_›í
[1] = {

64 1, -1, 
SEM_UNDO


67 
£mbuf
 
	g›_˛o£
[3] = {

69 2, 1, 
SEM_UNDO
,

70 1, 1, 
SEM_UNDO


73 
£mbuf
 
	g›_u∆ock
[1] = {

74 2, -1, 
SEM_UNDO


77 
£mbuf
 
	g›_›
[1] = {

78 0, 99, 
SEM_UNDO


90 
	$£m_¸óã
(
key_t
 
key
, 
öôvÆ
)

92 
id
, 
£mvÆ
;

93 
	u£mun
 {

94 
vÆ
;

95 
£mid_ds
 *
buf
;

96 
ush‹t
 *
¨øy
;

97 } 
£m˘l_¨g
;

99 i‡(
key
 =
IPC_PRIVATE
)

102 i‡(
key
 =(
key_t
) -1)

105 
agaö
:

106 i‡((
id
 = 
	`£mgë
(
key
, 3, 0666 | 
IPC_CREAT
)) < 0)

124 i‡(
	`£m›
(
id
, &
›_lock
[0], 2) < 0) {

125 i‡(
î∫o
 =
EINVAL
)

126 
agaö
;

127 
	`îr_sys
("can'tÜock");

135 i‡((
£mvÆ
 = 
	`£m˘l
(
id
, 1, 
GETVAL
, 0)) < 0)

136 
	`îr_sys
("can't GETVAL");

138 i‡(
£mvÆ
 == 0) {

146 
£m˘l_¨g
.
vÆ
 = 
öôvÆ
;

147 i‡(
	`£m˘l
(
id
, 0, 
SETVAL
, 
£m˘l_¨g
) < 0)

148 
	`îr_sys
("can SETVAL[0]");

150 
£m˘l_¨g
.
vÆ
 = 
BIGCOUNT
;

151 i‡(
	`£m˘l
(
id
, 1, 
SETVAL
, 
£m˘l_¨g
) < 0)

152 
	`îr_sys
("can SETVAL[1]");

159 i‡(
	`£m›
(
id
, &
›_íd¸óã
[0], 2) < 0)

160 
	`îr_sys
("can'tÉnd create");

162 (
id
);

163 
	}
}

175 
	$£m_›í
(
key_t
 
key
)

177 
id
;

179 i‡(
key
 =
IPC_PRIVATE
)

182 i‡(
key
 =(
key_t
) -1)

185 i‡((
id
 = 
	`£mgë
(
key
, 3, 0)) < 0)

193 i‡(
	`£m›
(
id
, &
›_›í
[0], 1) < 0)

194 
	`îr_sys
("can't open");

196 (
id
);

197 
	}
}

208 
	$£m_rm
(
id
)

210 i‡(
	`£m˘l
(
id
, 0, 
IPC_RMID
, 0) < 0)

211 
	`îr_sys
("can't IPC_RMID");

212 
	}
}

223 
	$£m_˛o£
(
id
)

225 
£mvÆ
;

232 i‡(
	`£m›
(
id
, &
›_˛o£
[0], 3) < 0)

233 
	`îr_sys
("can't semop");

243 i‡((
£mvÆ
 = 
	`£m˘l
(
id
, 1, 
GETVAL
, 0)) < 0)

244 
	`îr_sys
("can't GETVAL");

246 i‡(
£mvÆ
 > 
BIGCOUNT
)

247 
	`îr_dump
("sem[1] > BIGCOUNT");

248 i‡(
£mvÆ
 =
BIGCOUNT
)

249 
	`£m_rm
(
id
);

251 i‡(
	`£m›
(
id
, &
›_u∆ock
[0], 1) < 0)

252 
	`îr_sys
("can't unlock");

253 
	}
}

262 
	$£m_waô
(
id
)

264 
	`£m_›
(
id
, -1);

265 
	}
}

273 
	$£m_sig«l
(
id
)

275 
	`£m_›
(
id
, 1);

276 
	}
}

284 
	$£m_›
(
id
, 
vÆue
)

286 i‡((
›_›
[0].
£m_›
 = 
vÆue
) == 0)

287 
	`îr_sys
("can't have value == 0");

289 i‡(
	`£m›
(
id
, &
›_›
[0], 1) < 0)

290 
	`îr_sys
("sem_opÉrror");

291 
	}
}

	@lib/senderr.c

1 
	~"≠ue.h
"

9 
	$£nd_îr
(
fd
, 
îrcode
, c⁄° *
msg
)

11 
n
;

13 i‡((
n
 = 
	`°æí
(
msg
)) > 0)

14 i‡(
	`wrôí
(
fd
, 
msg
, 
n
) !=Ç)

17 i‡(
îrcode
 >= 0)

18 
îrcode
 = -1;

20 i‡(
	`£nd_fd
(
fd
, 
îrcode
) < 0)

24 
	}
}

	@lib/sendfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

8 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

10 
cmsghdr
 *
	gcm±r
 = 
NULL
;

17 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

19 
iovec
 
iov
[1];

20 
msghdr
 
msg
;

21 
buf
[2];

23 
iov
[0].
iov_ba£
 = 
buf
;

24 
iov
[0].
iov_Àn
 = 2;

25 
msg
.
msg_iov
 = 
iov
;

26 
msg
.
msg_iovÀn
 = 1;

27 
msg
.
msg_«me
 = 
NULL
;

28 
msg
.
msg_«mñí
 = 0;

29 i‡(
fd_to_£nd
 < 0) {

30 
msg
.
msg_c⁄åﬁ
 = 
NULL
;

31 
msg
.
msg_c⁄åﬁÀn
 = 0;

32 
buf
[1] = -
fd_to_£nd
;

33 i‡(
buf
[1] == 0)

34 
buf
[1] = 1;

36 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

38 
cm±r
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

39 
cm±r
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

40 
cm±r
->
cmsg_Àn
 = 
CONTROLLEN
;

41 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

42 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

43 *(*)
	`CMSG_DATA
(
cm±r
Ë
fd_to_£nd
;

44 
buf
[1] = 0;

46 
buf
[0] = 0;

47 i‡(
	`£ndmsg
(
fd
, &
msg
, 0) != 2)

50 
	}
}

	@lib/servaccept.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<time.h
>

5 
	~<î∫o.h
>

7 
	#STALE
 30

	)

16 
	$£rv_ac˚±
(
li°ífd
, 
uid_t
 *
uid±r
)

18 
˛ifd
, 
Àn
, 
îr
, 
rvÆ
;

19 
time_t
 
°Æëime
;

20 
sockaddr_un
 
un
;

21 
°©
 
°©buf
;

23 
Àn
 = (
un
);

24 i‡((
˛ifd
 = 
	`ac˚±
(
li°ífd
, (
sockaddr
 *)&
un
, &
Àn
)) < 0)

28 
Àn
 -
	`off£tof
(
sockaddr_un
, 
sun_∑th
);

29 
un
.
sun_∑th
[
Àn
] = 0;

31 i‡(
	`°©
(
un
.
sun_∑th
, &
°©buf
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

35 #ifdef 
S_ISSOCK


36 i‡(
	`S_ISSOCK
(
°©buf
.
°_mode
) == 0) {

37 
rvÆ
 = -3;

38 
îrout
;

41 i‡((
°©buf
.
°_mode
 & (
S_IRWXG
 | 
S_IRWXO
)) ||

42 (
°©buf
.
°_mode
 & 
S_IRWXU
) != S_IRWXU) {

43 
rvÆ
 = -4;

44 
îrout
;

47 
°Æëime
 = 
	`time
(
NULL
Ë- 
STALE
;

48 i‡(
°©buf
.
°_©ime
 < 
°Æëime
 ||

49 
°©buf
.
°_˘ime
 < 
°Æëime
 ||

50 
°©buf
.
°_mtime
 < 
°Æëime
) {

51 
rvÆ
 = -5;

52 
îrout
;

55 i‡(
uid±r
 !
NULL
)

56 *
uid±r
 = 
°©buf
.
°_uid
;

57 
	`u∆ök
(
un
.
sun_∑th
);

58 (
˛ifd
);

60 
îrout
:

61 
îr
 = 
î∫o
;

62 
	`˛o£
(
˛ifd
);

63 
î∫o
 = 
îr
;

64 (
rvÆ
);

65 
	}
}

	@lib/servlisten.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#QLEN
 10

	)

13 
	$£rv_li°í
(c⁄° *
«me
)

15 
fd
, 
Àn
, 
îr
, 
rvÆ
;

16 
sockaddr_un
 
un
;

19 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

22 
	`u∆ök
(
«me
);

25 
	`mem£t
(&
un
, 0, (un));

26 
un
.
sun_Ámûy
 = 
AF_UNIX
;

27 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

28 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

31 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

36 i‡(
	`li°í
(
fd
, 
QLEN
) < 0) {

37 
rvÆ
 = -3;

38 
îrout
;

40 (
fd
);

42 
îrout
:

43 
îr
 = 
î∫o
;

44 
	`˛o£
(
fd
);

45 
î∫o
 = 
îr
;

46 (
rvÆ
);

47 
	}
}

	@lib/setfl.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$£t_Ê
(
fd
, 
Êags
)

7 
vÆ
;

9 i‡((
vÆ
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0)) < 0)

10 
	`îr_sys
("fcntl F_GETFLÉrror");

12 
vÆ
 |
Êags
;

14 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
vÆ
) < 0)

15 
	`îr_sys
("fcntl F_SETFLÉrror");

16 
	}
}

	@lib/signal.c

1 
	~"≠ue.h
"

4 
Sigfunc
 *

5 
	$sig«l
(
signo
, 
Sigfunc
 *
func
)

7 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

9 
a˘
.
ß_h™dÀr
 = 
func
;

10 
	`sigem±y£t
(&
a˘
.
ß_mask
);

11 
a˘
.
ß_Êags
 = 0;

12 i‡(
signo
 =
SIGALRM
) {

13 #ifdef 
SA_INTERRUPT


14 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

17 #ifdef 
SA_RESTART


18 
a˘
.
ß_Êags
 |
SA_RESTART
;

21 i‡(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

22 (
SIG_ERR
);

23 (
ﬂ˘
.
ß_h™dÀr
);

24 
	}
}

	@lib/signalintr.c

1 
	~"≠ue.h
"

3 
Sigfunc
 *

4 
	$sig«l_öå
(
signo
, 
Sigfunc
 *
func
)

6 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

8 
a˘
.
ß_h™dÀr
 = 
func
;

9 
	`sigem±y£t
(&
a˘
.
ß_mask
);

10 
a˘
.
ß_Êags
 = 0;

11 #ifdef 
SA_INTERRUPT


12 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

14 i‡(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

15 (
SIG_ERR
);

16 (
ﬂ˘
.
ß_h™dÀr
);

17 
	}
}

	@lib/sleep.c

1 
	~"≠ue.h
"

4 
	$sig_Ærm
(
signo
)

7 
	}
}

10 
	$¶ìp
(
n£cs
)

12 
siga˘i⁄
 
√wa˘
, 
ﬁda˘
;

13 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
su•mask
;

14 
un¶ït
;

17 
√wa˘
.
ß_h™dÀr
 = 
sig_Ærm
;

18 
	`sigem±y£t
(&
√wa˘
.
ß_mask
);

19 
√wa˘
.
ß_Êags
 = 0;

20 
	`siga˘i⁄
(
SIGALRM
, &
√wa˘
, &
ﬁda˘
);

23 
	`sigem±y£t
(&
√wmask
);

24 
	`sigadd£t
(&
√wmask
, 
SIGALRM
);

25 
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
);

27 
	`Æ¨m
(
n£cs
);

29 
su•mask
 = 
ﬁdmask
;

30 
	`sigdñ£t
(&
su•mask
, 
SIGALRM
);

31 
	`sigsu•íd
(&
su•mask
);

35 
un¶ït
 = 
	`Æ¨m
(0);

36 
	`siga˘i⁄
(
SIGALRM
, &
ﬁda˘
, 
NULL
);

39 
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
);

40 (
un¶ït
);

41 
	}
}

	@lib/sleepus.c

1 
	~"≠ue.h
"

2 
	~<sys/time.h
>

5 
	$¶ìp_us
(
nu£cs
)

7 
timevÆ
 
tvÆ
;

9 
tvÆ
.
tv_£c
 = 
nu£cs
 / 1000000;

10 
tvÆ
.
tv_u£c
 = 
nu£cs
 % 1000000;

11 
	`£À˘
(0, 
NULL
, NULL, NULL, &
tvÆ
);

12 
	}
}

	@lib/spipe.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

9 
	$s_pùe
(
fd
[2])

11 (
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
fd
));

12 
	}
}

	@lib/tellwait.c

1 
	~"≠ue.h
"

3 vﬁ©ûê
sig_©omic_t
 
	gsigÊag
;

4 
sig£t_t
 
	g√wmask
, 
	gﬁdmask
, 
	gzîomask
;

7 
	$sig_u§
(
signo
)

9 
sigÊag
 = 1;

10 
	}
}

13 
	$TELL_WAIT
()

15 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

16 
	`îr_sys
("signal(SIGUSR1)Érror");

17 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

18 
	`îr_sys
("signal(SIGUSR2)Érror");

19 
	`sigem±y£t
(&
zîomask
);

20 
	`sigem±y£t
(&
√wmask
);

21 
	`sigadd£t
(&
√wmask
, 
SIGUSR1
);

22 
	`sigadd£t
(&
√wmask
, 
SIGUSR2
);

27 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

28 
	`îr_sys
("SIG_BLOCKÉrror");

29 
	}
}

32 
	$TELL_PARENT
(
pid_t
 
pid
)

34 
	`kûl
(
pid
, 
SIGUSR2
);

35 
	}
}

38 
	$WAIT_PARENT
()

40 
sigÊag
 == 0)

41 
	`sigsu•íd
(&
zîomask
);

42 
sigÊag
 = 0;

47 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

48 
	`îr_sys
("SIG_SETMASKÉrror");

49 
	}
}

52 
	$TELL_CHILD
(
pid_t
 
pid
)

54 
	`kûl
(
pid
, 
SIGUSR1
);

55 
	}
}

58 
	$WAIT_CHILD
()

60 
sigÊag
 == 0)

61 
	`sigsu•íd
(&
zîomask
);

62 
sigÊag
 = 0;

67 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

68 
	`îr_sys
("SIG_SETMASKÉrror");

69 
	}
}

	@lib/ttymodes.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 
	~<î∫o.h
>

5 
ãrmios
 
	gßve_ãrmios
;

6 
	gâyßvefd
 = -1;

7 íum { 
	mRESET
, 
	mRAW
, 
	mCBREAK
 } 
	gây°©e
 = 
RESET
;

10 
	$ây_cbªak
(
fd
)

12 
îr
;

13 
ãrmios
 
buf
;

15 i‡(
ây°©e
 !
RESET
) {

16 
î∫o
 = 
EINVAL
;

19 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0)

21 
ßve_ãrmios
 = 
buf
;

26 
buf
.
c_lÊag
 &~(
ECHO
 | 
ICANON
);

31 
buf
.
c_cc
[
VMIN
] = 1;

32 
buf
.
c_cc
[
VTIME
] = 0;

33 i‡(
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
buf
) < 0)

40 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0) {

41 
îr
 = 
î∫o
;

42 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

43 
î∫o
 = 
îr
;

46 i‡((
buf
.
c_lÊag
 & (
ECHO
 | 
ICANON
)Ë|| buf.
c_cc
[
VMIN
] != 1 ||

47 
buf
.
c_cc
[
VTIME
] != 0) {

52 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

53 
î∫o
 = 
EINVAL
;

57 
ây°©e
 = 
CBREAK
;

58 
âyßvefd
 = 
fd
;

60 
	}
}

63 
	$ây_øw
(
fd
)

65 
îr
;

66 
ãrmios
 
buf
;

68 i‡(
ây°©e
 !
RESET
) {

69 
î∫o
 = 
EINVAL
;

72 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0)

74 
ßve_ãrmios
 = 
buf
;

80 
buf
.
c_lÊag
 &~(
ECHO
 | 
ICANON
 | 
IEXTEN
 | 
ISIG
);

87 
buf
.
c_iÊag
 &~(
BRKINT
 | 
ICRNL
 | 
INPCK
 | 
ISTRIP
 | 
IXON
);

92 
buf
.
c_cÊag
 &~(
CSIZE
 | 
PARENB
);

97 
buf
.
c_cÊag
 |
CS8
;

102 
buf
.
c_oÊag
 &~(
OPOST
);

107 
buf
.
c_cc
[
VMIN
] = 1;

108 
buf
.
c_cc
[
VTIME
] = 0;

109 i‡(
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
buf
) < 0)

116 i‡(
	`tcgë©å
(
fd
, &
buf
) < 0) {

117 
îr
 = 
î∫o
;

118 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

119 
î∫o
 = 
îr
;

122 i‡((
buf
.
c_lÊag
 & (
ECHO
 | 
ICANON
 | 
IEXTEN
 | 
ISIG
)) ||

123 (
buf
.
c_iÊag
 & (
BRKINT
 | 
ICRNL
 | 
INPCK
 | 
ISTRIP
 | 
IXON
)) ||

124 (
buf
.
c_cÊag
 & (
CSIZE
 | 
PARENB
 | 
CS8
)) != CS8 ||

125 (
buf
.
c_oÊag
 & 
OPOST
Ë|| buf.
c_cc
[
VMIN
] != 1 ||

126 
buf
.
c_cc
[
VTIME
] != 0) {

131 
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
);

132 
î∫o
 = 
EINVAL
;

136 
ây°©e
 = 
RAW
;

137 
âyßvefd
 = 
fd
;

139 
	}
}

142 
	$ây_ª£t
(
fd
)

144 i‡(
ây°©e
 =
RESET
)

146 i‡(
	`tc£èâr
(
fd
, 
TCSAFLUSH
, &
ßve_ãrmios
) < 0)

148 
ây°©e
 = 
RESET
;

150 
	}
}

153 
	$ây_©exô
()

155 i‡(
âyßvefd
 >= 0)

156 
	`ây_ª£t
(
âyßvefd
);

157 
	}
}

159 
ãrmios
 *

160 
	$ây_ãrmios
()

162 (&
ßve_ãrmios
);

163 
	}
}

	@lib/writen.c

1 
	~"≠ue.h
"

3 
ssize_t


4 
	$wrôí
(
fd
, c⁄° *
±r
, 
size_t
 
n
)

6 
size_t
 
∆e·
;

7 
ssize_t
 
nwrôãn
;

9 
∆e·
 = 
n
;

10 
∆e·
 > 0) {

11 i‡((
nwrôãn
 = 
	`wrôe
(
fd
, 
±r
, 
∆e·
)) < 0) {

12 i‡(
∆e·
 =
n
)

16 } i‡(
nwrôãn
 == 0) {

19 
∆e·
 -
nwrôãn
;

20 
±r
 +
nwrôãn
;

22 (
n
 - 
∆e·
);

23 
	}
}

	@lock/deadlock.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$lockabyã
(c⁄° *
«me
, 
fd
, 
off_t
 
off£t
)

7 i‡(
	`wrôew_lock
(
fd
, 
off£t
, 
SEEK_SET
, 1) < 0)

8 
	`îr_sys
("%s: wrôew_lockÉº‹", 
«me
);

9 
	`¥ötf
("%s: gŸÅhêlock, byã %ld\n", 
«me
, 
off£t
);

10 
	}
}

13 
	$maö
()

15 
fd
;

16 
pid_t
 
pid
;

21 i‡((
fd
 = 
	`¸ót
("ãm∂ock", 
FILE_MODE
)) < 0)

22 
	`îr_sys
("creatÉrror");

23 i‡(
	`wrôe
(
fd
, "ab", 2) != 2)

24 
	`îr_sys
("writeÉrror");

26 
	`TELL_WAIT
();

27 i‡((
pid
 = 
	`f‹k
()) < 0) {

28 
	`îr_sys
("forkÉrror");

29 } i‡(
pid
 == 0) {

30 
	`lockabyã
("chûd", 
fd
, 0);

31 
	`TELL_PARENT
(
	`gëµid
());

32 
	`WAIT_PARENT
();

33 
	`lockabyã
("chûd", 
fd
, 1);

35 
	`lockabyã
("∑ª¡", 
fd
, 1);

36 
	`TELL_CHILD
(
pid
);

37 
	`WAIT_CHILD
();

38 
	`lockabyã
("∑ª¡", 
fd
, 0);

40 
	`exô
(0);

41 
	}
}

	@lock/mandatory.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<sys/waô.h
>

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
fd
;

10 
pid_t
 
pid
;

11 
buf
[5];

12 
°©
 
°©buf
;

14 i‡(
¨gc
 != 2) {

15 
	`Ârötf
(
°dîr
, "ußge: %†fûíame\n", 
¨gv
[0]);

16 
	`exô
(1);

18 i‡((
fd
 = 
	`›í
(
¨gv
[1], 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 
FILE_MODE
)) < 0)

19 
	`îr_sys
("openÉrror");

20 i‡(
	`wrôe
(
fd
, "abcdef", 6) != 6)

21 
	`îr_sys
("writeÉrror");

24 i‡(
	`f°©
(
fd
, &
°©buf
) < 0)

25 
	`îr_sys
("fstatÉrror");

26 i‡(
	`fchmod
(
fd
, (
°©buf
.
°_mode
 & ~
S_IXGRP
Ë| 
S_ISGID
) < 0)

27 
	`îr_sys
("fchmodÉrror");

29 
	`TELL_WAIT
();

31 i‡((
pid
 = 
	`f‹k
()) < 0) {

32 
	`îr_sys
("forkÉrror");

33 } i‡(
pid
 > 0) {

35 i‡(
	`wrôe_lock
(
fd
, 0, 
SEEK_SET
, 0) < 0)

36 
	`îr_sys
("write_lockÉrror");

38 
	`TELL_CHILD
(
pid
);

40 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

41 
	`îr_sys
("waitpidÉrror");

43 
	`WAIT_PARENT
();

45 
	`£t_Ê
(
fd
, 
O_NONBLOCK
);

48 i‡(
	`ªad_lock
(
fd
, 0, 
SEEK_SET
, 0) != -1)

49 
	`îr_sys
("child:Ñead_lock succeeded");

50 
	`¥ötf
("read_lock ofálready-lockedÑegionÑeturns %d\n",

51 
î∫o
);

54 i‡(
	`l£ek
(
fd
, 0, 
SEEK_SET
) == -1)

55 
	`îr_sys
("lseekÉrror");

56 i‡(
	`ªad
(
fd
, 
buf
, 2) < 0)

57 
	`îr_ªt
("read failed (mandatoryÜocking works)");

59 
	`¥ötf
("read OK (no mandatoryÜocking), buf = %2.2s\n",

60 
buf
);

62 
	`exô
(0);

63 
	}
}

	@mycat/fgetsfputs.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
buf
[
MAXLINE
];

8 
	`fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
)

9 i‡(
	`Âuts
(
buf
, 
°dout
Ë=
EOF
)

10 
	`îr_sys
("outputÉrror");

12 i‡(
	`„º‹
(
°dö
))

13 
	`îr_sys
("inputÉrror");

15 
	`exô
(0);

16 
	}
}

	@mycat/getcputc.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
c
;

8 (
c
 = 
	`gëc
(
°dö
)Ë!
EOF
)

9 i‡(
	`putc
(
c
, 
°dout
Ë=
EOF
)

10 
	`îr_sys
("outputÉrror");

12 i‡(
	`„º‹
(
°dö
))

13 
	`îr_sys
("inputÉrror");

15 
	`exô
(0);

16 
	}
}

	@mycat/mycat.c

1 
	~"≠ue.h
"

3 
	#BUFFSIZE
 4096

	)

6 
	$maö
()

8 
n
;

9 
buf
[
BUFFSIZE
];

11 (
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
BUFFSIZE
)) > 0)

12 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
) !=Ç)

13 
	`îr_sys
("writeÉrror");

15 i‡(
n
 < 0)

16 
	`îr_sys
("readÉrror");

18 
	`exô
(0);

19 
	}
}

	@open.fe/main.c

1 
	~"›í.h
"

2 
	~<f˙é.h
>

4 
	#BUFFSIZE
 8192

	)

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
n
, 
fd
;

10 
buf
[
BUFFSIZE
], 
löe
[
MAXLINE
];

13 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

14 i‡(
löe
[
	`°æí
(line) - 1] == '\n')

15 
löe
[
	`°æí
(line) - 1] = 0;

18 i‡((
fd
 = 
	`cs›í
(
löe
, 
O_RDONLY
)) < 0)

22 (
n
 = 
	`ªad
(
fd
, 
buf
, 
BUFFSIZE
)) > 0)

23 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
) !=Ç)

24 
	`îr_sys
("writeÉrror");

25 i‡(
n
 < 0)

26 
	`îr_sys
("readÉrror");

27 
	`˛o£
(
fd
);

30 
	`exô
(0);

31 
	}
}

	@open.fe/open.c

1 
	~"›í.h
"

2 
	~<sys/uio.h
>

9 
	$cs›í
(*
«me
, 
oÊag
)

11 
pid_t
 
pid
;

12 
Àn
;

13 
buf
[10];

14 
iovec
 
iov
[3];

15 
fd
[2] = { -1, -1 };

17 i‡(
fd
[0] < 0) {

18 i‡(
	`s_pùe
(
fd
) < 0)

19 
	`îr_sys
("s_pipeÉrror");

20 i‡((
pid
 = 
	`f‹k
()) < 0) {

21 
	`îr_sys
("forkÉrror");

22 } i‡(
pid
 == 0) {

23 
	`˛o£
(
fd
[0]);

24 i‡(
fd
[1] !
STDIN_FILENO
 &&

25 
	`dup2
(
fd
[1], 
STDIN_FILENO
) != STDIN_FILENO)

26 
	`îr_sys
("dup2ÉrrorÅo stdin");

27 i‡(
fd
[1] !
STDOUT_FILENO
 &&

28 
	`dup2
(
fd
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

29 
	`îr_sys
("dup2ÉrrorÅo stdout");

30 i‡(
	`exe˛
("./opend", "opend", (*)0) < 0)

31 
	`îr_sys
("execlÉrror");

33 
	`˛o£
(
fd
[1]);

35 
	`•rötf
(
buf
, " %d", 
oÊag
);

36 
iov
[0].
iov_ba£
 = 
CL_OPEN
 " ";

37 
iov
[0].
iov_Àn
 = 
	`°æí
(
CL_OPEN
) + 1;

38 
iov
[1].
iov_ba£
 = 
«me
;

39 
iov
[1].
iov_Àn
 = 
	`°æí
(
«me
);

40 
iov
[2].
iov_ba£
 = 
buf
;

41 
iov
[2].
iov_Àn
 = 
	`°æí
(
buf
) + 1;

42 
Àn
 = 
iov
[0].
iov_Àn
 + iov[1].iov_len + iov[2].iov_len;

43 i‡(
	`wrôev
(
fd
[0], &
iov
[0], 3Ë!
Àn
)

44 
	`îr_sys
("writevÉrror");

47 (
	`ªcv_fd
(
fd
[0], 
wrôe
));

48 
	}
}

	@open.fe/open.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CL_OPEN
 "›í"

	)

6 
cs›í
(*, );

	@open/open.c

1 
	~"›í.h
"

2 
	~<sys/uio.h
>

9 
	$cs›í
(*
«me
, 
oÊag
)

11 
Àn
;

12 
buf
[10];

13 
iovec
 
iov
[3];

14 
csfd
 = -1;

16 i‡(
csfd
 < 0) {

17 i‡((
csfd
 = 
	`˛i_c⁄n
(
CS_OPEN
)) < 0)

18 
	`îr_sys
("cli_connÉrror");

21 
	`•rötf
(
buf
, " %d", 
oÊag
);

22 
iov
[0].
iov_ba£
 = 
CL_OPEN
 " ";

23 
iov
[0].
iov_Àn
 = 
	`°æí
(
CL_OPEN
) + 1;

24 
iov
[1].
iov_ba£
 = 
«me
;

25 
iov
[1].
iov_Àn
 = 
	`°æí
(
«me
);

26 
iov
[2].
iov_ba£
 = 
buf
;

27 
iov
[2].
iov_Àn
 = 
	`°æí
(
buf
) + 1;

28 
Àn
 = 
iov
[0].
iov_Àn
 + iov[1].iov_len + iov[2].iov_len;

29 i‡(
	`wrôev
(
csfd
, &
iov
[0], 3Ë!
Àn
)

30 
	`îr_sys
("writevÉrror");

33 (
	`ªcv_fd
(
csfd
, 
wrôe
));

34 
	}
}

	@open/open.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CL_OPEN
 "›í"

	)

5 
	#CS_OPEN
 "/home/ßr/›íd"

	)

7 
cs›í
(*, );

	@opend.fe/cliargs.c

1 
	~"›íd.h
"

9 
	$˛i_¨gs
(
¨gc
, **
¨gv
)

11 i‡(
¨gc
 !3 || 
	`°rcmp
(
¨gv
[0], 
CL_OPEN
) != 0) {

12 
	`°r˝y
(
îrmsg
, "usage: <pathname> <oflag>\n");

15 
∑th«me
 = 
¨gv
[1];

16 
oÊag
 = 
	`©oi
(
¨gv
[2]);

18 
	}
}

	@opend.fe/main.c

1 
	~"›íd.h
"

3 
	gîrmsg
[
MAXLINE
];

4 
	goÊag
;

5 *
	g∑th«me
;

8 
	$maö
()

10 
ƒód
;

11 
buf
[
MAXLINE
];

14 i‡((
ƒód
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
MAXLINE
)) < 0)

15 
	`îr_sys
("readÉrror on streamÖipe");

16 i‡(
ƒód
 == 0)

18 
	`ªque°
(
buf
, 
ƒód
, 
STDOUT_FILENO
);

20 
	`exô
(0);

21 
	}
}

	@opend.fe/opend.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CL_OPEN
 "›í"

	)

6 
îrmsg
[];

7 
oÊag
;

8 *
∑th«me
;

10 
˛i_¨gs
(, **);

11 
ªque°
(*, , );

	@opend.fe/request.c

1 
	~"›íd.h
"

2 
	~<f˙é.h
>

5 
	$ªque°
(*
buf
, 
ƒód
, 
fd
)

7 
√wfd
;

9 i‡(
buf
[
ƒód
-1] != 0) {

10 
	`•rötf
(
îrmsg
, "requestÇotÇullÅerminated: %*.*s\n",

11 
ƒód
,Çªad, 
buf
);

12 
	`£nd_îr
(
fd
, -1, 
îrmsg
);

15 i‡(
	`buf_¨gs
(
buf
, 
˛i_¨gs
) < 0) {

16 
	`£nd_îr
(
fd
, -1, 
îrmsg
);

19 i‡((
√wfd
 = 
	`›í
(
∑th«me
, 
oÊag
)) < 0) {

20 
	`•rötf
(
îrmsg
, "ˇn'à›í %s: %s\n", 
∑th«me
,

21 
	`°ªº‹
(
î∫o
));

22 
	`£nd_îr
(
fd
, -1, 
îrmsg
);

25 i‡(
	`£nd_fd
(
fd
, 
√wfd
) < 0)

26 
	`îr_sys
("send_fdÉrror");

27 
	`˛o£
(
√wfd
);

28 
	}
}

	@opend/client.c

1 
	~"›íd.h
"

3 
	#NALLOC
 10

	)

6 
	$˛õ¡_Æloc
()

8 
i
;

10 i‡(
˛õ¡
 =
NULL
)

11 
˛õ¡
 = 
	`mÆloc
(
NALLOC
 * (
Clõ¡
));

13 
˛õ¡
 = 
	`ªÆloc
(˛õ¡, (
˛õ¡_size
+
NALLOC
)*(
Clõ¡
));

14 i‡(
˛õ¡
 =
NULL
)

15 
	`îr_sys
("can'tálloc for clientárray");

18 
i
 = 
˛õ¡_size
; i < clõ¡_sizê+ 
NALLOC
; i++)

19 
˛õ¡
[
i
].
fd
 = -1;

21 
˛õ¡_size
 +
NALLOC
;

22 
	}
}

28 
	$˛õ¡_add
(
fd
, 
uid_t
 
uid
)

30 
i
;

32 i‡(
˛õ¡
 =
NULL
)

33 
	`˛õ¡_Æloc
();

34 
agaö
:

35 
i
 = 0; i < 
˛õ¡_size
; i++) {

36 i‡(
˛õ¡
[
i
].
fd
 == -1) {

37 
˛õ¡
[
i
].
fd
 = fd;

38 
˛õ¡
[
i
].
uid
 = uid;

39 (
i
);

44 
	`˛õ¡_Æloc
();

45 
agaö
;

46 
	}
}

52 
	$˛õ¡_dñ
(
fd
)

54 
i
;

56 
i
 = 0; i < 
˛õ¡_size
; i++) {

57 i‡(
˛õ¡
[
i
].
fd
 == fd) {

58 
˛õ¡
[
i
].
fd
 = -1;

62 
	`log_quô
("ˇn'àföd clõ¡É¡ry f‹ fd %d", 
fd
);

63 
	}
}

	@opend/loop.poll.c

1 
	~"›íd.h
"

2 
	~<pﬁl.h
>

3 #i‡!
deföed
(
BSD
Ë&& !deföed(
MACOS
)

4 
	~<°r›ts.h
>

8 
	$lo›
()

10 
i
, 
maxi
, 
li°ífd
, 
˛ifd
, 
ƒód
;

11 
buf
[
MAXLINE
];

12 
uid_t
 
uid
;

13 
pﬁlfd
 *pollfd;

15 i‡((
pﬁlfd
 = 
	`mÆloc
(
	`›í_max
(Ë* (pﬁlfd))Ë=
NULL
)

16 
	`îr_sys
("mallocÉrror");

19 i‡((
li°ífd
 = 
	`£rv_li°í
(
CS_OPEN
)) < 0)

20 
	`log_sys
("serv_listenÉrror");

21 
	`˛õ¡_add
(
li°ífd
, 0);

22 
pﬁlfd
[0].
fd
 = 
li°ífd
;

23 
pﬁlfd
[0].
evíts
 = 
POLLIN
;

24 
maxi
 = 0;

27 i‡(
	`pﬁl
(
pﬁlfd
, 
maxi
 + 1, -1) < 0)

28 
	`log_sys
("pollÉrror");

30 i‡(
pﬁlfd
[0].
ªvíts
 & 
POLLIN
) {

32 i‡((
˛ifd
 = 
	`£rv_ac˚±
(
li°ífd
, &
uid
)) < 0)

33 
	`log_sys
("£rv_ac˚±Éº‹: %d", 
˛ifd
);

34 
i
 = 
	`˛õ¡_add
(
˛ifd
, 
uid
);

35 
pﬁlfd
[
i
].
fd
 = 
˛ifd
;

36 
pﬁlfd
[
i
].
evíts
 = 
POLLIN
;

37 i‡(
i
 > 
maxi
)

38 
maxi
 = 
i
;

39 
	`log_msg
("√w c⁄√˘i⁄: uid %d, fd %d", 
uid
, 
˛ifd
);

42 
i
 = 1; i <
maxi
; i++) {

43 i‡((
˛ifd
 = 
˛õ¡
[
i
].
fd
) < 0)

45 i‡(
pﬁlfd
[
i
].
ªvíts
 & 
POLLHUP
) {

46 
hungup
;

47 } i‡(
pﬁlfd
[
i
].
ªvíts
 & 
POLLIN
) {

49 i‡((
ƒód
 = 
	`ªad
(
˛ifd
, 
buf
, 
MAXLINE
)) < 0) {

50 
	`log_sys
("ªadÉº‹ o¿fd %d", 
˛ifd
);

51 } i‡(
ƒód
 == 0) {

52 
hungup
:

53 
	`log_msg
("closed: uid %d, fd %d",

54 
˛õ¡
[
i
].
uid
, 
˛ifd
);

55 
	`˛õ¡_dñ
(
˛ifd
);

56 
pﬁlfd
[
i
].
fd
 = -1;

57 
	`˛o£
(
˛ifd
);

59 
	`ªque°
(
buf
, 
ƒód
, 
˛ifd
, 
˛õ¡
[
i
].
uid
);

64 
	}
}

	@opend/loop.select.c

1 
	~"›íd.h
"

2 
	~<sys/time.h
>

3 
	~<sys/£À˘.h
>

6 
	$lo›
()

8 
i
, 
n
, 
maxfd
, 
maxi
, 
li°ífd
, 
˛ifd
, 
ƒód
;

9 
buf
[
MAXLINE
];

10 
uid_t
 
uid
;

11 
fd_£t
 
r£t
, 
Æl£t
;

13 
	`FD_ZERO
(&
Æl£t
);

16 i‡((
li°ífd
 = 
	`£rv_li°í
(
CS_OPEN
)) < 0)

17 
	`log_sys
("serv_listenÉrror");

18 
	`FD_SET
(
li°ífd
, &
Æl£t
);

19 
maxfd
 = 
li°ífd
;

20 
maxi
 = -1;

23 
r£t
 = 
Æl£t
;

24 i‡((
n
 = 
	`£À˘
(
maxfd
 + 1, &
r£t
, 
NULL
, NULL, NULL)) < 0)

25 
	`log_sys
("selectÉrror");

27 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

29 i‡((
˛ifd
 = 
	`£rv_ac˚±
(
li°ífd
, &
uid
)) < 0)

30 
	`log_sys
("£rv_ac˚±Éº‹: %d", 
˛ifd
);

31 
i
 = 
	`˛õ¡_add
(
˛ifd
, 
uid
);

32 
	`FD_SET
(
˛ifd
, &
Æl£t
);

33 i‡(
˛ifd
 > 
maxfd
)

34 
maxfd
 = 
˛ifd
;

35 i‡(
i
 > 
maxi
)

36 
maxi
 = 
i
;

37 
	`log_msg
("√w c⁄√˘i⁄: uid %d, fd %d", 
uid
, 
˛ifd
);

41 
i
 = 0; i <
maxi
; i++) {

42 i‡((
˛ifd
 = 
˛õ¡
[
i
].
fd
) < 0)

44 i‡(
	`FD_ISSET
(
˛ifd
, &
r£t
)) {

46 i‡((
ƒód
 = 
	`ªad
(
˛ifd
, 
buf
, 
MAXLINE
)) < 0) {

47 
	`log_sys
("ªadÉº‹ o¿fd %d", 
˛ifd
);

48 } i‡(
ƒód
 == 0) {

49 
	`log_msg
("closed: uid %d, fd %d",

50 
˛õ¡
[
i
].
uid
, 
˛ifd
);

51 
	`˛õ¡_dñ
(
˛ifd
);

52 
	`FD_CLR
(
˛ifd
, &
Æl£t
);

53 
	`˛o£
(
˛ifd
);

55 
	`ªque°
(
buf
, 
ƒód
, 
˛ifd
, 
˛õ¡
[
i
].
uid
);

60 
	}
}

	@opend/main.c

1 
	~"›íd.h
"

2 
	~<sy¶og.h
>

4 
	gdebug
, 
	goÊag
, 
	g˛õ¡_size
, 
	glog_to_°dîr
;

5 
	gîrmsg
[
MAXLINE
];

6 *
	g∑th«me
;

7 
Clõ¡
 *
	g˛õ¡
 = 
NULL
;

10 
	$maö
(
¨gc
, *
¨gv
[])

12 
c
;

14 
	`log_›í
("›í.£rv", 
LOG_PID
, 
LOG_USER
);

16 
›ãº
 = 0;

17 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "d")Ë!
EOF
) {

18 
c
) {

20 
debug
 = 
log_to_°dîr
 = 1;

24 
	`îr_quô
("uƒecognized o±i⁄: -%c", 
›t›t
);

28 i‡(
debug
 == 0)

29 
	`d´m⁄ize
("opend");

31 
	`lo›
();

32 
	}
}

	@opend/opend.h

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
	#CS_OPEN
 "/home/ßr/›íd"

	)

5 
	#CL_OPEN
 "›í"

	)

7 
debug
;

8 
îrmsg
[];

9 
oÊag
;

10 *
∑th«me
;

13 
	mfd
;

14 
uid_t
 
	muid
;

15 } 
	tClõ¡
;

17 
Clõ¡
 *
˛õ¡
;

18 
˛õ¡_size
;

20 
˛i_¨gs
(, **);

21 
˛õ¡_add
(, 
uid_t
);

22 
˛õ¡_dñ
();

23 
lo›
();

24 
ªque°
(*, , , 
uid_t
);

	@opend/request.c

1 
	~"›íd.h
"

2 
	~<f˙é.h
>

5 
	$ªque°
(*
buf
, 
ƒód
, 
˛ifd
, 
uid_t
 
uid
)

7 
√wfd
;

9 i‡(
buf
[
ƒód
-1] != 0) {

10 
	`•rötf
(
îrmsg
,

12 
uid
, 
ƒód
,Çªad, 
buf
);

13 
	`£nd_îr
(
˛ifd
, -1, 
îrmsg
);

16 
	`log_msg
("ªque°: %s, from uid %d", 
buf
, 
uid
);

19 i‡(
	`buf_¨gs
(
buf
, 
˛i_¨gs
) < 0) {

20 
	`£nd_îr
(
˛ifd
, -1, 
îrmsg
);

21 
	`log_msg
(
îrmsg
);

25 i‡((
√wfd
 = 
	`›í
(
∑th«me
, 
oÊag
)) < 0) {

26 
	`•rötf
(
îrmsg
, "can't open %s: %s\n",

27 
∑th«me
, 
	`°ªº‹
(
î∫o
));

28 
	`£nd_îr
(
˛ifd
, -1, 
îrmsg
);

29 
	`log_msg
(
îrmsg
);

34 i‡(
	`£nd_fd
(
˛ifd
, 
√wfd
) < 0)

35 
	`log_sys
("send_fdÉrror");

36 
	`log_msg
("£¡ fd %d ovî fd %d f‹ %s", 
√wfd
, 
˛ifd
, 
∑th«me
);

37 
	`˛o£
(
√wfd
);

38 
	}
}

	@proc/echoall.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
i
;

7 **
±r
;

8 **
ívú⁄
;

10 
i
 = 0; i < 
¨gc
; i++)

11 
	`¥ötf
("¨gv[%d]: %s\n", 
i
, 
¨gv
[i]);

13 
±r
 = 
ívú⁄
; *ptr != 0;Ötr++)

14 
	`¥ötf
("%s\n", *
±r
);

16 
	`exô
(0);

17 
	}
}

	@proc/echoarg.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
i
;

8 
i
 = 0; i < 
¨gc
; i++)

9 
	`¥ötf
("¨gv[%d]: %s\n", 
i
, 
¨gv
[i]);

10 
	`exô
(0);

11 
	}
}

	@proc/exec1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 *
	gív_öô
[] = { "USER=unknown", "PATH=/tmp", 
NULL
 };

7 
	$maö
()

9 
pid_t
 
pid
;

11 i‡((
pid
 = 
	`f‹k
()) < 0) {

12 
	`îr_sys
("forkÉrror");

13 } i‡(
pid
 == 0) {

14 i‡(
	`exe˛e
("/home/sar/bin/echoall", "echoall", "myarg1",

15 "MY ARG2", (*)0, 
ív_öô
) < 0)

16 
	`îr_sys
("execleÉrror");

19 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

20 
	`îr_sys
("waitÉrror");

22 i‡((
pid
 = 
	`f‹k
()) < 0) {

23 
	`îr_sys
("forkÉrror");

24 } i‡(
pid
 == 0) {

25 i‡(
	`exe˛p
("echoall", "echoall", "only 1árg", (*)0) < 0)

26 
	`îr_sys
("execlpÉrror");

29 
	`exô
(0);

30 
	}
}

	@proc/exec2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
pid_t
 
pid
;

9 i‡((
pid
 = 
	`f‹k
()) < 0) {

10 
	`îr_sys
("forkÉrror");

11 } i‡(
pid
 == 0) {

12 i‡(
	`exe˛
("/home/sar/bin/testinterp",

14 
	`îr_sys
("execlÉrror");

16 i‡(
	`waôpid
(
pid
, 
NULL
, 0) < 0)

17 
	`îr_sys
("waitpidÉrror");

18 
	`exô
(0);

19 
	}
}

	@proc/fork1.c

1 
	~"≠ue.h
"

3 
	gglob
 = 6;

4 
	gbuf
[] = "a writeÅo stdout\n";

7 
	$maö
()

9 
v¨
;

10 
pid_t
 
pid
;

12 
v¨
 = 88;

13 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, (buf)-1) != (buf)-1)

14 
	`îr_sys
("writeÉrror");

15 
	`¥ötf
("before fork\n");

17 i‡((
pid
 = 
	`f‹k
()) < 0) {

18 
	`îr_sys
("forkÉrror");

19 } i‡(
pid
 == 0) {

20 
glob
++;

21 
v¨
++;

23 
	`¶ìp
(2);

26 
	`¥ötf
("pid = %d, glob = %d, v¨ = %d\n", 
	`gëpid
(), 
glob
, 
v¨
);

27 
	`exô
(0);

28 
	}
}

	@proc/fork2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
pid_t
 
pid
;

9 i‡((
pid
 = 
	`f‹k
()) < 0) {

10 
	`îr_sys
("forkÉrror");

11 } i‡(
pid
 == 0) {

12 i‡((
pid
 = 
	`f‹k
()) < 0)

13 
	`îr_sys
("forkÉrror");

14 i‡(
pid
 > 0)

15 
	`exô
(0);

23 
	`¶ìp
(2);

24 
	`¥ötf
("£c⁄d chûd,Ö¨íàpid = %d\n", 
	`gëµid
());

25 
	`exô
(0);

28 i‡(
	`waôpid
(
pid
, 
NULL
, 0) !=Öid)

29 
	`îr_sys
("waitpidÉrror");

35 
	`exô
(0);

36 
	}
}

	@proc/pracct.c

1 
	~"≠ue.h
"

2 
	~<sys/ac˘.h
>

4 #ifde‡
HAS_SA_STAT


5 
	#FMT
 "%-*.*†É = %6ld, ch¨†%7ld, sèà%3u: %¯%¯%¯%c\n"

	)

7 
	#FMT
 "%-*.*†É = %6ld, ch¨†%7ld, %¯%¯%¯%c\n"

	)

9 #i‚de‡
HAS_ACORE


10 
	#ACORE
 0

	)

12 #i‚de‡
HAS_AXSIG


13 
	#AXSIG
 0

	)

17 
	$com±2ul⁄g
(
comp_t
 
com±ime
)

19 
vÆ
;

20 
exp
;

22 
vÆ
 = 
com±ime
 & 0x1fff;

23 
exp
 = (
com±ime
 >> 13) & 7;

24 
exp
-- > 0)

25 
vÆ
 *= 8;

26 (
vÆ
);

27 
	}
}

29 
	$maö
(
¨gc
, *
¨gv
[])

31 
ac˘
 
acd©a
;

32 
FILE
 *
Â
;

34 i‡(
¨gc
 != 2)

35 
	`îr_quô
("usage:Öracct filename");

36 i‡((
Â
 = 
	`f›í
(
¨gv
[1], "r")Ë=
NULL
)

37 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

38 
	`‰ód
(&
acd©a
, ◊cd©a), 1, 
Â
) == 1) {

39 
	`¥ötf
(
FMT
, ()(
acd©a
.
ac_comm
),

40 ()(
acd©a
.
ac_comm
),ácdata.ac_comm,

41 
	`com±2ul⁄g
(
acd©a
.
ac_ëime
), com±2ul⁄g◊cd©a.
ac_io
),

42 #ifde‡
HAS_SA_STAT


43 (Ë
acd©a
.
ac_°©
,

45 
acd©a
.
ac_Êag
 & 
ACORE
 ? 'D' : ' ',

46 
acd©a
.
ac_Êag
 & 
AXSIG
 ? 'X' : ' ',

47 
acd©a
.
ac_Êag
 & 
AFORK
 ? 'F' : ' ',

48 
acd©a
.
ac_Êag
 & 
ASU
 ? 'S' : ' ');

50 i‡(
	`„º‹
(
Â
))

51 
	`îr_sys
("readÉrror");

52 
	`exô
(0);

53 
	}
}

	@proc/pruids.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("ªÆ uid = %d,Éf„˘ivêuid = %d\n", 
	`gëuid
(), 
	`gëeuid
());

7 
	`exô
(0);

8 
	}
}

	@proc/shell1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
buf
[
MAXLINE
];

8 
pid_t
 
pid
;

9 
°©us
;

11 
	`¥ötf
("%% ");

12 
	`fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

13 i‡(
buf
[
	`°æí
(buf) - 1] == '\n')

14 
buf
[
	`°æí
(buf) - 1] = 0;

16 i‡((
pid
 = 
	`f‹k
()) < 0) {

17 
	`îr_sys
("forkÉrror");

18 } i‡(
pid
 == 0) {

19 
	`exe˛p
(
buf
, buf, (*)0);

20 
	`îr_ªt
("couldn'àexecuã: %s", 
buf
);

21 
	`exô
(127);

25 i‡((
pid
 = 
	`waôpid
’id, &
°©us
, 0)) < 0)

26 
	`îr_sys
("waitpidÉrror");

27 
	`¥ötf
("%% ");

29 
	`exô
(0);

30 
	}
}

	@proc/shell2.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
sig_öt
();

7 
	$maö
()

9 
buf
[
MAXLINE
];

10 
pid_t
 
pid
;

11 
°©us
;

13 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

14 
	`îr_sys
("signalÉrror");

16 
	`¥ötf
("%% ");

17 
	`fgës
(
buf
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

18 i‡(
buf
[
	`°æí
(buf) - 1] == '\n')

19 
buf
[
	`°æí
(buf) - 1] = 0;

21 i‡((
pid
 = 
	`f‹k
()) < 0) {

22 
	`îr_sys
("forkÉrror");

23 } i‡(
pid
 == 0) {

24 
	`exe˛p
(
buf
, buf, (*)0);

25 
	`îr_ªt
("couldn'àexecuã: %s", 
buf
);

26 
	`exô
(127);

30 i‡((
pid
 = 
	`waôpid
’id, &
°©us
, 0)) < 0)

31 
	`îr_sys
("waitpidÉrror");

32 
	`¥ötf
("%% ");

34 
	`exô
(0);

35 
	}
}

38 
	$sig_öt
(
signo
)

40 
	`¥ötf
("interrupt\n%% ");

41 
	}
}

	@proc/system.c

1 
	~<sys/waô.h
>

2 
	~<î∫o.h
>

3 
	~<uni°d.h
>

6 
	$sy°em
(c⁄° *
cmd°rög
)

8 
pid_t
 
pid
;

9 
°©us
;

11 i‡(
cmd°rög
 =
NULL
)

14 i‡((
pid
 = 
	`f‹k
()) < 0) {

15 
°©us
 = -1;

16 } i‡(
pid
 == 0) {

17 
	`exe˛
("/bö/sh", "sh", "-c", 
cmd°rög
, (*)0);

18 
	`_exô
(127);

20 
	`waôpid
(
pid
, &
°©us
, 0) < 0) {

21 i‡(
î∫o
 !
EINTR
) {

22 
°©us
 = -1;

28 (
°©us
);

29 
	}
}

	@proc/systest1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
°©us
;

9 i‡((
°©us
 = 
	`sy°em
("date")) < 0)

10 
	`îr_sys
("system()Érror");

11 
	`¥_exô
(
°©us
);

13 i‡((
°©us
 = 
	`sy°em
("nosuchcommand")) < 0)

14 
	`îr_sys
("system()Érror");

15 
	`¥_exô
(
°©us
);

17 i‡((
°©us
 = 
	`sy°em
("who;Éxit 44")) < 0)

18 
	`îr_sys
("system()Érror");

19 
	`¥_exô
(
°©us
);

21 
	`exô
(0);

22 
	}
}

	@proc/systest2.c

1 
	~"≠ue.h
"

4 
	$sig_öt
(
signo
)

6 
	`¥ötf
("caught SIGINT\n");

7 
	}
}

10 
	$sig_chld
(
signo
)

12 
	`¥ötf
("caught SIGCHLD\n");

13 
	}
}

16 
	$maö
()

18 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

19 
	`îr_sys
("signal(SIGINT)Érror");

20 i‡(
	`sig«l
(
SIGCHLD
, 
sig_chld
Ë=
SIG_ERR
)

21 
	`îr_sys
("signal(SIGCHLD)Érror");

22 i‡(
	`sy°em
("/bin/ed") < 0)

23 
	`îr_sys
("system()Érror");

24 
	`exô
(0);

25 
	}
}

	@proc/systest3.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
°©us
;

8 i‡(
¨gc
 < 2)

9 
	`îr_quô
("command-lineárgumentÑequired");

11 i‡((
°©us
 = 
	`sy°em
(
¨gv
[1])) < 0)

12 
	`îr_sys
("system()Érror");

13 
	`¥_exô
(
°©us
);

15 
	`exô
(0);

16 
	}
}

	@proc/tellwait1.c

1 
	~"≠ue.h
"

3 
ch¨©©ime
(*);

6 
	$maö
()

8 
pid_t
 
pid
;

10 i‡((
pid
 = 
	`f‹k
()) < 0) {

11 
	`îr_sys
("forkÉrror");

12 } i‡(
pid
 == 0) {

13 
	`ch¨©©ime
("output from child\n");

15 
	`ch¨©©ime
("output fromÖarent\n");

17 
	`exô
(0);

18 
	}
}

21 
	$ch¨©©ime
(*
°r
)

23 *
±r
;

24 
c
;

26 
	`£tbuf
(
°dout
, 
NULL
);

27 
±r
 = 
°r
; (
c
 = *ptr++) != 0; )

28 
	`putc
(
c
, 
°dout
);

29 
	}
}

	@proc/tellwait2.c

1 
	~"≠ue.h
"

3 
ch¨©©ime
(*);

6 
	$maö
()

8 
pid_t
 
pid
;

10 
	`TELL_WAIT
();

12 i‡((
pid
 = 
	`f‹k
()) < 0) {

13 
	`îr_sys
("forkÉrror");

14 } i‡(
pid
 == 0) {

15 
	`WAIT_PARENT
();

16 
	`ch¨©©ime
("output from child\n");

18 
	`ch¨©©ime
("output fromÖarent\n");

19 
	`TELL_CHILD
(
pid
);

21 
	`exô
(0);

22 
	}
}

25 
	$ch¨©©ime
(*
°r
)

27 *
±r
;

28 
c
;

30 
	`£tbuf
(
°dout
, 
NULL
);

31 
±r
 = 
°r
; (
c
 = *ptr++) != 0; )

32 
	`putc
(
c
, 
°dout
);

33 
	}
}

	@proc/test1.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
pid_t
 
pid
;

8 i‡((
pid
 = 
	`f‹k
()) < 0)

9 
	`îr_sys
("forkÉrror");

10 i‡(
pid
 != 0) {

11 
	`¶ìp
(2);

12 
	`exô
(2);

16 i‡((
pid
 = 
	`f‹k
()) < 0)

17 
	`îr_sys
("forkÉrror");

18 i‡(
pid
 != 0) {

19 
	`¶ìp
(4);

20 
	`ab‹t
();

24 i‡((
pid
 = 
	`f‹k
()) < 0)

25 
	`îr_sys
("forkÉrror");

26 i‡(
pid
 != 0) {

27 
	`exe˛
("/bö/dd", "dd", "if=/ëc/ãrmˇp", "of=/dev/nuŒ", 
NULL
);

28 
	`exô
(7);

32 i‡((
pid
 = 
	`f‹k
()) < 0)

33 
	`îr_sys
("forkÉrror");

34 i‡(
pid
 != 0) {

35 
	`¶ìp
(8);

36 
	`exô
(0);

40 
	`¶ìp
(6);

41 
	`kûl
(
	`gëpid
(), 
SIGKILL
);

42 
	`exô
(6);

43 
	}
}

	@proc/times1.c

1 
	~"≠ue.h
"

2 
	~<sys/times.h
>

4 
¥_times
(
˛ock_t
, 
tms
 *, tms *);

5 
do_cmd
(*);

8 
	$maö
(
¨gc
, *
¨gv
[])

10 
i
;

12 
	`£tbuf
(
°dout
, 
NULL
);

13 
i
 = 1; i < 
¨gc
; i++)

14 
	`do_cmd
(
¨gv
[
i
]);

15 
	`exô
(0);

16 
	}
}

19 
	$do_cmd
(*
cmd
)

21 
tms
 
tms°¨t
, 
tm£nd
;

22 
˛ock_t
 
°¨t
, 
íd
;

23 
°©us
;

25 
	`¥ötf
("\ncomm™d: %s\n", 
cmd
);

27 i‡((
°¨t
 = 
	`times
(&
tms°¨t
)) == -1)

28 
	`îr_sys
("timesÉrror");

30 i‡((
°©us
 = 
	`sy°em
(
cmd
)) < 0)

31 
	`îr_sys
("system()Érror");

33 i‡((
íd
 = 
	`times
(&
tm£nd
)) == -1)

34 
	`îr_sys
("timesÉrror");

36 
	`¥_times
(
íd
-
°¨t
, &
tms°¨t
, &
tm£nd
);

37 
	`¥_exô
(
°©us
);

38 
	}
}

41 
	$¥_times
(
˛ock_t
 
ªÆ
, 
tms
 *
tms°¨t
, tm†*
tm£nd
)

43 
˛ktck
 = 0;

45 i‡(
˛ktck
 == 0)

46 i‡((
˛ktck
 = 
	`sysc⁄f
(
_SC_CLK_TCK
)) < 0)

47 
	`îr_sys
("sysconfÉrror");

48 
	`¥ötf
("Ñól: %7.2f\n", 
ªÆ
 / (Ë
˛ktck
);

49 
	`¥ötf
(" user: %7.2f\n",

50 (
tm£nd
->
tms_utime
 - 
tms°¨t
->tms_utimeË/ (Ë
˛ktck
);

51 
	`¥ötf
(" sys: %7.2f\n",

52 (
tm£nd
->
tms_°ime
 - 
tms°¨t
->tms_°imeË/ (Ë
˛ktck
);

53 
	`¥ötf
(" child user: %7.2f\n",

54 (
tm£nd
->
tms_cutime
 - 
tms°¨t
->tms_cutimeË/ (Ë
˛ktck
);

55 
	`¥ötf
(" child sys: %7.2f\n",

56 (
tm£nd
->
tms_c°ime
 - 
tms°¨t
->tms_c°imeË/ (Ë
˛ktck
);

57 
	}
}

	@proc/vfork1.c

1 
	~"≠ue.h
"

3 
	gglob
 = 6;

6 
	$maö
()

8 
v¨
;

9 
pid_t
 
pid
;

11 
v¨
 = 88;

12 
	`¥ötf
("before vfork\n");

13 i‡((
pid
 = 
	`vf‹k
()) < 0) {

14 
	`îr_sys
("vforkÉrror");

15 } i‡(
pid
 == 0) {

16 
glob
++;

17 
v¨
++;

18 
	`_exô
(0);

24 
	`¥ötf
("pid = %d, glob = %d, v¨ = %d\n", 
	`gëpid
(), 
glob
, 
v¨
);

25 
	`exô
(0);

26 
	}
}

	@proc/vfork3.c

1 
	~"≠ue.h
"

3 
f1
(), 
f2
();

6 
	$maö
()

8 
	`f1
();

9 
	`f2
();

10 
	`_exô
(0);

11 
	}
}

14 
	$f1
()

16 
pid_t
 
pid
;

18 i‡((
pid
 = 
	`vf‹k
()) < 0)

19 
	`îr_sys
("vforkÉrror");

21 
	}
}

24 
	$f2
()

26 
buf
[1000];

27 
i
;

29 
i
 = 0; i < (
buf
); i++)

30 
buf
[
i
] = 0;

31 
	}
}

	@proc/wait1.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

5 
	$maö
()

7 
pid_t
 
pid
;

8 
°©us
;

10 i‡((
pid
 = 
	`f‹k
()) < 0)

11 
	`îr_sys
("forkÉrror");

12 i‡(
pid
 == 0)

13 
	`exô
(7);

15 i‡(
	`waô
(&
°©us
Ë!
pid
)

16 
	`îr_sys
("waitÉrror");

17 
	`¥_exô
(
°©us
);

19 i‡((
pid
 = 
	`f‹k
()) < 0)

20 
	`îr_sys
("forkÉrror");

21 i‡(
pid
 == 0)

22 
	`ab‹t
();

24 i‡(
	`waô
(&
°©us
Ë!
pid
)

25 
	`îr_sys
("waitÉrror");

26 
	`¥_exô
(
°©us
);

28 i‡((
pid
 = 
	`f‹k
()) < 0)

29 
	`îr_sys
("forkÉrror");

30 i‡(
pid
 == 0)

31 
°©us
 /= 0;

33 i‡(
	`waô
(&
°©us
Ë!
pid
)

34 
	`îr_sys
("waitÉrror");

35 
	`¥_exô
(
°©us
);

37 
	`exô
(0);

38 
	}
}

	@proc/zombie.c

1 
	~"≠ue.h
"

3 #ifde‡
SOLARIS


4 
	#PSCMD
 "p†-®-ÿpid,µid,s,ây,comm"

	)

6 
	#PSCMD
 "p†-ÿpid,µid,°©e,ây,comm™d"

	)

10 
	$maö
()

12 
pid_t
 
pid
;

14 i‡((
pid
 = 
	`f‹k
()) < 0)

15 
	`îr_sys
("forkÉrror");

16 i‡(
pid
 == 0)

17 
	`exô
(0);

20 
	`¶ìp
(4);

21 
	`sy°em
(
PSCMD
);

23 
	`exô
(0);

24 
	}
}

	@pty/driver.c

1 
	~"≠ue.h
"

4 
	$do_drivî
(*
drivî
)

6 
pid_t
 
chûd
;

7 
pùe
[2];

12 i‡(
	`s_pùe
(
pùe
) < 0)

13 
	`îr_sys
("can't create streamÖipe");

15 i‡((
chûd
 = 
	`f‹k
()) < 0) {

16 
	`îr_sys
("forkÉrror");

17 } i‡(
chûd
 == 0) {

18 
	`˛o£
(
pùe
[1]);

21 i‡(
	`dup2
(
pùe
[0], 
STDIN_FILENO
) != STDIN_FILENO)

22 
	`îr_sys
("dup2ÉrrorÅo stdin");

25 i‡(
	`dup2
(
pùe
[0], 
STDOUT_FILENO
) != STDOUT_FILENO)

26 
	`îr_sys
("dup2ÉrrorÅo stdout");

27 i‡(
pùe
[0] !
STDIN_FILENO
 &&Öùe[0] !
STDOUT_FILENO
)

28 
	`˛o£
(
pùe
[0]);

31 
	`exe˛p
(
drivî
, driver, (*)0);

32 
	`îr_sys
("exe˛∞îr‹ f‹: %s", 
drivî
);

35 
	`˛o£
(
pùe
[0]);

36 i‡(
	`dup2
(
pùe
[1], 
STDIN_FILENO
) != STDIN_FILENO)

37 
	`îr_sys
("dup2ÉrrorÅo stdin");

38 i‡(
	`dup2
(
pùe
[1], 
STDOUT_FILENO
) != STDOUT_FILENO)

39 
	`îr_sys
("dup2ÉrrorÅo stdout");

40 i‡(
pùe
[1] !
STDIN_FILENO
 &&Öùe[1] !
STDOUT_FILENO
)

41 
	`˛o£
(
pùe
[1]);

47 
	}
}

	@pty/loop.c

1 
	~"≠ue.h
"

3 
	#BUFFSIZE
 512

	)

5 
sig_ãrm
();

6 vﬁ©ûê
sig_©omic_t
 
	gsigˇught
;

9 
	$lo›
(
±ym
, 
ign‹ìof
)

11 
pid_t
 
chûd
;

12 
ƒód
;

13 
buf
[
BUFFSIZE
];

15 i‡((
chûd
 = 
	`f‹k
()) < 0) {

16 
	`îr_sys
("forkÉrror");

17 } i‡(
chûd
 == 0) {

19 i‡((
ƒód
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
BUFFSIZE
)) < 0)

20 
	`îr_sys
("readÉrror from stdin");

21 i‡(
ƒód
 == 0)

23 i‡(
	`wrôí
(
±ym
, 
buf
, 
ƒód
) !=Çread)

24 
	`îr_sys
("writenÉrrorÅo masterÖty");

31 i‡(
ign‹ìof
 == 0)

32 
	`kûl
(
	`gëµid
(), 
SIGTERM
);

33 
	`exô
(0);

39 i‡(
	`sig«l_öå
(
SIGTERM
, 
sig_ãrm
Ë=
SIG_ERR
)

40 
	`îr_sys
("signal_intrÉrror for SIGTERM");

43 i‡((
ƒód
 = 
	`ªad
(
±ym
, 
buf
, 
BUFFSIZE
)) <= 0)

45 i‡(
	`wrôí
(
STDOUT_FILENO
, 
buf
, 
ƒód
) !=Çread)

46 
	`îr_sys
("writenÉrrorÅo stdout");

54 i‡(
sigˇught
 == 0)

55 
	`kûl
(
chûd
, 
SIGTERM
);

59 
	}
}

66 
	$sig_ãrm
(
signo
)

68 
sigˇught
 = 1;

69 
	}
}

	@pty/main.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 #i‚def 
TIOCGWINSZ


4 
	~<sys/io˘l.h
>

7 #ifde‡
LINUX


8 
	#OPTSTR
 "+d:eöv"

	)

10 
	#OPTSTR
 "d:eöv"

	)

13 
£t_n€cho
();

14 
do_drivî
(*);

15 
lo›
(, );

18 
	$maö
(
¨gc
, *
¨gv
[])

20 
fdm
, 
c
, 
ign‹ìof
, 
öãø˘ive
, 
n€cho
, 
vîbo£
;

21 
pid_t
 
pid
;

22 *
drivî
;

23 
¶ave_«me
[20];

24 
ãrmios
 
‹ig_ãrmios
;

25 
wösize
 
size
;

27 
öãø˘ive
 = 
	`ißây
(
STDIN_FILENO
);

28 
ign‹ìof
 = 0;

29 
n€cho
 = 0;

30 
vîbo£
 = 0;

31 
drivî
 = 
NULL
;

33 
›ãº
 = 0;

34 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
OPTSTR
)Ë!
EOF
) {

35 
c
) {

37 
drivî
 = 
›èrg
;

41 
n€cho
 = 1;

45 
ign‹ìof
 = 1;

49 
öãø˘ive
 = 0;

53 
vîbo£
 = 1;

57 
	`îr_quô
("uƒecognized o±i⁄: -%c", 
›t›t
);

60 i‡(
›töd
 >
¨gc
)

61 
	`îr_quô
("usage:Öty [ -d driver -einv ]Örogram [árg ... ]");

63 i‡(
öãø˘ive
) {

64 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
‹ig_ãrmios
) < 0)

65 
	`îr_sys
("tcgetattrÉrror on stdin");

66 i‡(
	`io˘l
(
STDIN_FILENO
, 
TIOCGWINSZ
, (*Ë&
size
) < 0)

67 
	`îr_sys
("TIOCGWINSZÉrror");

68 
pid
 = 
	`±y_f‹k
(&
fdm
, 
¶ave_«me
, (slave_name),

69 &
‹ig_ãrmios
, &
size
);

71 
pid
 = 
	`±y_f‹k
(&
fdm
, 
¶ave_«me
, (slave_name),

72 
NULL
, NULL);

75 i‡(
pid
 < 0) {

76 
	`îr_sys
("forkÉrror");

77 } i‡(
pid
 == 0) {

78 i‡(
n€cho
)

79 
	`£t_n€cho
(
STDIN_FILENO
);

81 i‡(
	`execvp
(
¨gv
[
›töd
], &argv[optind]) < 0)

82 
	`îr_sys
("ˇn'àexecuã: %s", 
¨gv
[
›töd
]);

85 i‡(
vîbo£
) {

86 
	`Ârötf
(
°dîr
, "¶avê«mê%s\n", 
¶ave_«me
);

87 i‡(
drivî
 !
NULL
)

88 
	`Ârötf
(
°dîr
, "drivî = %s\n", 
drivî
);

91 i‡(
öãø˘ive
 && 
drivî
 =
NULL
) {

92 i‡(
	`ây_øw
(
STDIN_FILENO
) < 0)

93 
	`îr_sys
("tty_rawÉrror");

94 i‡(
	`©exô
(
ây_©exô
) < 0)

95 
	`îr_sys
("atexitÉrror");

98 i‡(
drivî
)

99 
	`do_drivî
(
drivî
);

101 
	`lo›
(
fdm
, 
ign‹ìof
);

103 
	`exô
(0);

104 
	}
}

107 
	$£t_n€cho
(
fd
)

109 
ãrmios
 
°îmios
;

111 i‡(
	`tcgë©å
(
fd
, &
°îmios
) < 0)

112 
	`îr_sys
("tcgetattrÉrror");

114 
°îmios
.
c_lÊag
 &~(
ECHO
 | 
ECHOE
 | 
ECHOK
 | 
ECHONL
);

119 
°îmios
.
c_oÊag
 &~(
ONLCR
);

121 i‡(
	`tc£èâr
(
fd
, 
TCSANOW
, &
°îmios
) < 0)

122 
	`îr_sys
("tcsetattrÉrror");

123 
	}
}

	@sess/orphan3.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

5 
	$sig_hup
(
signo
)

7 
	`¥ötf
("SIGHUPÑe˚ived,Öid = %d\n", 
	`gëpid
());

8 
	}
}

11 
	$¥_ids
(*
«me
)

13 
	`¥ötf
("%s:Öid = %d,Öpid = %d,Ögrp = %d,Åpgrp = %d\n",

14 
«me
, 
	`gëpid
(), 
	`gëµid
(), 
	`gëpgΩ
(), 
	`tcgëpgΩ
(
STDIN_FILENO
));

15 
	`fÊush
(
°dout
);

16 
	}
}

19 
	$maö
()

21 
c
;

22 
pid_t
 
pid
;

24 
	`¥_ids
("parent");

25 i‡((
pid
 = 
	`f‹k
()) < 0) {

26 
	`îr_sys
("forkÉrror");

27 } i‡(
pid
 > 0) {

28 
	`¶ìp
(5);

29 
	`exô
(0);

31 
	`¥_ids
("child");

32 
	`sig«l
(
SIGHUP
, 
sig_hup
);

33 
	`kûl
(
	`gëpid
(), 
SIGTSTP
);

34 
	`¥_ids
("child");

35 i‡(
	`ªad
(
STDIN_FILENO
, &
c
, 1) != 1)

36 
	`¥ötf
("readÉrror from controlling TTY,Érrno = %d\n",

37 
î∫o
);

38 
	`exô
(0);

40 
	}
}

	@signals/abort.c

1 
	~<sig«l.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<uni°d.h
>

7 
	$ab‹t
()

9 
sig£t_t
 
mask
;

10 
siga˘i⁄
 
a˘i⁄
;

15 
	`siga˘i⁄
(
SIGABRT
, 
NULL
, &
a˘i⁄
);

16 i‡(
a˘i⁄
.
ß_h™dÀr
 =
SIG_IGN
) {

17 
a˘i⁄
.
ß_h™dÀr
 = 
SIG_DFL
;

18 
	`siga˘i⁄
(
SIGABRT
, &
a˘i⁄
, 
NULL
);

20 i‡(
a˘i⁄
.
ß_h™dÀr
 =
SIG_DFL
)

21 
	`fÊush
(
NULL
);

26 
	`sigfûl£t
(&
mask
);

27 
	`sigdñ£t
(&
mask
, 
SIGABRT
);

28 
	`sig¥ocmask
(
SIG_SETMASK
, &
mask
, 
NULL
);

29 
	`kûl
(
	`gëpid
(), 
SIGABRT
);

34 
	`fÊush
(
NULL
);

35 
a˘i⁄
.
ß_h™dÀr
 = 
SIG_DFL
;

36 
	`siga˘i⁄
(
SIGABRT
, &
a˘i⁄
, 
NULL
);

37 
	`sig¥ocmask
(
SIG_SETMASK
, &
mask
, 
NULL
);

38 
	`kûl
(
	`gëpid
(), 
SIGABRT
);

39 
	`exô
(1);

40 
	}
}

	@signals/child.c

1 
	~"≠ue.h
"

2 
	~<sys/waô.h
>

4 
sig_˛d
();

7 
	$maö
()

9 
pid_t
 
pid
;

11 i‡(
	`sig«l
(
SIGCLD
, 
sig_˛d
Ë=
SIG_ERR
)

12 
	`≥º‹
("signalÉrror");

13 i‡((
pid
 = 
	`f‹k
()) < 0) {

14 
	`≥º‹
("forkÉrror");

15 } i‡(
pid
 == 0) {

16 
	`¶ìp
(2);

17 
	`_exô
(0);

19 
	`∑u£
();

20 
	`exô
(0);

21 
	}
}

24 
	$sig_˛d
(
signo
)

26 
pid_t
 
pid
;

27 
°©us
;

29 
	`¥ötf
("SIGCLDÑeceived\n");

30 i‡(
	`sig«l
(
SIGCLD
, 
sig_˛d
Ë=
SIG_ERR
)

31 
	`≥º‹
("signalÉrror");

32 i‡((
pid
 = 
	`waô
(&
°©us
)) < 0)

33 
	`≥º‹
("waitÉrror");

34 
	`¥ötf
("pid = %d\n", 
pid
);

35 
	}
}

	@signals/critical.c

1 
	~"≠ue.h
"

3 
sig_quô
();

6 
	$maö
()

8 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
≥ndmask
;

10 i‡(
	`sig«l
(
SIGQUIT
, 
sig_quô
Ë=
SIG_ERR
)

11 
	`îr_sys
("can't catch SIGQUIT");

16 
	`sigem±y£t
(&
√wmask
);

17 
	`sigadd£t
(&
√wmask
, 
SIGQUIT
);

18 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

19 
	`îr_sys
("SIG_BLOCKÉrror");

21 
	`¶ìp
(5);

23 i‡(
	`sig≥ndög
(&
≥ndmask
) < 0)

24 
	`îr_sys
("sigpendingÉrror");

25 i‡(
	`sigismembî
(&
≥ndmask
, 
SIGQUIT
))

26 
	`¥ötf
("\nSIGQUITÖending\n");

31 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

32 
	`îr_sys
("SIG_SETMASKÉrror");

33 
	`¥ötf
("SIGQUIT unblocked\n");

35 
	`¶ìp
(5);

36 
	`exô
(0);

37 
	}
}

40 
	$sig_quô
(
signo
)

42 
	`¥ötf
("caught SIGQUIT\n");

43 i‡(
	`sig«l
(
SIGQUIT
, 
SIG_DFL
Ë=
SIG_ERR
)

44 
	`îr_sys
("can'tÑeset SIGQUIT");

45 
	}
}

	@signals/mask.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

3 
	~<time.h
>

5 
sig_u§1
(), 
sig_Ærm
();

6 
sigjmp_buf
 
	gjmpbuf
;

7 vﬁ©ûê
sig_©omic_t
 
	gˇnjump
;

10 
	$maö
()

12 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§1
Ë=
SIG_ERR
)

13 
	`îr_sys
("signal(SIGUSR1)Érror");

14 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

15 
	`îr_sys
("signal(SIGALRM)Érror");

16 
	`¥_mask
("starting main: ");

18 i‡(
	`sig£tjmp
(
jmpbuf
, 1)) {

19 
	`¥_mask
("ending main: ");

20 
	`exô
(0);

22 
ˇnjump
 = 1;

25 
	`∑u£
();

26 
	}
}

29 
	$sig_u§1
(
signo
)

31 
time_t
 
°¨âime
;

33 i‡(
ˇnjump
 == 0)

36 
	`¥_mask
("starting sig_usr1: ");

37 
	`Æ¨m
(3);

38 
°¨âime
 = 
	`time
(
NULL
);

40 i‡(
	`time
(
NULL
Ë> 
°¨âime
 + 5)

42 
	`¥_mask
("finishing sig_usr1: ");

44 
ˇnjump
 = 0;

45 
	`sigl⁄gjmp
(
jmpbuf
, 1);

46 
	}
}

49 
	$sig_Ærm
(
signo
)

51 
	`¥_mask
("in sig_alrm: ");

52 
	}
}

	@signals/read1.c

1 
	~"≠ue.h
"

3 
sig_Ærm
();

6 
	$maö
()

8 
n
;

9 
löe
[
MAXLINE
];

11 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

12 
	`îr_sys
("signal(SIGALRM)Érror");

14 
	`Æ¨m
(10);

15 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, 
löe
, 
MAXLINE
)) < 0)

16 
	`îr_sys
("readÉrror");

17 
	`Æ¨m
(0);

19 
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
);

20 
	`exô
(0);

21 
	}
}

24 
	$sig_Ærm
(
signo
)

27 
	}
}

	@signals/read2.c

1 
	~"≠ue.h
"

2 
	~<£tjmp.h
>

4 
sig_Ærm
();

5 
jmp_buf
 
	gív_Ærm
;

8 
	$maö
()

10 
n
;

11 
löe
[
MAXLINE
];

13 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

14 
	`îr_sys
("signal(SIGALRM)Érror");

15 i‡(
	`£tjmp
(
ív_Ærm
) != 0)

16 
	`îr_quô
("readÅimeout");

18 
	`Æ¨m
(10);

19 i‡((
n
 = 
	`ªad
(
STDIN_FILENO
, 
löe
, 
MAXLINE
)) < 0)

20 
	`îr_sys
("readÉrror");

21 
	`Æ¨m
(0);

23 
	`wrôe
(
STDOUT_FILENO
, 
löe
, 
n
);

24 
	`exô
(0);

25 
	}
}

28 
	$sig_Ærm
(
signo
)

30 
	`l⁄gjmp
(
ív_Ærm
, 1);

31 
	}
}

	@signals/reenter.c

1 
	~"≠ue.h
"

2 
	~<pwd.h
>

5 
	$my_Æ¨m
(
signo
)

7 
∑sswd
 *
roŸ±r
;

9 
	`¥ötf
("in signal handler\n");

10 i‡((
roŸ±r
 = 
	`gëpw«m
("roŸ")Ë=
NULL
)

11 
	`îr_sys
("getpwnam(root)Érror");

12 
	`Æ¨m
(1);

13 
	}
}

16 
	$maö
()

18 
∑sswd
 *
±r
;

20 
	`sig«l
(
SIGALRM
, 
my_Æ¨m
);

21 
	`Æ¨m
(1);

23 i‡((
±r
 = 
	`gëpw«m
("ßr")Ë=
NULL
)

24 
	`îr_sys
("getpwnamÉrror");

25 i‡(
	`°rcmp
(
±r
->
pw_«me
, "sar") != 0)

26 
	`¥ötf
("return value corrupted!,Öw_name = %s\n",

27 
±r
->
pw_«me
);

29 
	}
}

	@signals/setops.c

1 
	~<sig«l.h
>

2 
	~<î∫o.h
>

5 
	#SIGBAD
(
signo
Ë((signoË<0 || (signoË>
NSIG
)

	)

8 
	$sigadd£t
(
sig£t_t
 *
£t
, 
signo
)

10 i‡(
	`SIGBAD
(
signo
)Ë{ 
î∫o
 = 
EINVAL
; (-1); }

12 *
£t
 |1 << (
signo
 - 1);

14 
	}
}

17 
	$sigdñ£t
(
sig£t_t
 *
£t
, 
signo
)

19 i‡(
	`SIGBAD
(
signo
)Ë{ 
î∫o
 = 
EINVAL
; (-1); }

21 *
£t
 &~(1 << (
signo
 - 1));

23 
	}
}

26 
	$sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signo
)

28 i‡(
	`SIGBAD
(
signo
)Ë{ 
î∫o
 = 
EINVAL
; (-1); }

30 ((*
£t
 & (1 << (
signo
 - 1))) != 0);

31 
	}
}

	@signals/sigtstp.c

1 
	~"≠ue.h
"

3 
	#BUFFSIZE
 1024

	)

5 
sig_t°p
();

8 
	$maö
()

10 
n
;

11 
buf
[
BUFFSIZE
];

16 i‡(
	`sig«l
(
SIGTSTP
, 
SIG_IGN
Ë=
SIG_DFL
)

17 
	`sig«l
(
SIGTSTP
, 
sig_t°p
);

19 (
n
 = 
	`ªad
(
STDIN_FILENO
, 
buf
, 
BUFFSIZE
)) > 0)

20 i‡(
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
) !=Ç)

21 
	`îr_sys
("writeÉrror");

23 i‡(
n
 < 0)

24 
	`îr_sys
("readÉrror");

26 
	`exô
(0);

27 
	}
}

30 
	$sig_t°p
(
signo
)

32 
sig£t_t
 
mask
;

39 
	`sigem±y£t
(&
mask
);

40 
	`sigadd£t
(&
mask
, 
SIGTSTP
);

41 
	`sig¥ocmask
(
SIG_UNBLOCK
, &
mask
, 
NULL
);

43 
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

45 
	`kûl
(
	`gëpid
(), 
SIGTSTP
);

49 
	`sig«l
(
SIGTSTP
, 
sig_t°p
);

52 
	}
}

	@signals/sigusr.c

1 
	~"≠ue.h
"

3 
sig_u§
();

6 
	$maö
()

8 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

9 
	`îr_sys
("can't catch SIGUSR1");

10 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

11 
	`îr_sys
("can't catch SIGUSR2");

13 
	`∑u£
();

14 
	}
}

17 
	$sig_u§
(
signo
)

19 i‡(
signo
 =
SIGUSR1
)

20 
	`¥ötf
("received SIGUSR1\n");

21 i‡(
signo
 =
SIGUSR2
)

22 
	`¥ötf
("received SIGUSR2\n");

24 
	`îr_dump
("ª˚ived sig«»%d\n", 
signo
);

25 
	}
}

	@signals/sleep1.c

1 
	~<sig«l.h
>

2 
	~<uni°d.h
>

5 
	$sig_Ærm
(
signo
)

8 
	}
}

11 
	$¶ìp1
(
n£cs
)

13 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

14 (
n£cs
);

15 
	`Æ¨m
(
n£cs
);

16 
	`∑u£
();

17 (
	`Æ¨m
(0));

18 
	}
}

	@signals/sleep2.c

1 
	~<£tjmp.h
>

2 
	~<sig«l.h
>

3 
	~<uni°d.h
>

5 
jmp_buf
 
	gív_Ærm
;

8 
	$sig_Ærm
(
signo
)

10 
	`l⁄gjmp
(
ív_Ærm
, 1);

11 
	}
}

14 
	$¶ìp2
(
n£cs
)

16 i‡(
	`sig«l
(
SIGALRM
, 
sig_Ærm
Ë=
SIG_ERR
)

17 (
n£cs
);

18 i‡(
	`£tjmp
(
ív_Ærm
) == 0) {

19 
	`Æ¨m
(
n£cs
);

20 
	`∑u£
();

22 (
	`Æ¨m
(0));

23 
	}
}

	@signals/suspend1.c

1 
	~"≠ue.h
"

3 
sig_öt
();

6 
	$maö
()

8 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
waômask
;

10 
	`¥_mask
("program start: ");

12 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

13 
	`îr_sys
("signal(SIGINT)Érror");

14 
	`sigem±y£t
(&
waômask
);

15 
	`sigadd£t
(&
waômask
, 
SIGUSR1
);

16 
	`sigem±y£t
(&
√wmask
);

17 
	`sigadd£t
(&
√wmask
, 
SIGINT
);

22 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

23 
	`îr_sys
("SIG_BLOCKÉrror");

28 
	`¥_mask
("in criticalÑegion: ");

33 i‡(
	`sigsu•íd
(&
waômask
) != -1)

34 
	`îr_sys
("sigsuspendÉrror");

36 
	`¥_mask
("afterÑeturn from sigsuspend: ");

41 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

42 
	`îr_sys
("SIG_SETMASKÉrror");

47 
	`¥_mask
("programÉxit: ");

49 
	`exô
(0);

50 
	}
}

53 
	$sig_öt
(
signo
)

55 
	`¥_mask
("\nin sig_int: ");

56 
	}
}

	@signals/suspend2.c

1 
	~"≠ue.h
"

3 vﬁ©ûê
sig_©omic_t
 
	gquôÊag
;

6 
	$sig_öt
(
signo
)

8 i‡(
signo
 =
SIGINT
)

9 
	`¥ötf
("\ninterrupt\n");

10 i‡(
signo
 =
SIGQUIT
)

11 
quôÊag
 = 1;

12 
	}
}

15 
	$maö
()

17 
sig£t_t
 
√wmask
, 
ﬁdmask
, 
zîomask
;

19 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

20 
	`îr_sys
("signal(SIGINT)Érror");

21 i‡(
	`sig«l
(
SIGQUIT
, 
sig_öt
Ë=
SIG_ERR
)

22 
	`îr_sys
("signal(SIGQUIT)Érror");

24 
	`sigem±y£t
(&
zîomask
);

25 
	`sigem±y£t
(&
√wmask
);

26 
	`sigadd£t
(&
√wmask
, 
SIGQUIT
);

31 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

32 
	`îr_sys
("SIG_BLOCKÉrror");

34 
quôÊag
 == 0)

35 
	`sigsu•íd
(&
zîomask
);

40 
quôÊag
 = 0;

45 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

46 
	`îr_sys
("SIG_SETMASKÉrror");

48 
	`exô
(0);

49 
	}
}

	@signals/system.c

1 
	~<sys/waô.h
>

2 
	~<î∫o.h
>

3 
	~<sig«l.h
>

4 
	~<uni°d.h
>

7 
	$sy°em
(c⁄° *
cmd°rög
)

9 
pid_t
 
pid
;

10 
°©us
;

11 
siga˘i⁄
 
ign‹e
, 
ßveöå
, 
ßvequô
;

12 
sig£t_t
 
chldmask
, 
ßvemask
;

14 i‡(
cmd°rög
 =
NULL
)

17 
ign‹e
.
ß_h™dÀr
 = 
SIG_IGN
;

18 
	`sigem±y£t
(&
ign‹e
.
ß_mask
);

19 
ign‹e
.
ß_Êags
 = 0;

20 i‡(
	`siga˘i⁄
(
SIGINT
, &
ign‹e
, &
ßveöå
) < 0)

22 i‡(
	`siga˘i⁄
(
SIGQUIT
, &
ign‹e
, &
ßvequô
) < 0)

24 
	`sigem±y£t
(&
chldmask
);

25 
	`sigadd£t
(&
chldmask
, 
SIGCHLD
);

26 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
chldmask
, &
ßvemask
) < 0)

29 i‡((
pid
 = 
	`f‹k
()) < 0) {

30 
°©us
 = -1;

31 } i‡(
pid
 == 0) {

33 
	`siga˘i⁄
(
SIGINT
, &
ßveöå
, 
NULL
);

34 
	`siga˘i⁄
(
SIGQUIT
, &
ßvequô
, 
NULL
);

35 
	`sig¥ocmask
(
SIG_SETMASK
, &
ßvemask
, 
NULL
);

37 
	`exe˛
("/bö/sh", "sh", "-c", 
cmd°rög
, (*)0);

38 
	`_exô
(127);

40 
	`waôpid
(
pid
, &
°©us
, 0) < 0)

41 i‡(
î∫o
 !
EINTR
) {

42 
°©us
 = -1;

48 i‡(
	`siga˘i⁄
(
SIGINT
, &
ßveöå
, 
NULL
) < 0)

50 i‡(
	`siga˘i⁄
(
SIGQUIT
, &
ßvequô
, 
NULL
) < 0)

52 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ßvemask
, 
NULL
) < 0)

55 (
°©us
);

56 
	}
}

	@signals/tsleep2.c

1 
	~"≠ue.h
"

3 
¶ìp2
();

4 
sig_öt
();

7 
	$maö
()

9 
un¶ït
;

11 i‡(
	`sig«l
(
SIGINT
, 
sig_öt
Ë=
SIG_ERR
)

12 
	`îr_sys
("signal(SIGINT)Érror");

13 
un¶ït
 = 
	`¶ìp2
(5);

14 
	`¥ötf
("¶ìp2Ñëu∫ed: %u\n", 
un¶ït
);

15 
	`exô
(0);

16 
	}
}

19 
	$sig_öt
(
signo
)

21 
i
, 
j
;

22 vﬁ©ûê
k
;

28 
	`¥ötf
("\nsig_int starting\n");

29 
i
 = 0; i < 300000; i++)

30 
j
 = 0; j < 4000; j++)

31 
k
 +
i
 * 
j
;

32 
	`¥ötf
("sig_int finished\n");

33 
	}
}

	@sockets/bindunix.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

6 
	$maö
()

8 
fd
, 
size
;

9 
sockaddr_un
 
un
;

11 
un
.
sun_Ámûy
 = 
AF_UNIX
;

12 
	`°r˝y
(
un
.
sun_∑th
, "foo.socket");

13 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

14 
	`îr_sys
("socket failed");

15 
size
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
un
.sun_path);

16 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
size
) < 0)

17 
	`îr_sys
("bind failed");

18 
	`¥ötf
("UNIX domain socket bound\n");

19 
	`exô
(0);

20 
	}
}

	@sockets/bo.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<öây≥s.h
>

6 
	$maö
()

8 
uöt32_t
 
i
;

9 *
˝
;

11 
i
 = 0x04030201;

12 
˝
 = (*)&
i
;

13 i‡(*
˝
 == 1)

14 
	`¥ötf
("little-endian\n");

15 i‡(*
˝
 == 4)

16 
	`¥ötf
("big-endian\n");

18 
	`¥ötf
("who knows?\n");

19 
	`exô
(0);

20 
	}
}

	@sockets/clconn.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

4 
	#MAXSLEEP
 128

	)

7 
	$c⁄√˘_ªåy
(
sockfd
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Æí
)

9 
n£c
;

14 
n£c
 = 1;Ç£¯<
MAXSLEEP
;Çsec <<= 1) {

15 i‡(
	`c⁄√˘
(
sockfd
, 
addr
, 
Æí
) == 0) {

25 i‡(
n£c
 <
MAXSLEEP
/2)

26 
	`¶ìp
(
n£c
);

29 
	}
}

	@sockets/cliconn.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#CLI_PATH
 "/v¨/tmp/"

	)

7 
	#CLI_PERM
 
S_IRWXU


	)

14 
	$˛i_c⁄n
(c⁄° *
«me
)

16 
fd
, 
Àn
, 
îr
, 
rvÆ
;

17 
sockaddr_un
 
un
;

20 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

24 
	`mem£t
(&
un
, 0, (un));

25 
un
.
sun_Ámûy
 = 
AF_UNIX
;

26 
	`•rötf
(
un
.
sun_∑th
, "%s%05d", 
CLI_PATH
, 
	`gëpid
());

27 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
un
.sun_path);

29 
	`u∆ök
(
un
.
sun_∑th
);

30 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

31 
rvÆ
 = -2;

32 
îrout
;

34 i‡(
	`chmod
(
un
.
sun_∑th
, 
CLI_PERM
) < 0) {

35 
rvÆ
 = -3;

36 
îrout
;

40 
	`mem£t
(&
un
, 0, (un));

41 
un
.
sun_Ámûy
 = 
AF_UNIX
;

42 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

43 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

44 i‡(
	`c⁄√˘
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

45 
rvÆ
 = -4;

46 
îrout
;

48 (
fd
);

50 
îrout
:

51 
îr
 = 
î∫o
;

52 
	`˛o£
(
fd
);

53 
î∫o
 = 
îr
;

54 (
rvÆ
);

55 
	}
}

	@sockets/findsvc.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<¨∑/öë.h
>

4 #i‡
deföed
(
BSD
Ë|| deföed(
MACOS
)

5 
	~<sys/sockë.h
>

6 
	~<√töë/ö.h
>

10 
	$¥öt_Ámûy
(
addröfo
 *
aù
)

12 
	`¥ötf
(" family ");

13 
aù
->
ai_Ámûy
) {

14 
AF_INET
:

15 
	`¥ötf
("inet");

17 
AF_INET6
:

18 
	`¥ötf
("inet6");

20 
AF_UNIX
:

21 
	`¥ötf
("unix");

23 
AF_UNSPEC
:

24 
	`¥ötf
("unspecified");

27 
	`¥ötf
("unknown");

29 
	}
}

32 
	$¥öt_ty≥
(
addröfo
 *
aù
)

34 
	`¥ötf
("Åype ");

35 
aù
->
ai_sockty≥
) {

36 
SOCK_STREAM
:

37 
	`¥ötf
("stream");

39 
SOCK_DGRAM
:

40 
	`¥ötf
("datagram");

42 
SOCK_SEQPACKET
:

43 
	`¥ötf
("seqpacket");

45 
SOCK_RAW
:

46 
	`¥ötf
("raw");

49 
	`¥ötf
("unknow¿(%d)", 
aù
->
ai_sockty≥
);

51 
	}
}

54 
	$¥öt_¥Ÿocﬁ
(
addröfo
 *
aù
)

56 
	`¥ötf
("Örotocol ");

57 
aù
->
ai_¥Ÿocﬁ
) {

59 
	`¥ötf
("default");

61 
IPPROTO_TCP
:

62 
	`¥ötf
("TCP");

64 
IPPROTO_UDP
:

65 
	`¥ötf
("UDP");

67 
IPPROTO_RAW
:

68 
	`¥ötf
("raw");

71 
	`¥ötf
("unknow¿(%d)", 
aù
->
ai_¥Ÿocﬁ
);

73 
	}
}

76 
	$¥öt_Êags
(
addröfo
 *
aù
)

78 
	`¥ötf
("flags");

79 i‡(
aù
->
ai_Êags
 == 0) {

80 
	`¥ötf
(" 0");

82 i‡(
aù
->
ai_Êags
 & 
AI_PASSIVE
)

83 
	`¥ötf
("Öassive");

84 i‡(
aù
->
ai_Êags
 & 
AI_CANONNAME
)

85 
	`¥ötf
(" canon");

86 i‡(
aù
->
ai_Êags
 & 
AI_NUMERICHOST
)

87 
	`¥ötf
("Çumhost");

88 #i‡
	`deföed
(
AI_NUMERICSERV
)

89 i‡(
aù
->
ai_Êags
 & 
AI_NUMERICSERV
)

90 
	`¥ötf
("Çumserv");

92 #i‡
	`deföed
(
AI_V4MAPPED
)

93 i‡(
aù
->
ai_Êags
 & 
AI_V4MAPPED
)

94 
	`¥ötf
(" v4mapped");

96 #i‡
	`deföed
(
AI_ALL
)

97 i‡(
aù
->
ai_Êags
 & 
AI_ALL
)

98 
	`¥ötf
("áll");

101 
	}
}

104 
	$maö
(
¨gc
, *
¨gv
[])

106 
addröfo
 *
aûi°
, *
aù
;

107 
addröfo
 
höt
;

108 
sockaddr_ö
 *
söp
;

109 c⁄° *
addr
;

110 
îr
;

111 
abuf
[
INET_ADDRSTRLEN
];

113 i‡(
¨gc
 != 3)

114 
	`îr_quô
("ußge: %†nodíamê£rvi˚", 
¨gv
[0]);

115 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

116 
höt
.
ai_Ámûy
 = 0;

117 
höt
.
ai_sockty≥
 = 0;

118 
höt
.
ai_¥Ÿocﬁ
 = 0;

119 
höt
.
ai_addæí
 = 0;

120 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

121 
höt
.
ai_addr
 = 
NULL
;

122 
höt
.
ai_√xt
 = 
NULL
;

123 i‡((
îr
 = 
	`gëaddröfo
(
¨gv
[1],árgv[2], &
höt
, &
aûi°
)) != 0)

124 
	`îr_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

125 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

126 
	`¥öt_Êags
(
aù
);

127 
	`¥öt_Ámûy
(
aù
);

128 
	`¥öt_ty≥
(
aù
);

129 
	`¥öt_¥Ÿocﬁ
(
aù
);

130 
	`¥ötf
("\n\tho° %s", 
aù
->
ai_ˇn⁄«me
?aip->ai_canonname:"-");

131 i‡(
aù
->
ai_Ámûy
 =
AF_INET
) {

132 
söp
 = (
sockaddr_ö
 *)
aù
->
ai_addr
;

133 
addr
 = 
	`öë_¡›
(
AF_INET
, &
söp
->
sö_addr
, 
abuf
,

134 
INET_ADDRSTRLEN
);

135 
	`¥ötf
("áddªs†%s", 
addr
?addr:"unknown");

136 
	`¥ötf
("Ö‹à%d", 
	`¡ohs
(
söp
->
sö_p‹t
));

138 
	`¥ötf
("\n");

140 
	`exô
(0);

141 
	}
}

	@sockets/initsrv1.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<sys/sockë.h
>

6 
	$öô£rvî
(
ty≥
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Æí
,

7 
qÀn
)

9 
fd
;

10 
îr
 = 0;

12 i‡((
fd
 = 
	`sockë
(
addr
->
ß_Ámûy
, 
ty≥
, 0)) < 0)

14 i‡(
	`böd
(
fd
, 
addr
, 
Æí
) < 0) {

15 
îr
 = 
î∫o
;

16 
îrout
;

18 i‡(
ty≥
 =
SOCK_STREAM
 ||Åy≥ =
SOCK_SEQPACKET
) {

19 i‡(
	`li°í
(
fd
, 
qÀn
) < 0) {

20 
îr
 = 
î∫o
;

21 
îrout
;

24 (
fd
);

26 
îrout
:

27 
	`˛o£
(
fd
);

28 
î∫o
 = 
îr
;

30 
	}
}

	@sockets/initsrv2.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<sys/sockë.h
>

6 
	$öô£rvî
(
ty≥
, c⁄° 
sockaddr
 *
addr
, 
sockÀn_t
 
Æí
,

7 
qÀn
)

9 
fd
, 
îr
;

10 
ªu£
 = 1;

12 i‡((
fd
 = 
	`sockë
(
addr
->
ß_Ámûy
, 
ty≥
, 0)) < 0)

14 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
ªu£
,

16 
îr
 = 
î∫o
;

17 
îrout
;

19 i‡(
	`böd
(
fd
, 
addr
, 
Æí
) < 0) {

20 
îr
 = 
î∫o
;

21 
îrout
;

23 i‡(
ty≥
 =
SOCK_STREAM
 ||Åy≥ =
SOCK_SEQPACKET
) {

24 i‡(
	`li°í
(
fd
, 
qÀn
) < 0) {

25 
îr
 = 
î∫o
;

26 
îrout
;

29 (
fd
);

31 
îrout
:

32 
	`˛o£
(
fd
);

33 
î∫o
 = 
îr
;

35 
	}
}

	@sockets/recvfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

9 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

11 
cmsghdr
 *
	gcm±r
 = 
NULL
;

19 
ªcv_fd
(
fd
, 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

21 
√wfd
, 
ƒ
, 
°©us
;

22 *
±r
;

23 
buf
[
MAXLINE
];

24 
iovec
 
iov
[1];

25 
msghdr
 
msg
;

27 
°©us
 = -1;

29 
iov
[0].
iov_ba£
 = 
buf
;

30 
iov
[0].
iov_Àn
 = (
buf
);

31 
msg
.
msg_iov
 = 
iov
;

32 
msg
.
msg_iovÀn
 = 1;

33 
msg
.
msg_«me
 = 
NULL
;

34 
msg
.
msg_«mñí
 = 0;

35 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

37 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

38 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

39 i‡((
ƒ
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0) {

40 
	`îr_sys
("recvmsgÉrror");

41 } i‡(
ƒ
 == 0) {

42 
	`îr_ªt
("connection closed by server");

51 
±r
 = 
buf
;Öå < &buf[
ƒ
]; ) {

52 i‡(*
±r
++ == 0) {

53 i‡(
±r
 !&
buf
[
ƒ
-1])

54 
	`îr_dump
("message formatÉrror");

55 
°©us
 = *
±r
 & 0xFF;

56 i‡(
°©us
 == 0) {

57 i‡(
msg
.
msg_c⁄åﬁÀn
 !
CONTROLLEN
)

58 
	`îr_dump
("status = 0 butÇo fd");

59 
√wfd
 = *(*)
	`CMSG_DATA
(
cm±r
);

61 
√wfd
 = -
°©us
;

63 
ƒ
 -= 2;

66 i‡(
ƒ
 > 0 && (*
u£rfunc
)(
STDERR_FILENO
, 
buf
,Çr) !=Çr)

68 i‡(
°©us
 >= 0)

69 (
√wfd
);

71 
	}
}

	@sockets/recvfd2.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

5 #i‡
deföed
(
SCM_CREDS
)

6 
	#CREDSTRUCT
 
cmsg¸ed


	)

7 
	#CR_UID
 
cm¸ed_uid


	)

8 
	#CREDOPT
 
LOCAL_PEERCRED


	)

9 
	#SCM_CREDTYPE
 
SCM_CREDS


	)

10 #ñi‡
deföed
(
SCM_CREDENTIALS
)

11 
	#CREDSTRUCT
 
u¸ed


	)

12 
	#CR_UID
 
uid


	)

13 
	#CREDOPT
 
SO_PASSCRED


	)

14 
	#SCM_CREDTYPE
 
SCM_CREDENTIALS


	)

16 #îr‹ 
∑ssög
 
¸edítüls
 
is
 
unsuµ‹ãd
!

20 
	#RIGHTSLEN
 
	`CMSG_LEN
(())

	)

21 
	#CREDSLEN
 
	`CMSG_LEN
((
CREDSTRUCT
))

	)

22 
	#CONTROLLEN
 (
RIGHTSLEN
 + 
CREDSLEN
)

	)

24 
cmsghdr
 *
	gcm±r
 = 
NULL
;

32 
ªcv_ufd
(
fd
, 
uid_t
 *
uid±r
,

33 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

35 
cmsghdr
 *
cmp
;

36 
CREDSTRUCT
 *
¸edp
;

37 
√wfd
, 
ƒ
, 
°©us
;

38 *
±r
;

39 
buf
[
MAXLINE
];

40 
iovec
 
iov
[1];

41 
msghdr
 
msg
;

42 c⁄° 
⁄
 = 1;

44 
°©us
 = -1;

45 
√wfd
 = -1;

46 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
CREDOPT
, &
⁄
, ()) < 0) {

47 
	`îr_ªt
("setsockopt failed");

51 
iov
[0].
iov_ba£
 = 
buf
;

52 
iov
[0].
iov_Àn
 = (
buf
);

53 
msg
.
msg_iov
 = 
iov
;

54 
msg
.
msg_iovÀn
 = 1;

55 
msg
.
msg_«me
 = 
NULL
;

56 
msg
.
msg_«mñí
 = 0;

57 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

59 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

60 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

61 i‡((
ƒ
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0) {

62 
	`îr_sys
("recvmsgÉrror");

63 } i‡(
ƒ
 == 0) {

64 
	`îr_ªt
("connection closed by server");

73 
±r
 = 
buf
;Öå < &buf[
ƒ
]; ) {

74 i‡(*
±r
++ == 0) {

75 i‡(
±r
 !&
buf
[
ƒ
-1])

76 
	`îr_dump
("message formatÉrror");

77 
°©us
 = *
±r
 & 0xFF;

78 i‡(
°©us
 == 0) {

79 i‡(
msg
.
msg_c⁄åﬁÀn
 !
CONTROLLEN
)

80 
	`îr_dump
("status = 0 butÇo fd");

83 
cmp
 = 
	`CMSG_FIRSTHDR
(&
msg
);

84 
cmp
 !
NULL
; cm∞
	`CMSG_NXTHDR
(&
msg
, cmp)) {

85 i‡(
cmp
->
cmsg_Àvñ
 !
SOL_SOCKET
)

87 
cmp
->
cmsg_ty≥
) {

88 
SCM_RIGHTS
:

89 
√wfd
 = *(*)
	`CMSG_DATA
(
cmp
);

91 
SCM_CREDTYPE
:

92 
¸edp
 = (
CREDSTRUCT
 *)
	`CMSG_DATA
(
cmp
);

93 *
uid±r
 = 
¸edp
->
CR_UID
;

97 
√wfd
 = -
°©us
;

99 
ƒ
 -= 2;

102 i‡(
ƒ
 > 0 && (*
u£rfunc
)(
STDERR_FILENO
, 
buf
,Çr) !=Çr)

104 i‡(
°©us
 >= 0)

105 (
√wfd
);

107 
	}
}

	@sockets/ruptime-dg.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sys/sockë.h
>

6 
	#BUFLEN
 128

	)

7 
	#TIMEOUT
 20

	)

10 
	$sigÆrm
(
signo
)

12 
	}
}

15 
	$¥öt_u±ime
(
sockfd
, 
addröfo
 *
aù
)

17 
n
;

18 
buf
[
BUFLEN
];

20 
buf
[0] = 0;

21 i‡(
	`£ndto
(
sockfd
, 
buf
, 1, 0, 
aù
->
ai_addr
,áù->
ai_addæí
) < 0)

22 
	`îr_sys
("sendtoÉrror");

23 
	`Æ¨m
(
TIMEOUT
);

24 i‡((
n
 = 
	`ªcv‰om
(
sockfd
, 
buf
, 
BUFLEN
, 0, 
NULL
, NULL)) < 0) {

25 i‡(
î∫o
 !
EINTR
)

26 
	`Æ¨m
(0);

27 
	`îr_sys
("recvÉrror");

29 
	`Æ¨m
(0);

30 
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
);

31 
	}
}

34 
	$maö
(
¨gc
, *
¨gv
[])

36 
addröfo
 *
aûi°
, *
aù
;

37 
addröfo
 
höt
;

38 
sockfd
, 
îr
;

39 
siga˘i⁄
 
ß
;

41 i‡(
¨gc
 != 2)

42 
	`îr_quô
("usage:Ñuptime hostname");

43 
ß
.
ß_h™dÀr
 = 
sigÆrm
;

44 
ß
.
ß_Êags
 = 0;

45 
	`sigem±y£t
(&
ß
.
ß_mask
);

46 i‡(
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
) < 0)

47 
	`îr_sys
("sigactionÉrror");

48 
höt
.
ai_Êags
 = 0;

49 
höt
.
ai_Ámûy
 = 0;

50 
höt
.
ai_sockty≥
 = 
SOCK_DGRAM
;

51 
höt
.
ai_¥Ÿocﬁ
 = 0;

52 
höt
.
ai_addæí
 = 0;

53 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

54 
höt
.
ai_addr
 = 
NULL
;

55 
höt
.
ai_√xt
 = 
NULL
;

56 i‡((
îr
 = 
	`gëaddröfo
(
¨gv
[1], "ru±ime", &
höt
, &
aûi°
)) != 0)

57 
	`îr_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

59 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

60 i‡((
sockfd
 = 
	`sockë
(
aù
->
ai_Ámûy
, 
SOCK_DGRAM
, 0)) < 0) {

61 
îr
 = 
î∫o
;

63 
	`¥öt_u±ime
(
sockfd
, 
aù
);

64 
	`exô
(0);

68 
	`Ârötf
(
°dîr
, "ˇn'àc⁄è˘ %s: %s\n", 
¨gv
[1], 
	`°ªº‹
(
îr
));

69 
	`exô
(1);

70 
	}
}

	@sockets/ruptime.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sys/sockë.h
>

6 
	#MAXADDRLEN
 256

	)

7 
	#BUFLEN
 128

	)

9 
c⁄√˘_ªåy
(, c⁄° 
sockaddr
 *, 
sockÀn_t
);

12 
	$¥öt_u±ime
(
sockfd
)

14 
n
;

15 
buf
[
BUFLEN
];

17 (
n
 = 
	`ªcv
(
sockfd
, 
buf
, 
BUFLEN
, 0)) > 0)

18 
	`wrôe
(
STDOUT_FILENO
, 
buf
, 
n
);

19 i‡(
n
 < 0)

20 
	`îr_sys
("recvÉrror");

21 
	}
}

24 
	$maö
(
¨gc
, *
¨gv
[])

26 
addröfo
 *
aûi°
, *
aù
;

27 
addröfo
 
höt
;

28 
sockfd
, 
îr
;

30 i‡(
¨gc
 != 2)

31 
	`îr_quô
("usage:Ñuptime hostname");

32 
höt
.
ai_Êags
 = 0;

33 
höt
.
ai_Ámûy
 = 0;

34 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

35 
höt
.
ai_¥Ÿocﬁ
 = 0;

36 
höt
.
ai_addæí
 = 0;

37 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

38 
höt
.
ai_addr
 = 
NULL
;

39 
höt
.
ai_√xt
 = 
NULL
;

40 i‡((
îr
 = 
	`gëaddröfo
(
¨gv
[1], "ru±ime", &
höt
, &
aûi°
)) != 0)

41 
	`îr_quô
("gëaddröfÿîr‹: %s", 
	`gai_°ªº‹
(
îr
));

42 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

43 i‡((
sockfd
 = 
	`sockë
(
aù
->
ai_Ámûy
, 
SOCK_STREAM
, 0)) < 0)

44 
îr
 = 
î∫o
;

45 i‡(
	`c⁄√˘_ªåy
(
sockfd
, 
aù
->
ai_addr
,áù->
ai_addæí
) < 0) {

46 
îr
 = 
î∫o
;

48 
	`¥öt_u±ime
(
sockfd
);

49 
	`exô
(0);

52 
	`Ârötf
(
°dîr
, "ˇn'àc⁄√˘Åÿ%s: %s\n", 
¨gv
[1],

53 
	`°ªº‹
(
îr
));

54 
	`exô
(1);

55 
	}
}

	@sockets/ruptimed-dg.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sy¶og.h
>

5 
	~<sys/sockë.h
>

7 
	#BUFLEN
 128

	)

8 
	#MAXADDRLEN
 256

	)

10 #i‚de‡
HOST_NAME_MAX


11 
	#HOST_NAME_MAX
 256

	)

14 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

17 
	$£rve
(
sockfd
)

19 
n
;

20 
sockÀn_t
 
Æí
;

21 
FILE
 *
Â
;

22 
buf
[
BUFLEN
];

23 
abuf
[
MAXADDRLEN
];

26 
Æí
 = 
MAXADDRLEN
;

27 i‡((
n
 = 
	`ªcv‰om
(
sockfd
, 
buf
, 
BUFLEN
, 0,

28 (
sockaddr
 *)
abuf
, &
Æí
)) < 0) {

29 
	`sy¶og
(
LOG_ERR
, "ruptimed:ÑecvfromÉrror: %s",

30 
	`°ªº‹
(
î∫o
));

31 
	`exô
(1);

33 i‡((
Â
 = 
	`p›í
("/u§/bö/u±ime", "r")Ë=
NULL
) {

34 
	`•rötf
(
buf
, "îr‹: %s\n", 
	`°ªº‹
(
î∫o
));

35 
	`£ndto
(
sockfd
, 
buf
, 
	`°æí
(buf), 0,

36 (
sockaddr
 *)
abuf
, 
Æí
);

38 i‡(
	`fgës
(
buf
, 
BUFLEN
, 
Â
Ë!
NULL
)

39 
	`£ndto
(
sockfd
, 
buf
, 
	`°æí
(buf), 0,

40 (
sockaddr
 *)
abuf
, 
Æí
);

41 
	`p˛o£
(
Â
);

44 
	}
}

47 
	$maö
(
¨gc
, *
¨gv
[])

49 
addröfo
 *
aûi°
, *
aù
;

50 
addröfo
 
höt
;

51 
sockfd
, 
îr
, 
n
;

52 *
ho°
;

54 i‡(
¨gc
 != 1)

55 
	`îr_quô
("usage:Ñuptimed");

56 #ifde‡
_SC_HOST_NAME_MAX


57 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

58 i‡(
n
 < 0)

60 
n
 = 
HOST_NAME_MAX
;

61 
ho°
 = 
	`mÆloc
(
n
);

62 i‡(
ho°
 =
NULL
)

63 
	`îr_sys
("mallocÉrror");

64 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

65 
	`îr_sys
("gethostnameÉrror");

66 
	`d´m⁄ize
("ruptimed");

67 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

68 
höt
.
ai_Ámûy
 = 0;

69 
höt
.
ai_sockty≥
 = 
SOCK_DGRAM
;

70 
höt
.
ai_¥Ÿocﬁ
 = 0;

71 
höt
.
ai_addæí
 = 0;

72 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

73 
höt
.
ai_addr
 = 
NULL
;

74 
höt
.
ai_√xt
 = 
NULL
;

75 i‡((
îr
 = 
	`gëaddröfo
(
ho°
, "ru±ime", &
höt
, &
aûi°
)) != 0) {

76 
	`sy¶og
(
LOG_ERR
, "ruptimed: getaddrinfoÉrror: %s",

77 
	`gai_°ªº‹
(
îr
));

78 
	`exô
(1);

80 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

81 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_DGRAM
, 
aù
->
ai_addr
,

82 
aù
->
ai_addæí
, 0)) >= 0) {

83 
	`£rve
(
sockfd
);

84 
	`exô
(0);

87 
	`exô
(1);

88 
	}
}

	@sockets/ruptimed-fd.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sy¶og.h
>

5 
	~<f˙é.h
>

6 
	~<sys/sockë.h
>

7 
	~<sys/waô.h
>

9 
	#QLEN
 10

	)

11 #i‚de‡
HOST_NAME_MAX


12 
	#HOST_NAME_MAX
 256

	)

15 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

18 
	$£rve
(
sockfd
)

20 
˛fd
, 
°©us
;

21 
pid_t
 
pid
;

24 
˛fd
 = 
	`ac˚±
(
sockfd
, 
NULL
, NULL);

25 i‡(
˛fd
 < 0) {

26 
	`sy¶og
(
LOG_ERR
, "ruptimed:ácceptÉrror: %s",

27 
	`°ªº‹
(
î∫o
));

28 
	`exô
(1);

30 i‡((
pid
 = 
	`f‹k
()) < 0) {

31 
	`sy¶og
(
LOG_ERR
, "ruptimed: forkÉrror: %s",

32 
	`°ªº‹
(
î∫o
));

33 
	`exô
(1);

34 } i‡(
pid
 == 0) {

42 i‡(
	`dup2
(
˛fd
, 
STDOUT_FILENO
) != STDOUT_FILENO ||

43 
	`dup2
(
˛fd
, 
STDERR_FILENO
) != STDERR_FILENO) {

44 
	`sy¶og
(
LOG_ERR
, "ruptimed: unexpectedÉrror");

45 
	`exô
(1);

47 
	`˛o£
(
˛fd
);

48 
	`exe˛
("/usr/bin/uptime", "uptime", (*)0);

49 
	`sy¶og
(
LOG_ERR
, "ruptimed: unexpectedÑeturn fromÉxec: %s",

50 
	`°ªº‹
(
î∫o
));

52 
	`˛o£
(
˛fd
);

53 
	`waôpid
(
pid
, &
°©us
, 0);

56 
	}
}

59 
	$maö
(
¨gc
, *
¨gv
[])

61 
addröfo
 *
aûi°
, *
aù
;

62 
addröfo
 
höt
;

63 
sockfd
, 
îr
, 
n
;

64 *
ho°
;

66 i‡(
¨gc
 != 1)

67 
	`îr_quô
("usage:Ñuptimed");

68 #ifde‡
_SC_HOST_NAME_MAX


69 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

70 i‡(
n
 < 0)

72 
n
 = 
HOST_NAME_MAX
;

73 
ho°
 = 
	`mÆloc
(
n
);

74 i‡(
ho°
 =
NULL
)

75 
	`îr_sys
("mallocÉrror");

76 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

77 
	`îr_sys
("gethostnameÉrror");

78 
	`d´m⁄ize
("ruptimed");

79 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

80 
höt
.
ai_Ámûy
 = 0;

81 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

82 
höt
.
ai_¥Ÿocﬁ
 = 0;

83 
höt
.
ai_addæí
 = 0;

84 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

85 
höt
.
ai_addr
 = 
NULL
;

86 
höt
.
ai_√xt
 = 
NULL
;

87 i‡((
îr
 = 
	`gëaddröfo
(
ho°
, "ru±ime", &
höt
, &
aûi°
)) != 0) {

88 
	`sy¶og
(
LOG_ERR
, "ruptimed: getaddrinfoÉrror: %s",

89 
	`gai_°ªº‹
(
îr
));

90 
	`exô
(1);

92 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

93 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_STREAM
, 
aù
->
ai_addr
,

94 
aù
->
ai_addæí
, 
QLEN
)) >= 0) {

95 
	`£rve
(
sockfd
);

96 
	`exô
(0);

99 
	`exô
(1);

100 
	}
}

	@sockets/ruptimed.c

1 
	~"≠ue.h
"

2 
	~<√tdb.h
>

3 
	~<î∫o.h
>

4 
	~<sy¶og.h
>

5 
	~<sys/sockë.h
>

7 
	#BUFLEN
 128

	)

8 
	#QLEN
 10

	)

10 #i‚de‡
HOST_NAME_MAX


11 
	#HOST_NAME_MAX
 256

	)

14 
öô£rvî
(, 
sockaddr
 *, 
sockÀn_t
, );

17 
	$£rve
(
sockfd
)

19 
˛fd
;

20 
FILE
 *
Â
;

21 
buf
[
BUFLEN
];

24 
˛fd
 = 
	`ac˚±
(
sockfd
, 
NULL
, NULL);

25 i‡(
˛fd
 < 0) {

26 
	`sy¶og
(
LOG_ERR
, "ruptimed:ácceptÉrror: %s",

27 
	`°ªº‹
(
î∫o
));

28 
	`exô
(1);

30 i‡((
Â
 = 
	`p›í
("/u§/bö/u±ime", "r")Ë=
NULL
) {

31 
	`•rötf
(
buf
, "îr‹: %s\n", 
	`°ªº‹
(
î∫o
));

32 
	`£nd
(
˛fd
, 
buf
, 
	`°æí
(buf), 0);

34 
	`fgës
(
buf
, 
BUFLEN
, 
Â
Ë!
NULL
)

35 
	`£nd
(
˛fd
, 
buf
, 
	`°æí
(buf), 0);

36 
	`p˛o£
(
Â
);

38 
	`˛o£
(
˛fd
);

40 
	}
}

43 
	$maö
(
¨gc
, *
¨gv
[])

45 
addröfo
 *
aûi°
, *
aù
;

46 
addröfo
 
höt
;

47 
sockfd
, 
îr
, 
n
;

48 *
ho°
;

50 i‡(
¨gc
 != 1)

51 
	`îr_quô
("usage:Ñuptimed");

52 #ifde‡
_SC_HOST_NAME_MAX


53 
n
 = 
	`sysc⁄f
(
_SC_HOST_NAME_MAX
);

54 i‡(
n
 < 0)

56 
n
 = 
HOST_NAME_MAX
;

57 
ho°
 = 
	`mÆloc
(
n
);

58 i‡(
ho°
 =
NULL
)

59 
	`îr_sys
("mallocÉrror");

60 i‡(
	`gëho°«me
(
ho°
, 
n
) < 0)

61 
	`îr_sys
("gethostnameÉrror");

62 
	`d´m⁄ize
("ruptimed");

63 
höt
.
ai_Êags
 = 
AI_CANONNAME
;

64 
höt
.
ai_Ámûy
 = 0;

65 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

66 
höt
.
ai_¥Ÿocﬁ
 = 0;

67 
höt
.
ai_addæí
 = 0;

68 
höt
.
ai_ˇn⁄«me
 = 
NULL
;

69 
höt
.
ai_addr
 = 
NULL
;

70 
höt
.
ai_√xt
 = 
NULL
;

71 i‡((
îr
 = 
	`gëaddröfo
(
ho°
, "ru±ime", &
höt
, &
aûi°
)) != 0) {

72 
	`sy¶og
(
LOG_ERR
, "ruptimed: getaddrinfoÉrror: %s",

73 
	`gai_°ªº‹
(
îr
));

74 
	`exô
(1);

76 
aù
 = 
aûi°
;áù !
NULL
;áù =áù->
ai_√xt
) {

77 i‡((
sockfd
 = 
	`öô£rvî
(
SOCK_STREAM
, 
aù
->
ai_addr
,

78 
aù
->
ai_addæí
, 
QLEN
)) >= 0) {

79 
	`£rve
(
sockfd
);

80 
	`exô
(0);

83 
	`exô
(1);

84 
	}
}

	@sockets/sendfd.c

1 
	~"≠ue.h
"

2 #ifde‡
MACOS


3 
	~<sys/uio.h
>

5 
	~<sys/sockë.h
>

8 
	#CONTROLLEN
 
	`CMSG_LEN
(())

	)

10 
cmsghdr
 *
	gcm±r
 = 
NULL
;

17 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

19 
iovec
 
iov
[1];

20 
msghdr
 
msg
;

21 
buf
[2];

23 
iov
[0].
iov_ba£
 = 
buf
;

24 
iov
[0].
iov_Àn
 = 2;

25 
msg
.
msg_iov
 = 
iov
;

26 
msg
.
msg_iovÀn
 = 1;

27 
msg
.
msg_«me
 = 
NULL
;

28 
msg
.
msg_«mñí
 = 0;

29 i‡(
fd_to_£nd
 < 0) {

30 
msg
.
msg_c⁄åﬁ
 = 
NULL
;

31 
msg
.
msg_c⁄åﬁÀn
 = 0;

32 
buf
[1] = -
fd_to_£nd
;

33 i‡(
buf
[1] == 0)

34 
buf
[1] = 1;

36 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

38 
cm±r
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

39 
cm±r
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

40 
cm±r
->
cmsg_Àn
 = 
CONTROLLEN
;

41 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

42 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

43 *(*)
	`CMSG_DATA
(
cm±r
Ë
fd_to_£nd
;

44 
buf
[1] = 0;

46 
buf
[0] = 0;

47 i‡(
	`£ndmsg
(
fd
, &
msg
, 0) != 2)

50 
	}
}

	@sockets/sendfd2.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

4 #i‡
deföed
(
SCM_CREDS
)

5 
	#CREDSTRUCT
 
cmsg¸ed


	)

6 
	#SCM_CREDTYPE
 
SCM_CREDS


	)

7 #ñi‡
deföed
(
SCM_CREDENTIALS
)

8 
	#CREDSTRUCT
 
u¸ed


	)

9 
	#SCM_CREDTYPE
 
SCM_CREDENTIALS


	)

11 #îr‹ 
∑ssög
 
¸edítüls
 
is
 
unsuµ‹ãd
!

15 
	#RIGHTSLEN
 
	`CMSG_LEN
(())

	)

16 
	#CREDSLEN
 
	`CMSG_LEN
((
CREDSTRUCT
))

	)

17 
	#CONTROLLEN
 (
RIGHTSLEN
 + 
CREDSLEN
)

	)

19 
cmsghdr
 *
	gcm±r
 = 
NULL
;

26 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

28 
CREDSTRUCT
 *
¸edp
;

29 
cmsghdr
 *
cmp
;

30 
iovec
 
iov
[1];

31 
msghdr
 
msg
;

32 
buf
[2];

34 
iov
[0].
iov_ba£
 = 
buf
;

35 
iov
[0].
iov_Àn
 = 2;

36 
msg
.
msg_iov
 = 
iov
;

37 
msg
.
msg_iovÀn
 = 1;

38 
msg
.
msg_«me
 = 
NULL
;

39 
msg
.
msg_«mñí
 = 0;

40 
msg
.
msg_Êags
 = 0;

41 i‡(
fd_to_£nd
 < 0) {

42 
msg
.
msg_c⁄åﬁ
 = 
NULL
;

43 
msg
.
msg_c⁄åﬁÀn
 = 0;

44 
buf
[1] = -
fd_to_£nd
;

45 i‡(
buf
[1] == 0)

46 
buf
[1] = 1;

48 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

50 
msg
.
msg_c⁄åﬁ
 = 
cm±r
;

51 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

52 
cmp
 = 
cm±r
;

53 
cmp
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

54 
cmp
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

55 
cmp
->
cmsg_Àn
 = 
RIGHTSLEN
;

56 *(*)
	`CMSG_DATA
(
cmp
Ë
fd_to_£nd
;

58 
cmp
 = 
	`CMSG_NXTHDR
(&
msg
, cmp);

59 
cmp
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

60 
cmp
->
cmsg_ty≥
 = 
SCM_CREDTYPE
;

61 
cmp
->
cmsg_Àn
 = 
CREDSLEN
;

62 
¸edp
 = (
CREDSTRUCT
 *)
	`CMSG_DATA
(
cmp
);

63 #i‡
	`deföed
(
SCM_CREDENTIALS
)

64 
¸edp
->
uid
 = 
	`gëeuid
();

65 
¸edp
->
gid
 = 
	`gëegid
();

66 
¸edp
->
pid
 = 
	`gëpid
();

68 
buf
[1] = 0;

70 
buf
[0] = 0;

71 i‡(
	`£ndmsg
(
fd
, &
msg
, 0) != 2)

74 
	}
}

	@sockets/servaccept.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<time.h
>

5 
	~<î∫o.h
>

7 
	#STALE
 30

	)

16 
	$£rv_ac˚±
(
li°ífd
, 
uid_t
 *
uid±r
)

18 
˛ifd
, 
Àn
, 
îr
, 
rvÆ
;

19 
time_t
 
°Æëime
;

20 
sockaddr_un
 
un
;

21 
°©
 
°©buf
;

23 
Àn
 = (
un
);

24 i‡((
˛ifd
 = 
	`ac˚±
(
li°ífd
, (
sockaddr
 *)&
un
, &
Àn
)) < 0)

28 
Àn
 -
	`off£tof
(
sockaddr_un
, 
sun_∑th
);

29 
un
.
sun_∑th
[
Àn
] = 0;

31 i‡(
	`°©
(
un
.
sun_∑th
, &
°©buf
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

35 #ifdef 
S_ISSOCK


36 i‡(
	`S_ISSOCK
(
°©buf
.
°_mode
) == 0) {

37 
rvÆ
 = -3;

38 
îrout
;

41 i‡((
°©buf
.
°_mode
 & (
S_IRWXG
 | 
S_IRWXO
)) ||

42 (
°©buf
.
°_mode
 & 
S_IRWXU
) != S_IRWXU) {

43 
rvÆ
 = -4;

44 
îrout
;

47 
°Æëime
 = 
	`time
(
NULL
Ë- 
STALE
;

48 i‡(
°©buf
.
°_©ime
 < 
°Æëime
 ||

49 
°©buf
.
°_˘ime
 < 
°Æëime
 ||

50 
°©buf
.
°_mtime
 < 
°Æëime
) {

51 
rvÆ
 = -5;

52 
îrout
;

55 i‡(
uid±r
 !
NULL
)

56 *
uid±r
 = 
°©buf
.
°_uid
;

57 
	`u∆ök
(
un
.
sun_∑th
);

58 (
˛ifd
);

60 
îrout
:

61 
îr
 = 
î∫o
;

62 
	`˛o£
(
˛ifd
);

63 
î∫o
 = 
îr
;

64 (
rvÆ
);

65 
	}
}

	@sockets/servlisten.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

3 
	~<sys/un.h
>

4 
	~<î∫o.h
>

6 
	#QLEN
 10

	)

13 
	$£rv_li°í
(c⁄° *
«me
)

15 
fd
, 
Àn
, 
îr
, 
rvÆ
;

16 
sockaddr_un
 
un
;

19 i‡((
fd
 = 
	`sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0)) < 0)

22 
	`u∆ök
(
«me
);

25 
	`mem£t
(&
un
, 0, (un));

26 
un
.
sun_Ámûy
 = 
AF_UNIX
;

27 
	`°r˝y
(
un
.
sun_∑th
, 
«me
);

28 
Àn
 = 
	`off£tof
(
sockaddr_un
, 
sun_∑th
Ë+ 
	`°æí
(
«me
);

31 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
un
, 
Àn
) < 0) {

32 
rvÆ
 = -2;

33 
îrout
;

36 i‡(
	`li°í
(
fd
, 
QLEN
) < 0) {

37 
rvÆ
 = -3;

38 
îrout
;

40 (
fd
);

42 
îrout
:

43 
îr
 = 
î∫o
;

44 
	`˛o£
(
fd
);

45 
î∫o
 = 
îr
;

46 (
rvÆ
);

47 
	}
}

	@sockets/spipe.c

1 
	~"≠ue.h
"

2 
	~<sys/sockë.h
>

9 
	$s_pùe
(
fd
[2])

11 (
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
fd
));

12 
	}
}

	@std/conf.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

5 
¥_sysc⁄f
(*, );

6 
¥_∑thc⁄f
(*, *, );

9 
	$maö
(
¨gc
, *
¨gv
[])

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage:á.out <dirname>");

14 #ifde‡
ARG_MAX


15 
	`¥ötf
("ARG_MAX deföedÅÿbê%d\n", 
ARG_MAX
+0);

17 
	`¥ötf
("no symbol for ARG_MAX\n");

19 #ifde‡
_SC_ARG_MAX


20 
	`¥_sysc⁄f
("ARG_MAX =", 
_SC_ARG_MAX
);

22 
	`¥ötf
("no symbol for _SC_ARG_MAX\n");

24 #ifde‡
ATEXIT_MAX


25 
	`¥ötf
("ATEXIT_MAX deföedÅÿbê%d\n", 
ATEXIT_MAX
+0);

27 
	`¥ötf
("no symbol for ATEXIT_MAX\n");

29 #ifde‡
_SC_ATEXIT_MAX


30 
	`¥_sysc⁄f
("ATEXIT_MAX =", 
_SC_ATEXIT_MAX
);

32 
	`¥ötf
("no symbol for _SC_ATEXIT_MAX\n");

34 #ifde‡
CHARCLASS_NAME_MAX


35 
	`¥ötf
("CHARCLASS_NAME_MAX deföedÅÿbê%d\n", 
CHARCLASS_NAME_MAX
+0);

37 
	`¥ötf
("no symbol for CHARCLASS_NAME_MAX\n");

39 #ifde‡
_SC_CHARCLASS_NAME_MAX


40 
	`¥_sysc⁄f
("CHARCLASS_NAME_MAX =", 
_SC_CHARCLASS_NAME_MAX
);

42 
	`¥ötf
("no symbol for _SC_CHARCLASS_NAME_MAX\n");

44 #ifde‡
CHILD_MAX


45 
	`¥ötf
("CHILD_MAX deföedÅÿbê%d\n", 
CHILD_MAX
+0);

47 
	`¥ötf
("no symbol for CHILD_MAX\n");

49 #ifde‡
_SC_CHILD_MAX


50 
	`¥_sysc⁄f
("CHILD_MAX =", 
_SC_CHILD_MAX
);

52 
	`¥ötf
("no symbol for _SC_CHILD_MAX\n");

54 #ifde‡
CLOCKTICKSPERSECOND


55 
	`¥ötf
("CLOCKTICKSPERSECOND /*˛ockÅicks/£c⁄d*/ deföedÅÿbê%d\n", 
CLOCKTICKSPERSECOND
 +0);

57 
	`¥ötf
("no symbol for CLOCKTICKSPERSECOND /*clockÅicks/second*/\n");

59 #ifde‡
_SC_CLK_TCK


60 
	`¥_sysc⁄f
("CLOCKTICKSPERSECOND /*˛ockÅicks/£c⁄d*/ =", 
_SC_CLK_TCK
);

62 
	`¥ötf
("no symbol for _SC_CLK_TCK\n");

64 #ifde‡
COLL_WEIGHTS_MAX


65 
	`¥ötf
("COLL_WEIGHTS_MAX deföedÅÿbê%d\n", 
COLL_WEIGHTS_MAX
+0);

67 
	`¥ötf
("no symbol for COLL_WEIGHTS_MAX\n");

69 #ifde‡
_SC_COLL_WEIGHTS_MAX


70 
	`¥_sysc⁄f
("COLL_WEIGHTS_MAX =", 
_SC_COLL_WEIGHTS_MAX
);

72 
	`¥ötf
("no symbol for _SC_COLL_WEIGHTS_MAX\n");

74 #ifde‡
HOST_NAME_MAX


75 
	`¥ötf
("HOST_NAME_MAX deföedÅÿbê%d\n", 
HOST_NAME_MAX
+0);

77 
	`¥ötf
("no symbol for HOST_NAME_MAX\n");

79 #ifde‡
_SC_HOST_NAME_MAX


80 
	`¥_sysc⁄f
("HOST_NAME_MAX =", 
_SC_HOST_NAME_MAX
);

82 
	`¥ötf
("no symbol for _SC_HOST_NAME_MAX\n");

84 #ifde‡
IOV_MAX


85 
	`¥ötf
("IOV_MAX deföedÅÿbê%d\n", 
IOV_MAX
+0);

87 
	`¥ötf
("no symbol for IOV_MAX\n");

89 #ifde‡
_SC_IOV_MAX


90 
	`¥_sysc⁄f
("IOV_MAX =", 
_SC_IOV_MAX
);

92 
	`¥ötf
("no symbol for _SC_IOV_MAX\n");

94 #ifde‡
LINE_MAX


95 
	`¥ötf
("LINE_MAX deföedÅÿbê%d\n", 
LINE_MAX
+0);

97 
	`¥ötf
("no symbol for LINE_MAX\n");

99 #ifde‡
_SC_LINE_MAX


100 
	`¥_sysc⁄f
("LINE_MAX =", 
_SC_LINE_MAX
);

102 
	`¥ötf
("no symbol for _SC_LINE_MAX\n");

104 #ifde‡
LOGIN_NAME_MAX


105 
	`¥ötf
("LOGIN_NAME_MAX deföedÅÿbê%d\n", 
LOGIN_NAME_MAX
+0);

107 
	`¥ötf
("no symbol for LOGIN_NAME_MAX\n");

109 #ifde‡
_SC_LOGIN_NAME_MAX


110 
	`¥_sysc⁄f
("LOGIN_NAME_MAX =", 
_SC_LOGIN_NAME_MAX
);

112 
	`¥ötf
("no symbol for _SC_LOGIN_NAME_MAX\n");

114 #ifde‡
NGROUPS_MAX


115 
	`¥ötf
("NGROUPS_MAX deföedÅÿbê%d\n", 
NGROUPS_MAX
+0);

117 
	`¥ötf
("no symbol for NGROUPS_MAX\n");

119 #ifde‡
_SC_NGROUPS_MAX


120 
	`¥_sysc⁄f
("NGROUPS_MAX =", 
_SC_NGROUPS_MAX
);

122 
	`¥ötf
("no symbol for _SC_NGROUPS_MAX\n");

124 #ifde‡
OPEN_MAX


125 
	`¥ötf
("OPEN_MAX deföedÅÿbê%d\n", 
OPEN_MAX
+0);

127 
	`¥ötf
("no symbol for OPEN_MAX\n");

129 #ifde‡
_SC_OPEN_MAX


130 
	`¥_sysc⁄f
("OPEN_MAX =", 
_SC_OPEN_MAX
);

132 
	`¥ötf
("no symbol for _SC_OPEN_MAX\n");

134 #ifde‡
PAGESIZE


135 
	`¥ötf
("PAGESIZE deföedÅÿbê%d\n", 
PAGESIZE
+0);

137 
	`¥ötf
("no symbol for PAGESIZE\n");

139 #ifde‡
_SC_PAGESIZE


140 
	`¥_sysc⁄f
("PAGESIZE =", 
_SC_PAGESIZE
);

142 
	`¥ötf
("no symbol for _SC_PAGESIZE\n");

144 #ifde‡
PAGE_SIZE


145 
	`¥ötf
("PAGE_SIZE deföedÅÿbê%d\n", 
PAGE_SIZE
+0);

147 
	`¥ötf
("no symbol for PAGE_SIZE\n");

149 #ifde‡
_SC_PAGE_SIZE


150 
	`¥_sysc⁄f
("PAGE_SIZE =", 
_SC_PAGE_SIZE
);

152 
	`¥ötf
("no symbol for _SC_PAGE_SIZE\n");

154 #ifde‡
RE_DUP_MAX


155 
	`¥ötf
("RE_DUP_MAX deföedÅÿbê%d\n", 
RE_DUP_MAX
+0);

157 
	`¥ötf
("no symbol for RE_DUP_MAX\n");

159 #ifde‡
_SC_RE_DUP_MAX


160 
	`¥_sysc⁄f
("RE_DUP_MAX =", 
_SC_RE_DUP_MAX
);

162 
	`¥ötf
("no symbol for _SC_RE_DUP_MAX\n");

164 #ifde‡
STREAM_MAX


165 
	`¥ötf
("STREAM_MAX deföedÅÿbê%d\n", 
STREAM_MAX
+0);

167 
	`¥ötf
("no symbol for STREAM_MAX\n");

169 #ifde‡
_SC_STREAM_MAX


170 
	`¥_sysc⁄f
("STREAM_MAX =", 
_SC_STREAM_MAX
);

172 
	`¥ötf
("no symbol for _SC_STREAM_MAX\n");

174 #ifde‡
SYMLOOP_MAX


175 
	`¥ötf
("SYMLOOP_MAX deföedÅÿbê%d\n", 
SYMLOOP_MAX
+0);

177 
	`¥ötf
("no symbol for SYMLOOP_MAX\n");

179 #ifde‡
_SC_SYMLOOP_MAX


180 
	`¥_sysc⁄f
("SYMLOOP_MAX =", 
_SC_SYMLOOP_MAX
);

182 
	`¥ötf
("no symbol for _SC_SYMLOOP_MAX\n");

184 #ifde‡
TTY_NAME_MAX


185 
	`¥ötf
("TTY_NAME_MAX deföedÅÿbê%d\n", 
TTY_NAME_MAX
+0);

187 
	`¥ötf
("no symbol for TTY_NAME_MAX\n");

189 #ifde‡
_SC_TTY_NAME_MAX


190 
	`¥_sysc⁄f
("TTY_NAME_MAX =", 
_SC_TTY_NAME_MAX
);

192 
	`¥ötf
("no symbol for _SC_TTY_NAME_MAX\n");

194 #ifde‡
TZNAME_MAX


195 
	`¥ötf
("TZNAME_MAX deföedÅÿbê%d\n", 
TZNAME_MAX
+0);

197 
	`¥ötf
("no symbol for TZNAME_MAX\n");

199 #ifde‡
_SC_TZNAME_MAX


200 
	`¥_sysc⁄f
("TZNAME_MAX =", 
_SC_TZNAME_MAX
);

202 
	`¥ötf
("no symbol for _SC_TZNAME_MAX\n");

204 #ifde‡
MAX_CANON


205 
	`¥ötf
("MAX_CANON deföedÅÿbê%d\n", 
MAX_CANON
+0);

207 
	`¥ötf
("no symbol for MAX_CANON\n");

209 #ifde‡
_PC_MAX_CANON


210 
	`¥_∑thc⁄f
("MAX_CANON =", 
¨gv
[1], 
_PC_MAX_CANON
);

212 
	`¥ötf
("no symbol for _PC_MAX_CANON\n");

214 #ifde‡
MAX_INPUT


215 
	`¥ötf
("MAX_INPUT deföedÅÿbê%d\n", 
MAX_INPUT
+0);

217 
	`¥ötf
("no symbol for MAX_INPUT\n");

219 #ifde‡
_PC_MAX_INPUT


220 
	`¥_∑thc⁄f
("MAX_INPUT =", 
¨gv
[1], 
_PC_MAX_INPUT
);

222 
	`¥ötf
("no symbol for _PC_MAX_INPUT\n");

224 #ifde‡
FILESIZEBITS


225 
	`¥ötf
("FILESIZEBITS deföedÅÿbê%d\n", 
FILESIZEBITS
+0);

227 
	`¥ötf
("no symbol for FILESIZEBITS\n");

229 #ifde‡
_PC_FILESIZEBITS


230 
	`¥_∑thc⁄f
("FILESIZEBITS =", 
¨gv
[1], 
_PC_FILESIZEBITS
);

232 
	`¥ötf
("no symbol for _PC_FILESIZEBITS\n");

234 #ifde‡
LINK_MAX


235 
	`¥ötf
("LINK_MAX deföedÅÿbê%d\n", 
LINK_MAX
+0);

237 
	`¥ötf
("no symbol for LINK_MAX\n");

239 #ifde‡
_PC_LINK_MAX


240 
	`¥_∑thc⁄f
("LINK_MAX =", 
¨gv
[1], 
_PC_LINK_MAX
);

242 
	`¥ötf
("no symbol for _PC_LINK_MAX\n");

244 #ifde‡
NAME_MAX


245 
	`¥ötf
("NAME_MAX deföedÅÿbê%d\n", 
NAME_MAX
+0);

247 
	`¥ötf
("no symbol for NAME_MAX\n");

249 #ifde‡
_PC_NAME_MAX


250 
	`¥_∑thc⁄f
("NAME_MAX =", 
¨gv
[1], 
_PC_NAME_MAX
);

252 
	`¥ötf
("no symbol for _PC_NAME_MAX\n");

254 #ifde‡
PATH_MAX


255 
	`¥ötf
("PATH_MAX deföedÅÿbê%d\n", 
PATH_MAX
+0);

257 
	`¥ötf
("no symbol for PATH_MAX\n");

259 #ifde‡
_PC_PATH_MAX


260 
	`¥_∑thc⁄f
("PATH_MAX =", 
¨gv
[1], 
_PC_PATH_MAX
);

262 
	`¥ötf
("no symbol for _PC_PATH_MAX\n");

264 #ifde‡
PIPE_BUF


265 
	`¥ötf
("PIPE_BUF deföedÅÿbê%d\n", 
PIPE_BUF
+0);

267 
	`¥ötf
("no symbol for PIPE_BUF\n");

269 #ifde‡
_PC_PIPE_BUF


270 
	`¥_∑thc⁄f
("PIPE_BUF =", 
¨gv
[1], 
_PC_PIPE_BUF
);

272 
	`¥ötf
("no symbol for _PC_PIPE_BUF\n");

274 #ifde‡
SYMLINK_MAX


275 
	`¥ötf
("SYMLINK_MAX deföedÅÿbê%d\n", 
SYMLINK_MAX
+0);

277 
	`¥ötf
("no symbol for SYMLINK_MAX\n");

279 #ifde‡
_PC_SYMLINK_MAX


280 
	`¥_∑thc⁄f
("SYMLINK_MAX =", 
¨gv
[1], 
_PC_SYMLINK_MAX
);

282 
	`¥ötf
("no symbol for _PC_SYMLINK_MAX\n");

284 
	`exô
(0);

285 
	}
}

288 
	$¥_sysc⁄f
(*
mesg
, 
«me
)

290 
vÆ
;

292 
	`Âuts
(
mesg
, 
°dout
);

293 
î∫o
 = 0;

294 i‡((
vÆ
 = 
	`sysc⁄f
(
«me
)) < 0) {

295 i‡(
î∫o
 != 0) {

296 i‡(
î∫o
 =
EINVAL
)

297 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

299 
	`îr_sys
("sysconfÉrror");

301 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

304 
	`¥ötf
(" %ld\n", 
vÆ
);

306 
	}
}

309 
	$¥_∑thc⁄f
(*
mesg
, *
∑th
, 
«me
)

311 
vÆ
;

313 
	`Âuts
(
mesg
, 
°dout
);

314 
î∫o
 = 0;

315 i‡((
vÆ
 = 
	`∑thc⁄f
(
∑th
, 
«me
)) < 0) {

316 i‡(
î∫o
 != 0) {

317 i‡(
î∫o
 =
EINVAL
)

318 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

320 
	`îr_sys
("∑thc⁄‡îr‹,Ö©h = %s", 
∑th
);

322 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

325 
	`¥ötf
(" %ld\n", 
vÆ
);

327 
	}
}

	@std/options.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

4 
¥_sysc⁄f
(*, );

5 
¥_∑thc⁄f
(*, *, );

8 
	$maö
(
¨gc
, *
¨gv
[])

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out <dirname>");

13 #ifde‡
_POSIX_ADVISORY_INFO


14 
	`¥ötf
("_POSIX_ADVISORY_INFO i†deföed (vÆ i†%d)\n", 
_POSIX_ADVISORY_INFO
+0);

16 
	`¥ötf
("_POSIX_ADVISORY_INFO is undefined\n");

18 #ifde‡
_SC_ADVISORY_INFO


19 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_ADVISORY_INFO =", 
_SC_ADVISORY_INFO
);

21 
	`¥ötf
("no symbol for _POSIX_ADVISORY_INFO\n");

23 
	`¥ötf
("\n");

24 #ifde‡
_POSIX_ASYNCHRONOUS_IO


25 
	`¥ötf
("_POSIX_ASYNCHRONOUS_IO i†deföed (vÆ i†%d)\n", 
_POSIX_ASYNCHRONOUS_IO
+0);

27 
	`¥ötf
("_POSIX_ASYNCHRONOUS_IO is undefined\n");

29 #ifde‡
_SC_ASYNCHRONOUS_IO


30 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_ASYNCHRONOUS_IO =", 
_SC_ASYNCHRONOUS_IO
);

32 
	`¥ötf
("no symbol for _POSIX_ASYNCHRONOUS_IO\n");

34 
	`¥ötf
("\n");

35 #ifde‡
_POSIX_BARRIERS


36 
	`¥ötf
("_POSIX_BARRIERS i†deföed (vÆ i†%d)\n", 
_POSIX_BARRIERS
+0);

38 
	`¥ötf
("_POSIX_BARRIERS is undefined\n");

40 #ifde‡
_SC_BARRIERS


41 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_BARRIERS =", 
_SC_BARRIERS
);

43 
	`¥ötf
("no symbol for _POSIX_BARRIERS\n");

45 
	`¥ötf
("\n");

46 #ifde‡
_POSIX_CPUTIME


47 
	`¥ötf
("_POSIX_CPUTIME i†deföed (vÆ i†%d)\n", 
_POSIX_CPUTIME
+0);

49 
	`¥ötf
("_POSIX_CPUTIME is undefined\n");

51 #ifde‡
_SC_CPUTIME


52 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_CPUTIME =", 
_SC_CPUTIME
);

54 
	`¥ötf
("no symbol for _POSIX_CPUTIME\n");

56 
	`¥ötf
("\n");

57 #ifde‡
_POSIX_CLOCK_SELECTION


58 
	`¥ötf
("_POSIX_CLOCK_SELECTION i†deföed (vÆ i†%d)\n", 
_POSIX_CLOCK_SELECTION
+0);

60 
	`¥ötf
("_POSIX_CLOCK_SELECTION is undefined\n");

62 #ifde‡
_SC_CLOCK_SELECTION


63 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_CLOCK_SELECTION =", 
_SC_CLOCK_SELECTION
);

65 
	`¥ötf
("no symbol for _POSIX_CLOCK_SELECTION\n");

67 
	`¥ötf
("\n");

68 #ifde‡
_POSIX_FSYNC


69 
	`¥ötf
("_POSIX_FSYNC i†deföed (vÆ i†%d)\n", 
_POSIX_FSYNC
+0);

71 
	`¥ötf
("_POSIX_FSYNC is undefined\n");

73 #ifde‡
_SC_FSYNC


74 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_FSYNC =", 
_SC_FSYNC
);

76 
	`¥ötf
("no symbol for _POSIX_FSYNC\n");

78 
	`¥ötf
("\n");

79 #ifde‡
_POSIX_IPV6


80 
	`¥ötf
("_POSIX_IPV6 i†deföed (vÆ i†%d)\n", 
_POSIX_IPV6
+0);

82 
	`¥ötf
("_POSIX_IPV6 is undefined\n");

84 #ifde‡
_SC_IPV6


85 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_IPV6 =", 
_SC_IPV6
);

87 
	`¥ötf
("no symbol for _POSIX_IPV6\n");

89 
	`¥ötf
("\n");

90 #ifde‡
_POSIX_MAPPED_FILES


91 
	`¥ötf
("_POSIX_MAPPED_FILES i†deföed (vÆ i†%d)\n", 
_POSIX_MAPPED_FILES
+0);

93 
	`¥ötf
("_POSIX_MAPPED_FILES is undefined\n");

95 #ifde‡
_SC_MAPPED_FILES


96 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MAPPED_FILES =", 
_SC_MAPPED_FILES
);

98 
	`¥ötf
("no symbol for _POSIX_MAPPED_FILES\n");

100 
	`¥ötf
("\n");

101 #ifde‡
_POSIX_MEMLOCK


102 
	`¥ötf
("_POSIX_MEMLOCK i†deföed (vÆ i†%d)\n", 
_POSIX_MEMLOCK
+0);

104 
	`¥ötf
("_POSIX_MEMLOCK is undefined\n");

106 #ifde‡
_SC_MEMLOCK


107 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MEMLOCK =", 
_SC_MEMLOCK
);

109 
	`¥ötf
("no symbol for _POSIX_MEMLOCK\n");

111 
	`¥ötf
("\n");

112 #ifde‡
_POSIX_MEMLOCK_RANGE


113 
	`¥ötf
("_POSIX_MEMLOCK_RANGE i†deföed (vÆ i†%d)\n", 
_POSIX_MEMLOCK_RANGE
+0);

115 
	`¥ötf
("_POSIX_MEMLOCK_RANGE is undefined\n");

117 #ifde‡
_SC_MEMLOCK_RANGE


118 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MEMLOCK_RANGE =", 
_SC_MEMLOCK_RANGE
);

120 
	`¥ötf
("no symbol for _POSIX_MEMLOCK_RANGE\n");

122 
	`¥ötf
("\n");

123 #ifde‡
_POSIX_MONOTONIC_CLOCK


124 
	`¥ötf
("_POSIX_MONOTONIC_CLOCK i†deföed (vÆ i†%d)\n", 
_POSIX_MONOTONIC_CLOCK
+0);

126 
	`¥ötf
("_POSIX_MONOTONIC_CLOCK is undefined\n");

128 #ifde‡
_SC_MONOTONIC_CLOCK


129 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MONOTONIC_CLOCK =", 
_SC_MONOTONIC_CLOCK
);

131 
	`¥ötf
("no symbol for _POSIX_MONOTONIC_CLOCK\n");

133 
	`¥ötf
("\n");

134 #ifde‡
_POSIX_MEMORY_PROTECTION


135 
	`¥ötf
("_POSIX_MEMORY_PROTECTION i†deföed (vÆ i†%d)\n", 
_POSIX_MEMORY_PROTECTION
+0);

137 
	`¥ötf
("_POSIX_MEMORY_PROTECTION is undefined\n");

139 #ifde‡
_SC_MEMORY_PROTECTION


140 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MEMORY_PROTECTION =", 
_SC_MEMORY_PROTECTION
);

142 
	`¥ötf
("no symbol for _POSIX_MEMORY_PROTECTION\n");

144 
	`¥ötf
("\n");

145 #ifde‡
_POSIX_MESSAGE_PASSING


146 
	`¥ötf
("_POSIX_MESSAGE_PASSING i†deföed (vÆ i†%d)\n", 
_POSIX_MESSAGE_PASSING
+0);

148 
	`¥ötf
("_POSIX_MESSAGE_PASSING is undefined\n");

150 #ifde‡
_SC_MESSAGE_PASSING


151 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_MESSAGE_PASSING =", 
_SC_MESSAGE_PASSING
);

153 
	`¥ötf
("no symbol for _POSIX_MESSAGE_PASSING\n");

155 
	`¥ötf
("\n");

156 #ifde‡
_POSIX_PRIORITIZED_IO


157 
	`¥ötf
("_POSIX_PRIORITIZED_IO i†deföed (vÆ i†%d)\n", 
_POSIX_PRIORITIZED_IO
+0);

159 
	`¥ötf
("_POSIX_PRIORITIZED_IO is undefined\n");

161 #ifde‡
_SC_PRIORITIZED_IO


162 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_PRIORITIZED_IO =", 
_SC_PRIORITIZED_IO
);

164 
	`¥ötf
("no symbol for _POSIX_PRIORITIZED_IO\n");

166 
	`¥ötf
("\n");

167 #ifde‡
_POSIX_PRIORITIZED_SCHEDULING


168 
	`¥ötf
("_POSIX_PRIORITIZED_SCHEDULING i†deföed (vÆ i†%d)\n", 
_POSIX_PRIORITIZED_SCHEDULING
+0);

170 
	`¥ötf
("_POSIX_PRIORITIZED_SCHEDULING is undefined\n");

172 #ifde‡
_SC_PRIORITIZED_SCHEDULING


173 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_PRIORITIZED_SCHEDULING =", 
_SC_PRIORITIZED_SCHEDULING
);

175 
	`¥ötf
("no symbol for _POSIX_PRIORITIZED_SCHEDULING\n");

177 
	`¥ötf
("\n");

178 #ifde‡
_POSIX_RAW_SOCKETS


179 
	`¥ötf
("_POSIX_RAW_SOCKETS i†deföed (vÆ i†%d)\n", 
_POSIX_RAW_SOCKETS
+0);

181 
	`¥ötf
("_POSIX_RAW_SOCKETS is undefined\n");

183 #ifde‡
_SC_RAW_SOCKETS


184 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_RAW_SOCKETS =", 
_SC_RAW_SOCKETS
);

186 
	`¥ötf
("no symbol for _POSIX_RAW_SOCKETS\n");

188 
	`¥ötf
("\n");

189 #ifde‡
_POSIX_REALTIME_SIGNALS


190 
	`¥ötf
("_POSIX_REALTIME_SIGNALS i†deföed (vÆ i†%d)\n", 
_POSIX_REALTIME_SIGNALS
+0);

192 
	`¥ötf
("_POSIX_REALTIME_SIGNALS is undefined\n");

194 #ifde‡
_SC_REALTIME_SIGNALS


195 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_REALTIME_SIGNALS =", 
_SC_REALTIME_SIGNALS
);

197 
	`¥ötf
("no symbol for _POSIX_REALTIME_SIGNALS\n");

199 
	`¥ötf
("\n");

200 #ifde‡
_POSIX_SEMAPHORES


201 
	`¥ötf
("_POSIX_SEMAPHORES i†deföed (vÆ i†%d)\n", 
_POSIX_SEMAPHORES
+0);

203 
	`¥ötf
("_POSIX_SEMAPHORES is undefined\n");

205 #ifde‡
_SC_SEMAPHORES


206 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SEMAPHORES =", 
_SC_SEMAPHORES
);

208 
	`¥ötf
("no symbol for _POSIX_SEMAPHORES\n");

210 
	`¥ötf
("\n");

211 #ifde‡
_POSIX_SHARED_MEMORY_OBJECTS


212 
	`¥ötf
("_POSIX_SHARED_MEMORY_OBJECTS i†deföed (vÆ i†%d)\n", 
_POSIX_SHARED_MEMORY_OBJECTS
+0);

214 
	`¥ötf
("_POSIX_SHARED_MEMORY_OBJECTS is undefined\n");

216 #ifde‡
_SC_SHARED_MEMORY_OBJECTS


217 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SHARED_MEMORY_OBJECTS =", 
_SC_SHARED_MEMORY_OBJECTS
);

219 
	`¥ötf
("no symbol for _POSIX_SHARED_MEMORY_OBJECTS\n");

221 
	`¥ötf
("\n");

222 #ifde‡
_POSIX_SYNCHRONIZED_IO


223 
	`¥ötf
("_POSIX_SYNCHRONIZED_IO i†deföed (vÆ i†%d)\n", 
_POSIX_SYNCHRONIZED_IO
+0);

225 
	`¥ötf
("_POSIX_SYNCHRONIZED_IO is undefined\n");

227 #ifde‡
_SC_SYNCHRONIZED_IO


228 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SYNCHRONIZED_IO =", 
_SC_SYNCHRONIZED_IO
);

230 
	`¥ötf
("no symbol for _POSIX_SYNCHRONIZED_IO\n");

232 
	`¥ötf
("\n");

233 #ifde‡
_POSIX_SPIN_LOCKS


234 
	`¥ötf
("_POSIX_SPIN_LOCKS i†deföed (vÆ i†%d)\n", 
_POSIX_SPIN_LOCKS
+0);

236 
	`¥ötf
("_POSIX_SPIN_LOCKS is undefined\n");

238 #ifde‡
_SC_SPIN_LOCKS


239 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SPIN_LOCKS =", 
_SC_SPIN_LOCKS
);

241 
	`¥ötf
("no symbol for _POSIX_SPIN_LOCKS\n");

243 
	`¥ötf
("\n");

244 #ifde‡
_POSIX_SPAWN


245 
	`¥ötf
("_POSIX_SPAWN i†deföed (vÆ i†%d)\n", 
_POSIX_SPAWN
+0);

247 
	`¥ötf
("_POSIX_SPAWN is undefined\n");

249 #ifde‡
_SC_SPAWN


250 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SPAWN =", 
_SC_SPAWN
);

252 
	`¥ötf
("no symbol for _POSIX_SPAWN\n");

254 
	`¥ötf
("\n");

255 #ifde‡
_POSIX_SPORADIC_SERVER


256 
	`¥ötf
("_POSIX_SPORADIC_SERVER i†deföed (vÆ i†%d)\n", 
_POSIX_SPORADIC_SERVER
+0);

258 
	`¥ötf
("_POSIX_SPORADIC_SERVER is undefined\n");

260 #ifde‡
_SC_SPORADIC_SERVER


261 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SPORADIC_SERVER =", 
_SC_SPORADIC_SERVER
);

263 
	`¥ötf
("no symbol for _POSIX_SPORADIC_SERVER\n");

265 
	`¥ötf
("\n");

266 #ifde‡
_POSIX_THREAD_CPUTIME


267 
	`¥ötf
("_POSIX_THREAD_CPUTIME i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_CPUTIME
+0);

269 
	`¥ötf
("_POSIX_THREAD_CPUTIME is undefined\n");

271 #ifde‡
_SC_THREAD_CPUTIME


272 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_CPUTIME =", 
_SC_THREAD_CPUTIME
);

274 
	`¥ötf
("no symbol for _POSIX_THREAD_CPUTIME\n");

276 
	`¥ötf
("\n");

277 #ifde‡
_POSIX_TRACE_EVENT_FILTER


278 
	`¥ötf
("_POSIX_TRACE_EVENT_FILTER i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE_EVENT_FILTER
+0);

280 
	`¥ötf
("_POSIX_TRACE_EVENT_FILTER is undefined\n");

282 #ifde‡
_SC_TRACE_EVENT_FILTER


283 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE_EVENT_FILTER =", 
_SC_TRACE_EVENT_FILTER
);

285 
	`¥ötf
("no symbol for _POSIX_TRACE_EVENT_FILTER\n");

287 
	`¥ötf
("\n");

288 #ifde‡
_POSIX_THREADS


289 
	`¥ötf
("_POSIX_THREADS i†deföed (vÆ i†%d)\n", 
_POSIX_THREADS
+0);

291 
	`¥ötf
("_POSIX_THREADS is undefined\n");

293 #ifde‡
_SC_THREADS


294 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREADS =", 
_SC_THREADS
);

296 
	`¥ötf
("no symbol for _POSIX_THREADS\n");

298 
	`¥ötf
("\n");

299 #ifde‡
_POSIX_TIMEOUTS


300 
	`¥ötf
("_POSIX_TIMEOUTS i†deföed (vÆ i†%d)\n", 
_POSIX_TIMEOUTS
+0);

302 
	`¥ötf
("_POSIX_TIMEOUTS is undefined\n");

304 #ifde‡
_SC_TIMEOUTS


305 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TIMEOUTS =", 
_SC_TIMEOUTS
);

307 
	`¥ötf
("no symbol for _POSIX_TIMEOUTS\n");

309 
	`¥ötf
("\n");

310 #ifde‡
_POSIX_TIMERS


311 
	`¥ötf
("_POSIX_TIMERS i†deföed (vÆ i†%d)\n", 
_POSIX_TIMERS
+0);

313 
	`¥ötf
("_POSIX_TIMERS is undefined\n");

315 #ifde‡
_SC_TIMERS


316 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TIMERS =", 
_SC_TIMERS
);

318 
	`¥ötf
("no symbol for _POSIX_TIMERS\n");

320 
	`¥ötf
("\n");

321 #ifde‡
_POSIX_THREAD_PRIO_INHERIT


322 
	`¥ötf
("_POSIX_THREAD_PRIO_INHERIT i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PRIO_INHERIT
+0);

324 
	`¥ötf
("_POSIX_THREAD_PRIO_INHERIT is undefined\n");

326 #ifde‡
_SC_THREAD_PRIO_INHERIT


327 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PRIO_INHERIT =", 
_SC_THREAD_PRIO_INHERIT
);

329 
	`¥ötf
("no symbol for _POSIX_THREAD_PRIO_INHERIT\n");

331 
	`¥ötf
("\n");

332 #ifde‡
_POSIX_THREAD_PRIO_PROTECT


333 
	`¥ötf
("_POSIX_THREAD_PRIO_PROTECT i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PRIO_PROTECT
+0);

335 
	`¥ötf
("_POSIX_THREAD_PRIO_PROTECT is undefined\n");

337 #ifde‡
_SC_THREAD_PRIO_PROTECT


338 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PRIO_PROTECT =", 
_SC_THREAD_PRIO_PROTECT
);

340 
	`¥ötf
("no symbol for _POSIX_THREAD_PRIO_PROTECT\n");

342 
	`¥ötf
("\n");

343 #ifde‡
_POSIX_THREAD_PRIORITY_SCHEDULING


344 
	`¥ötf
("_POSIX_THREAD_PRIORITY_SCHEDULING i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PRIORITY_SCHEDULING
+0);

346 
	`¥ötf
("_POSIX_THREAD_PRIORITY_SCHEDULING is undefined\n");

348 #ifde‡
_SC_THREAD_PRIORITY_SCHEDULING


349 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PRIORITY_SCHEDULING =", 
_SC_THREAD_PRIORITY_SCHEDULING
);

351 
	`¥ötf
("no symbol for _POSIX_THREAD_PRIORITY_SCHEDULING\n");

353 
	`¥ötf
("\n");

354 #ifde‡
_POSIX_TRACE


355 
	`¥ötf
("_POSIX_TRACE i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE
+0);

357 
	`¥ötf
("_POSIX_TRACE is undefined\n");

359 #ifde‡
_SC_TRACE


360 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE =", 
_SC_TRACE
);

362 
	`¥ötf
("no symbol for _POSIX_TRACE\n");

364 
	`¥ötf
("\n");

365 #ifde‡
_POSIX_TRACE_INHERIT


366 
	`¥ötf
("_POSIX_TRACE_INHERIT i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE_INHERIT
+0);

368 
	`¥ötf
("_POSIX_TRACE_INHERIT is undefined\n");

370 #ifde‡
_SC_TRACE_INHERIT


371 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE_INHERIT =", 
_SC_TRACE_INHERIT
);

373 
	`¥ötf
("no symbol for _POSIX_TRACE_INHERIT\n");

375 
	`¥ötf
("\n");

376 #ifde‡
_POSIX_TRACE_LOG


377 
	`¥ötf
("_POSIX_TRACE_LOG i†deföed (vÆ i†%d)\n", 
_POSIX_TRACE_LOG
+0);

379 
	`¥ötf
("_POSIX_TRACE_LOG is undefined\n");

381 #ifde‡
_SC_TRACE_LOG


382 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TRACE_LOG =", 
_SC_TRACE_LOG
);

384 
	`¥ötf
("no symbol for _POSIX_TRACE_LOG\n");

386 
	`¥ötf
("\n");

387 #ifde‡
_POSIX_THREAD_ATTR_STACKADDR


388 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKADDR i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_ATTR_STACKADDR
+0);

390 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKADDR is undefined\n");

392 #ifde‡
_SC_THREAD_ATTR_STACKADDR


393 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_ATTR_STACKADDR =", 
_SC_THREAD_ATTR_STACKADDR
);

395 
	`¥ötf
("no symbol for _POSIX_THREAD_ATTR_STACKADDR\n");

397 
	`¥ötf
("\n");

398 #ifde‡
_POSIX_THREAD_SAFE_FUNCTIONS


399 
	`¥ötf
("_POSIX_THREAD_SAFE_FUNCTIONS i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_SAFE_FUNCTIONS
+0);

401 
	`¥ötf
("_POSIX_THREAD_SAFE_FUNCTIONS is undefined\n");

403 #ifde‡
_SC_THREAD_SAFE_FUNCTIONS


404 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_SAFE_FUNCTIONS =", 
_SC_THREAD_SAFE_FUNCTIONS
);

406 
	`¥ötf
("no symbol for _POSIX_THREAD_SAFE_FUNCTIONS\n");

408 
	`¥ötf
("\n");

409 #ifde‡
_POSIX_THREAD_PROCESS_SHARED


410 
	`¥ötf
("_POSIX_THREAD_PROCESS_SHARED i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_PROCESS_SHARED
+0);

412 
	`¥ötf
("_POSIX_THREAD_PROCESS_SHARED is undefined\n");

414 #ifde‡
_SC_THREAD_PROCESS_SHARED


415 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_PROCESS_SHARED =", 
_SC_THREAD_PROCESS_SHARED
);

417 
	`¥ötf
("no symbol for _POSIX_THREAD_PROCESS_SHARED\n");

419 
	`¥ötf
("\n");

420 #ifde‡
_POSIX_THREAD_SPORADIC_SERVER


421 
	`¥ötf
("_POSIX_THREAD_SPORADIC_SERVER i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_SPORADIC_SERVER
+0);

423 
	`¥ötf
("_POSIX_THREAD_SPORADIC_SERVER is undefined\n");

425 #ifde‡
_SC_THREAD_SPORADIC_SERVER


426 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_SPORADIC_SERVER =", 
_SC_THREAD_SPORADIC_SERVER
);

428 
	`¥ötf
("no symbol for _POSIX_THREAD_SPORADIC_SERVER\n");

430 
	`¥ötf
("\n");

431 #ifde‡
_POSIX_THREAD_ATTR_STACKSIZE


432 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKSIZE i†deföed (vÆ i†%d)\n", 
_POSIX_THREAD_ATTR_STACKSIZE
+0);

434 
	`¥ötf
("_POSIX_THREAD_ATTR_STACKSIZE is undefined\n");

436 #ifde‡
_SC_THREAD_ATTR_STACKSIZE


437 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_THREAD_ATTR_STACKSIZE =", 
_SC_THREAD_ATTR_STACKSIZE
);

439 
	`¥ötf
("no symbol for _POSIX_THREAD_ATTR_STACKSIZE\n");

441 
	`¥ötf
("\n");

442 #ifde‡
_POSIX_TYPED_MEMORY_OBJECTS


443 
	`¥ötf
("_POSIX_TYPED_MEMORY_OBJECTS i†deföed (vÆ i†%d)\n", 
_POSIX_TYPED_MEMORY_OBJECTS
+0);

445 
	`¥ötf
("_POSIX_TYPED_MEMORY_OBJECTS is undefined\n");

447 #ifde‡
_SC_TYPED_MEMORY_OBJECTS


448 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_TYPED_MEMORY_OBJECTS =", 
_SC_TYPED_MEMORY_OBJECTS
);

450 
	`¥ötf
("no symbol for _POSIX_TYPED_MEMORY_OBJECTS\n");

452 
	`¥ötf
("\n");

453 #ifde‡
_XOPEN_UNIX


454 
	`¥ötf
("_XOPEN_UNIX i†deföed (vÆ i†%d)\n", 
_XOPEN_UNIX
+0);

456 
	`¥ötf
("_XOPEN_UNIX is undefined\n");

458 #ifde‡
_SC_XOPEN_UNIX


459 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_UNIX =", 
_SC_XOPEN_UNIX
);

461 
	`¥ötf
("no symbol for _XOPEN_UNIX\n");

463 
	`¥ötf
("\n");

464 #ifde‡
_XOPEN_STREAMS


465 
	`¥ötf
("_XOPEN_STREAMS i†deföed (vÆ i†%d)\n", 
_XOPEN_STREAMS
+0);

467 
	`¥ötf
("_XOPEN_STREAMS is undefined\n");

469 #ifde‡
_SC_XOPEN_STREAMS


470 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_STREAMS =", 
_SC_XOPEN_STREAMS
);

472 
	`¥ötf
("no symbol for _XOPEN_STREAMS\n");

474 
	`¥ötf
("\n");

475 #ifde‡
_XOPEN_CRYPT


476 
	`¥ötf
("_XOPEN_CRYPT i†deföed (vÆ i†%d)\n", 
_XOPEN_CRYPT
+0);

478 
	`¥ötf
("_XOPEN_CRYPT is undefined\n");

480 #ifde‡
_SC_XOPEN_CRYPT


481 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_CRYPT =", 
_SC_XOPEN_CRYPT
);

483 
	`¥ötf
("no symbol for _XOPEN_CRYPT\n");

485 
	`¥ötf
("\n");

486 #ifde‡
_XOPEN_LEGACY


487 
	`¥ötf
("_XOPEN_LEGACY i†deföed (vÆ i†%d)\n", 
_XOPEN_LEGACY
+0);

489 
	`¥ötf
("_XOPEN_LEGACY is undefined\n");

491 #ifde‡
_SC_XOPEN_LEGACY


492 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_LEGACY =", 
_SC_XOPEN_LEGACY
);

494 
	`¥ötf
("no symbol for _XOPEN_LEGACY\n");

496 
	`¥ötf
("\n");

497 #ifde‡
_XOPEN_REALTIME


498 
	`¥ötf
("_XOPEN_REALTIME i†deföed (vÆ i†%d)\n", 
_XOPEN_REALTIME
+0);

500 
	`¥ötf
("_XOPEN_REALTIME is undefined\n");

502 #ifde‡
_SC_XOPEN_REALTIME


503 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_REALTIME =", 
_SC_XOPEN_REALTIME
);

505 
	`¥ötf
("no symbol for _XOPEN_REALTIME\n");

507 
	`¥ötf
("\n");

508 #ifde‡
_XOPEN_REALTIME_THREADS


509 
	`¥ötf
("_XOPEN_REALTIME_THREADS i†deföed (vÆ i†%d)\n", 
_XOPEN_REALTIME_THREADS
+0);

511 
	`¥ötf
("_XOPEN_REALTIME_THREADS is undefined\n");

513 #ifde‡
_SC_XOPEN_REALTIME_THREADS


514 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_REALTIME_THREADS =", 
_SC_XOPEN_REALTIME_THREADS
);

516 
	`¥ötf
("no symbol for _XOPEN_REALTIME_THREADS\n");

518 
	`¥ötf
("\n");

519 #ifde‡
_POSIX_JOB_CONTROL


520 
	`¥ötf
("_POSIX_JOB_CONTROL i†deföed (vÆ i†%d)\n", 
_POSIX_JOB_CONTROL
+0);

522 
	`¥ötf
("_POSIX_JOB_CONTROL is undefined\n");

524 #ifde‡
_SC_JOB_CONTROL


525 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_JOB_CONTROL =", 
_SC_JOB_CONTROL
);

527 
	`¥ötf
("no symbol for _POSIX_JOB_CONTROL\n");

529 
	`¥ötf
("\n");

530 #ifde‡
_POSIX_READER_WRITER_LOCKS


531 
	`¥ötf
("_POSIX_READER_WRITER_LOCKS i†deföed (vÆ i†%d)\n", 
_POSIX_READER_WRITER_LOCKS
+0);

533 
	`¥ötf
("_POSIX_READER_WRITER_LOCKS is undefined\n");

535 #ifde‡
_SC_READER_WRITER_LOCKS


536 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_READER_WRITER_LOCKS =", 
_SC_READER_WRITER_LOCKS
);

538 
	`¥ötf
("no symbol for _POSIX_READER_WRITER_LOCKS\n");

540 
	`¥ötf
("\n");

541 #ifde‡
_POSIX_REGEXP


542 
	`¥ötf
("_POSIX_REGEXP i†deföed (vÆ i†%d)\n", 
_POSIX_REGEXP
+0);

544 
	`¥ötf
("_POSIX_REGEXP is undefined\n");

546 #ifde‡
_SC_REGEXP


547 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_REGEXP =", 
_SC_REGEXP
);

549 
	`¥ötf
("no symbol for _POSIX_REGEXP\n");

551 
	`¥ötf
("\n");

552 #ifde‡
_POSIX_SAVED_IDS


553 
	`¥ötf
("_POSIX_SAVED_IDS i†deföed (vÆ i†%d)\n", 
_POSIX_SAVED_IDS
+0);

555 
	`¥ötf
("_POSIX_SAVED_IDS is undefined\n");

557 #ifde‡
_SC_SAVED_IDS


558 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SAVED_IDS =", 
_SC_SAVED_IDS
);

560 
	`¥ötf
("no symbol for _POSIX_SAVED_IDS\n");

562 
	`¥ötf
("\n");

563 #ifde‡
_POSIX_SHELL


564 
	`¥ötf
("_POSIX_SHELL i†deföed (vÆ i†%d)\n", 
_POSIX_SHELL
+0);

566 
	`¥ötf
("_POSIX_SHELL is undefined\n");

568 #ifde‡
_SC_SHELL


569 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_SHELL =", 
_SC_SHELL
);

571 
	`¥ötf
("no symbol for _POSIX_SHELL\n");

573 
	`¥ötf
("\n");

574 #ifde‡
_XOPEN_ENH_I18N


575 
	`¥ötf
("_XOPEN_ENH_I18N i†deföed (vÆ i†%d)\n", 
_XOPEN_ENH_I18N
+0);

577 
	`¥ötf
("_XOPEN_ENH_I18N is undefined\n");

579 #ifde‡
_SC_XOPEN_ENH_I18N


580 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_ENH_I18N =", 
_SC_XOPEN_ENH_I18N
);

582 
	`¥ötf
("no symbol for _XOPEN_ENH_I18N\n");

584 
	`¥ötf
("\n");

585 #ifde‡
_XOPEN_SHM


586 
	`¥ötf
("_XOPEN_SHM i†deföed (vÆ i†%d)\n", 
_XOPEN_SHM
+0);

588 
	`¥ötf
("_XOPEN_SHM is undefined\n");

590 #ifde‡
_SC_XOPEN_SHM


591 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_SHM =", 
_SC_XOPEN_SHM
);

593 
	`¥ötf
("no symbol for _XOPEN_SHM\n");

595 
	`¥ötf
("\n");

596 #ifde‡
_POSIX_VERSION


597 
	`¥ötf
("_POSIX_VERSION i†deföed (vÆ i†%d)\n", 
_POSIX_VERSION
+0);

599 
	`¥ötf
("_POSIX_VERSION is undefined\n");

601 #ifde‡
_SC_VERSION


602 
	`¥_sysc⁄f
("sysc⁄‡ßy†_POSIX_VERSION =", 
_SC_VERSION
);

604 
	`¥ötf
("no symbol for _POSIX_VERSION\n");

606 
	`¥ötf
("\n");

607 #ifde‡
_XOPEN_VERSION


608 
	`¥ötf
("_XOPEN_VERSION i†deföed (vÆ i†%d)\n", 
_XOPEN_VERSION
+0);

610 
	`¥ötf
("_XOPEN_VERSION is undefined\n");

612 #ifde‡
_SC_XOPEN_VERSION


613 
	`¥_sysc⁄f
("sysc⁄‡ßy†_XOPEN_VERSION =", 
_SC_XOPEN_VERSION
);

615 
	`¥ötf
("no symbol for _XOPEN_VERSION\n");

617 
	`¥ötf
("\n");

618 #ifde‡
_POSIX_CHOWN_RESTRICTED


619 
	`¥ötf
("_POSIX_CHOWN_RESTRICTED i†deföed (vÆ i†%d)\n", 
_POSIX_CHOWN_RESTRICTED
+0);

621 
	`¥ötf
("_POSIX_CHOWN_RESTRICTED is undefined\n");

623 #ifde‡
_PC_CHOWN_RESTRICTED


624 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†_POSIX_CHOWN_RESTRICTED =", 
¨gv
[1], 
_PC_CHOWN_RESTRICTED
);

626 
	`¥ötf
("no symbol for _POSIX_CHOWN_RESTRICTED\n");

628 
	`¥ötf
("\n");

629 #ifde‡
_POSIX_NO_TRUNC


630 
	`¥ötf
("_POSIX_NO_TRUNC i†deföed (vÆ i†%d)\n", 
_POSIX_NO_TRUNC
+0);

632 
	`¥ötf
("_POSIX_NO_TRUNC is undefined\n");

634 #ifde‡
_PC_NO_TRUNC


635 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†_POSIX_NO_TRUNC =", 
¨gv
[1], 
_PC_NO_TRUNC
);

637 
	`¥ötf
("no symbol for _POSIX_NO_TRUNC\n");

639 
	`¥ötf
("\n");

640 #ifde‡
_POSIX_VDISABLE


641 
	`¥ötf
("_POSIX_VDISABLE i†deföed (vÆ i†%d)\n", 
_POSIX_VDISABLE
+0);

643 
	`¥ötf
("_POSIX_VDISABLE is undefined\n");

645 #ifde‡
_PC_VDISABLE


646 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†_POSIX_VDISABLE =", 
¨gv
[1], 
_PC_VDISABLE
);

648 
	`¥ötf
("no symbol for _POSIX_VDISABLE\n");

650 
	`¥ötf
("\n");

651 #ifde‡
POSIX_ASYNC_IO


652 
	`¥ötf
("POSIX_ASYNC_IO i†deföed (vÆ i†%d)\n", 
POSIX_ASYNC_IO
+0);

654 
	`¥ötf
("POSIX_ASYNC_IO is undefined\n");

656 #ifde‡
_PC_ASYNC_IO


657 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†POSIX_ASYNC_IO =", 
¨gv
[1], 
_PC_ASYNC_IO
);

659 
	`¥ötf
("no symbol for POSIX_ASYNC_IO\n");

661 
	`¥ötf
("\n");

662 #ifde‡
POSIX_PRIO_IO


663 
	`¥ötf
("POSIX_PRIO_IO i†deföed (vÆ i†%d)\n", 
POSIX_PRIO_IO
+0);

665 
	`¥ötf
("POSIX_PRIO_IO is undefined\n");

667 #ifde‡
_PC_PRIO_IO


668 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†POSIX_PRIO_IO =", 
¨gv
[1], 
_PC_PRIO_IO
);

670 
	`¥ötf
("no symbol for POSIX_PRIO_IO\n");

672 
	`¥ötf
("\n");

673 #ifde‡
POSIX_SYNC_IO


674 
	`¥ötf
("POSIX_SYNC_IO i†deföed (vÆ i†%d)\n", 
POSIX_SYNC_IO
+0);

676 
	`¥ötf
("POSIX_SYNC_IO is undefined\n");

678 #ifde‡
_PC_SYNC_IO


679 
	`¥_∑thc⁄f
("∑thc⁄‡ßy†POSIX_SYNC_IO =", 
¨gv
[1], 
_PC_SYNC_IO
);

681 
	`¥ötf
("no symbol for POSIX_SYNC_IO\n");

683 
	`¥ötf
("\n");

684 
	`exô
(0);

685 
	}
}

688 
	$¥_sysc⁄f
(*
mesg
, 
«me
)

690 
vÆ
;

692 
	`Âuts
(
mesg
, 
°dout
);

693 
î∫o
 = 0;

694 i‡((
vÆ
 = 
	`sysc⁄f
(
«me
)) < 0) {

695 i‡(
î∫o
 != 0) {

696 i‡(
î∫o
 =
EINVAL
)

697 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

699 
	`îr_sys
("sysconfÉrror");

701 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

704 
	`¥ötf
(" %ld\n", 
vÆ
);

706 
	}
}

709 
	$¥_∑thc⁄f
(*
mesg
, *
∑th
, 
«me
)

711 
vÆ
;

713 
	`Âuts
(
mesg
, 
°dout
);

714 
î∫o
 = 0;

715 i‡((
vÆ
 = 
	`∑thc⁄f
(
∑th
, 
«me
)) < 0) {

716 i‡(
î∫o
 != 0) {

717 i‡(
î∫o
 =
EINVAL
)

718 
	`Âuts
(" (nŸ suµ‹ãd)\n", 
°dout
);

720 
	`îr_sys
("∑thc⁄‡îr‹,Ö©h = %s", 
∑th
);

722 
	`Âuts
(" (nÿlimô)\n", 
°dout
);

725 
	`¥ötf
(" %ld\n", 
vÆ
);

727 
	}
}

	@stdio/buf.c

1 
	~"≠ue.h
"

3 #i‡
deföed
(
MACOS
)

4 
	#_IO_UNBUFFERED
 
__SNBF


	)

5 
	#_IO_LINE_BUF
 
__SLBF


	)

6 
	#_IO_fûe_Êags
 
_Êags


	)

7 
	#BUFFERSZ
(
Â
Ë(Â)->
_bf
.
_size


	)

9 
	#BUFFERSZ
(
Â
Ë((Â)->
_IO_buf_íd
 - (Â)->
_IO_buf_ba£
)

	)

12 
¥_°dio
(c⁄° *, 
FILE
 *);

15 
	$maö
()

17 
FILE
 *
Â
;

19 
	`Âuts
("íã∏™y ch¨a˘î\n", 
°dout
);

20 i‡(
	`gëch¨
(Ë=
EOF
)

21 
	`îr_sys
("getcharÉrror");

22 
	`Âuts
("⁄êlöêtÿ°™d¨dÉº‹\n", 
°dîr
);

24 
	`¥_°dio
("°dö", 
°dö
);

25 
	`¥_°dio
("°dout", 
°dout
);

26 
	`¥_°dio
("°dîr", 
°dîr
);

28 i‡((
Â
 = 
	`f›í
("/ëc/mŸd", "r")Ë=
NULL
)

29 
	`îr_sys
("fopenÉrror");

30 i‡(
	`gëc
(
Â
Ë=
EOF
)

31 
	`îr_sys
("getcÉrror");

32 
	`¥_°dio
("/ëc/mŸd", 
Â
);

33 
	`exô
(0);

34 
	}
}

37 
	$¥_°dio
(c⁄° *
«me
, 
FILE
 *
Â
)

39 
	`¥ötf
("°ªam = %s, ", 
«me
);

44 i‡(
Â
->
_IO_fûe_Êags
 & 
_IO_UNBUFFERED
)

45 
	`¥ötf
("unbuffered");

46 i‡(
Â
->
_IO_fûe_Êags
 & 
_IO_LINE_BUF
)

47 
	`¥ötf
("line buffered");

49 
	`¥ötf
("fully buffered");

50 
	`¥ötf
(", buf„∏sizê%d\n", 
	`BUFFERSZ
(
Â
));

51 
	}
}

	@stdio/tempfiles.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
«me
[
L_tm≤am
], 
löe
[
MAXLINE
];

7 
FILE
 *
Â
;

9 
	`¥ötf
("%s\n", 
	`tm≤am
(
NULL
));

11 
	`tm≤am
(
«me
);

12 
	`¥ötf
("%s\n", 
«me
);

14 i‡((
Â
 = 
	`tmpfûe
()Ë=
NULL
)

15 
	`îr_sys
("tmpfileÉrror");

16 
	`Âuts
("⁄êlöêo‡ouçut\n", 
Â
);

17 
	`ªwöd
(
Â
);

18 i‡(
	`fgës
(
löe
, ÷öe), 
Â
Ë=
NULL
)

19 
	`îr_sys
("fgetsÉrror");

20 
	`Âuts
(
löe
, 
°dout
);

22 
	`exô
(0);

23 
	}
}

	@stdio/tempnam.c

1 
	~"≠ue.h
"

4 
	$maö
(
¨gc
, *
¨gv
[])

6 i‡(
¨gc
 != 3)

7 
	`îr_quô
("usage:á.out <directory> <prefix>");

9 
	`¥ötf
("%s\n", 
	`ãm≤am
(
¨gv
[1][0] !' ' ?árgv[1] : 
NULL
,

10 
¨gv
[2][0] !' ' ?árgv[2] : 
NULL
));

12 
	`exô
(0);

13 
	}
}

	@streams/cliconn.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<°r›ts.h
>

10 
	$˛i_c⁄n
(c⁄° *
«me
)

12 
fd
;

15 i‡((
fd
 = 
	`›í
(
«me
, 
O_RDWR
)) < 0)

17 i‡(
	`iß°ªam
(
fd
) == 0) {

18 
	`˛o£
(
fd
);

21 (
fd
);

22 
	}
}

	@streams/isastream.c

1 
	~<°r›ts.h
>

2 
	~<uni°d.h
>

5 
	$iß°ªam
(
fd
)

7 (
	`io˘l
(
fd
, 
I_CANPUT
, 0) != -1);

8 
	}
}

	@streams/ptyopen.c

1 
	~"≠ue.h
"

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<°r›ts.h
>

7 
	$±ym_›í
(*
±s_«me
, 
±s_«mesz
)

9 *
±r
;

10 
fdm
;

17 
	`°∫˝y
(
±s_«me
, "/dev/±mx", 
±s_«mesz
);

18 
±s_«me
[
±s_«mesz
 - 1] = '\0';

19 i‡((
fdm
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

21 i‡(
	`gø¡±
(
fdm
) < 0) {

22 
	`˛o£
(
fdm
);

25 i‡(
	`u∆ock±
(
fdm
) < 0) {

26 
	`˛o£
(
fdm
);

29 i‡((
±r
 = 
	`±¢ame
(
fdm
)Ë=
NULL
) {

30 
	`˛o£
(
fdm
);

38 
	`°∫˝y
(
±s_«me
, 
±r
, 
±s_«mesz
);

39 
±s_«me
[
±s_«mesz
 - 1] = '\0';

40 (
fdm
);

41 
	}
}

44 
	$±ys_›í
(*
±s_«me
)

46 
fds
, 
£tup
;

51 i‡((
fds
 = 
	`›í
(
±s_«me
, 
O_RDWR
)) < 0)

57 i‡((
£tup
 = 
	`io˘l
(
fds
, 
I_FIND
, "ldterm")) < 0) {

58 
	`˛o£
(
fds
);

61 i‡(
£tup
 == 0) {

62 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ptem") < 0) {

63 
	`˛o£
(
fds
);

66 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ldterm") < 0) {

67 
	`˛o£
(
fds
);

70 i‡(
	`io˘l
(
fds
, 
I_PUSH
, "ttcompat") < 0) {

71 
	`˛o£
(
fds
);

75 (
fds
);

76 
	}
}

	@streams/recvfd.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

11 
ªcv_fd
(
fd
, 
	$ssize_t
 (*
u£rfunc
)(, c⁄° *, 
size_t
))

13 
√wfd
, 
ƒód
, 
Êag
, 
°©us
;

14 *
±r
;

15 
buf
[
MAXLINE
];

16 
°rbuf
 
d©
;

17 
°ºecvfd
 
ªcvfd
;

19 
°©us
 = -1;

21 
d©
.
buf
 = buf;

22 
d©
.
maxÀn
 = 
MAXLINE
;

23 
Êag
 = 0;

24 i‡(
	`gëmsg
(
fd
, 
NULL
, &
d©
, &
Êag
) < 0)

25 
	`îr_sys
("getmsgÉrror");

26 
ƒód
 = 
d©
.
Àn
;

27 i‡(
ƒód
 == 0) {

28 
	`îr_ªt
("connection closed by server");

38 
±r
 = 
buf
;Öå < &buf[
ƒód
]; ) {

39 i‡(*
±r
++ == 0) {

40 i‡(
±r
 !&
buf
[
ƒód
-1])

41 
	`îr_dump
("message formatÉrror");

42 
°©us
 = *
±r
 & 0xFF;

43 i‡(
°©us
 == 0) {

44 i‡(
	`io˘l
(
fd
, 
I_RECVFD
, &
ªcvfd
) < 0)

46 
√wfd
 = 
ªcvfd
.
fd
;

48 
√wfd
 = -
°©us
;

50 
ƒód
 -= 2;

53 i‡(
ƒód
 > 0)

54 i‡((*
u£rfunc
)(
STDERR_FILENO
, 
buf
, 
ƒód
) !=Çread)

57 i‡(
°©us
 >= 0)

58 (
√wfd
);

60 
	}
}

	@streams/sendfd.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

9 
	$£nd_fd
(
fd
, 
fd_to_£nd
)

11 
buf
[2];

13 
buf
[0] = 0;

14 i‡(
fd_to_£nd
 < 0) {

15 
buf
[1] = -
fd_to_£nd
;

16 i‡(
buf
[1] == 0)

17 
buf
[1] = 1;

19 
buf
[1] = 0;

22 i‡(
	`wrôe
(
fd
, 
buf
, 2) != 2)

25 i‡(
fd_to_£nd
 >= 0)

26 i‡(
	`io˘l
(
fd
, 
I_SENDFD
, 
fd_to_£nd
) < 0)

29 
	}
}

	@streams/servaccept.c

1 
	~"≠ue.h
"

2 
	~<°r›ts.h
>

10 
	$£rv_ac˚±
(
li°ífd
, 
uid_t
 *
uid±r
)

12 
°ºecvfd
 
ªcvfd
;

14 i‡(
	`io˘l
(
li°ífd
, 
I_RECVFD
, &
ªcvfd
) < 0)

16 i‡(
uid±r
 !
NULL
)

17 *
uid±r
 = 
ªcvfd
.
uid
;

18 (
ªcvfd
.
fd
);

19 
	}
}

	@streams/servlisten.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<°r›ts.h
>

6 
	#FIFO_MODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

13 
	$£rv_li°í
(c⁄° *
«me
)

15 
ãmpfd
;

16 
fd
[2];

21 
	`u∆ök
(
«me
);

22 i‡((
ãmpfd
 = 
	`¸ót
(
«me
, 
FIFO_MODE
)) < 0)

24 i‡(
	`˛o£
(
ãmpfd
) < 0)

26 i‡(
	`pùe
(
fd
) < 0)

31 i‡(
	`io˘l
(
fd
[1], 
I_PUSH
, "connld") < 0) {

32 
	`˛o£
(
fd
[0]);

33 
	`˛o£
(
fd
[1]);

36 i‡(
	`Áâach
(
fd
[1], 
«me
) < 0) {

37 
	`˛o£
(
fd
[0]);

38 
	`˛o£
(
fd
[1]);

41 
	`˛o£
(
fd
[1]);

43 (
fd
[0]);

44 
	}
}

	@streams/spipe.c

1 
	~"≠ue.h
"

8 
	$s_pùe
(
fd
[2])

10 (
	`pùe
(
fd
));

11 
	}
}

	@streams/strlist.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

3 
	~<°r›ts.h
>

4 
	~<sys/c⁄f.h
>

7 
	$maö
(
¨gc
, *
¨gv
[])

9 
fd
, 
i
, 
nmods
;

10 
°r_li°
 
li°
;

12 i‡(
¨gc
 != 2)

13 
	`îr_quô
("ußge: %†<∑th«me>", 
¨gv
[0]);

15 i‡((
fd
 = 
	`›í
(
¨gv
[1], 
O_RDONLY
)) < 0)

16 
	`îr_sys
("ˇn'à›í %s", 
¨gv
[1]);

17 i‡(
	`iß°ªam
(
fd
) == 0)

18 
	`îr_quô
("%†i†nŸá såóm", 
¨gv
[1]);

23 i‡((
nmods
 = 
	`io˘l
(
fd
, 
I_LIST
, (*) 0)) < 0)

24 
	`îr_sys
("I_LISTÉrror forÇmods");

25 
	`¥ötf
("#moduÀ†%d\n", 
nmods
);

30 
li°
.
¶_modli°
 = 
	`ˇŒoc
(
nmods
, (
°r_mli°
));

31 i‡(
li°
.
¶_modli°
 =
NULL
)

32 
	`îr_sys
("callocÉrror");

33 
li°
.
¶_nmods
 = 
nmods
;

38 i‡(
	`io˘l
(
fd
, 
I_LIST
, &
li°
) < 0)

39 
	`îr_sys
("I_LISTÉrror forÜist");

44 
i
 = 1; i <
nmods
; i++)

45 
	`¥ötf
(" %s: %s\n", (
i
 =
nmods
) ? "driver" : "module",

46 
li°
.
¶_modli°
++->
l_«me
);

48 
	`exô
(0);

49 
	}
}

	@streams/t_isastream.c

1 
	~"≠ue.h
"

2 
	~<f˙é.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
i
, 
fd
;

9 
i
 = 1; i < 
¨gc
; i++) {

10 i‡((
fd
 = 
	`›í
(
¨gv
[
i
], 
O_RDONLY
)) < 0) {

11 
	`îr_ªt
("%s: c™'à›í", 
¨gv
[
i
]);

15 i‡(
	`iß°ªam
(
fd
) == 0)

16 
	`îr_ªt
("%s:ÇŸá såóm", 
¨gv
[
i
]);

18 
	`îr_msg
("%s: såóm†devi˚", 
¨gv
[
i
]);

21 
	`exô
(0);

22 
	}
}

	@termios/csize.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

5 
	$maö
()

7 
ãrmios
 
ãrm
;

9 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
ãrm
) < 0)

10 
	`îr_sys
("tcgetattrÉrror");

12 
ãrm
.
c_cÊag
 & 
CSIZE
) {

13 
CS5
:

14 
	`¥ötf
("5 bits/byte\n");

16 
CS6
:

17 
	`¥ötf
("6 bits/byte\n");

19 
CS7
:

20 
	`¥ötf
("7 bits/byte\n");

22 
CS8
:

23 
	`¥ötf
("8 bits/byte\n");

26 
	`¥ötf
("unknown bits/byte\n");

29 
ãrm
.
c_cÊag
 &~
CSIZE
;

30 
ãrm
.
c_cÊag
 |
CS8
;

31 i‡(
	`tc£èâr
(
STDIN_FILENO
, 
TCSANOW
, &
ãrm
) < 0)

32 
	`îr_sys
("tcsetattrÉrror");

34 
	`exô
(0);

35 
	}
}

	@termios/ctermid.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

4 
	g˘îmid_«me
[
L_˘îmid
];

7 
	$˘îmid
(*
°r
)

9 i‡(
°r
 =
NULL
)

10 
°r
 = 
˘îmid_«me
;

11 (
	`°r˝y
(
°r
, "/dev/tty"));

12 
	}
}

	@termios/getpass.c

1 
	~<sig«l.h
>

2 
	~<°dio.h
>

3 
	~<ãrmios.h
>

5 
	#MAX_PASS_LEN
 8

	)

8 
	$gë∑ss
(c⁄° *
¥om±
)

10 
buf
[
MAX_PASS_LEN
 + 1];

11 *
±r
;

12 
sig£t_t
 
sig
, 
osig
;

13 
ãrmios
 
ts
, 
Ÿs
;

14 
FILE
 *
Â
;

15 
c
;

17 i‡((
Â
 = 
	`f›í
(
	`˘îmid
(
NULL
), "r+")) == NULL)

18 (
NULL
);

19 
	`£tbuf
(
Â
, 
NULL
);

21 
	`sigem±y£t
(&
sig
);

22 
	`sigadd£t
(&
sig
, 
SIGINT
);

23 
	`sigadd£t
(&
sig
, 
SIGTSTP
);

24 
	`sig¥ocmask
(
SIG_BLOCK
, &
sig
, &
osig
);

26 
	`tcgë©å
(
	`fûío
(
Â
), &
ts
);

27 
Ÿs
 = 
ts
;

28 
ts
.
c_lÊag
 &~(
ECHO
 | 
ECHOE
 | 
ECHOK
 | 
ECHONL
);

29 
	`tc£èâr
(
	`fûío
(
Â
), 
TCSAFLUSH
, &
ts
);

30 
	`Âuts
(
¥om±
, 
Â
);

32 
±r
 = 
buf
;

33 (
c
 = 
	`gëc
(
Â
)Ë!
EOF
 && c != '\n')

34 i‡(
±r
 < &
buf
[
MAX_PASS_LEN
])

35 *
±r
++ = 
c
;

36 *
±r
 = 0;

37 
	`putc
('\n', 
Â
);

39 
	`tc£èâr
(
	`fûío
(
Â
), 
TCSAFLUSH
, &
Ÿs
);

40 
	`sig¥ocmask
(
SIG_SETMASK
, &
osig
, 
NULL
);

41 
	`f˛o£
(
Â
);

42 (
buf
);

43 
	}
}

	@termios/isatty.c

1 
	~<ãrmios.h
>

4 
	$ißây
(
fd
)

6 
ãrmios
 
ts
;

8 (
	`tcgë©å
(
fd
, &
ts
) != -1);

9 
	}
}

	@termios/settty.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

5 
	$maö
()

7 
ãrmios
 
ãrm
;

8 
vdißbÀ
;

10 i‡(
	`ißây
(
STDIN_FILENO
) == 0)

11 
	`îr_quô
("standard input isÇotáÅerminal device");

13 i‡((
vdißbÀ
 = 
	`Â©hc⁄f
(
STDIN_FILENO
, 
_PC_VDISABLE
)) < 0)

14 
	`îr_quô
("fpathconfÉrror or _POSIX_VDISABLEÇot inÉffect");

16 i‡(
	`tcgë©å
(
STDIN_FILENO
, &
ãrm
) < 0)

17 
	`îr_sys
("tcgetattrÉrror");

19 
ãrm
.
c_cc
[
VINTR
] = 
vdißbÀ
;

20 
ãrm
.
c_cc
[
VEOF
] = 2;

22 i‡(
	`tc£èâr
(
STDIN_FILENO
, 
TCSAFLUSH
, &
ãrm
) < 0)

23 
	`îr_sys
("tcsetattrÉrror");

25 
	`exô
(0);

26 
	}
}

	@termios/t_getpass.c

1 
	~"≠ue.h
"

3 *
gë∑ss
(const *);

6 
	$maö
()

8 *
±r
;

10 i‡((
±r
 = 
	`gë∑ss
("E¡îÖassw‹d:")Ë=
NULL
)

11 
	`îr_sys
("getpassÉrror");

12 
	`¥ötf
("∑ssw‹d: %s\n", 
±r
);

16 *
±r
 != 0)

17 *
±r
++ = 0;

18 
	`exô
(0);

19 
	}
}

	@termios/t_isatty.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 
	`¥ötf
("fd 0: %s\n", 
	`ißây
(0) ? "tty" : "notáÅty");

7 
	`¥ötf
("fd 1: %s\n", 
	`ißây
(1) ? "tty" : "notáÅty");

8 
	`¥ötf
("fd 2: %s\n", 
	`ißây
(2) ? "tty" : "notáÅty");

9 
	`exô
(0);

10 
	}
}

	@termios/t_raw.c

1 
	~"≠ue.h
"

4 
	$sig_ˇtch
(
signo
)

6 
	`¥ötf
("signal caught\n");

7 
	`ây_ª£t
(
STDIN_FILENO
);

8 
	`exô
(0);

9 
	}
}

12 
	$maö
()

14 
i
;

15 
c
;

17 i‡(
	`sig«l
(
SIGINT
, 
sig_ˇtch
Ë=
SIG_ERR
)

18 
	`îr_sys
("signal(SIGINT)Érror");

19 i‡(
	`sig«l
(
SIGQUIT
, 
sig_ˇtch
Ë=
SIG_ERR
)

20 
	`îr_sys
("signal(SIGQUIT)Érror");

21 i‡(
	`sig«l
(
SIGTERM
, 
sig_ˇtch
Ë=
SIG_ERR
)

22 
	`îr_sys
("signal(SIGTERM)Érror");

24 i‡(
	`ây_øw
(
STDIN_FILENO
) < 0)

25 
	`îr_sys
("tty_rawÉrror");

26 
	`¥ötf
("EnterÑaw mode characters,Åerminate with DELETE\n");

27 (
i
 = 
	`ªad
(
STDIN_FILENO
, &
c
, 1)) == 1) {

28 i‡((
c
 &= 255) == 0177)

30 
	`¥ötf
("%o\n", 
c
);

32 i‡(
	`ây_ª£t
(
STDIN_FILENO
) < 0)

33 
	`îr_sys
("tty_resetÉrror");

34 i‡(
i
 <= 0)

35 
	`îr_sys
("readÉrror");

36 i‡(
	`ây_cbªak
(
STDIN_FILENO
) < 0)

37 
	`îr_sys
("tty_cbreakÉrror");

38 
	`¥ötf
("\nEnter cbreak mode characters,Åerminate with SIGINT\n");

39 (
i
 = 
	`ªad
(
STDIN_FILENO
, &
c
, 1)) == 1) {

40 
c
 &= 255;

41 
	`¥ötf
("%o\n", 
c
);

43 i‡(
	`ây_ª£t
(
STDIN_FILENO
) < 0)

44 
	`îr_sys
("tty_resetÉrror");

45 i‡(
i
 <= 0)

46 
	`îr_sys
("readÉrror");

48 
	`exô
(0);

49 
	}
}

	@termios/t_ttyname.c

1 
	~"≠ue.h
"

4 
	$maö
()

6 *
«me
;

7 i‡(
	`ißây
(0)) {

8 
«me
 = 
	`ây«me
(0);

9 i‡(
«me
 =
NULL
)

10 
«me
 = "undefined";

12 
«me
 = "notáÅty";

14 
	`¥ötf
("fd 0: %s\n", 
«me
);

15 i‡(
	`ißây
(1)) {

16 
«me
 = 
	`ây«me
(1);

17 i‡(
«me
 =
NULL
)

18 
«me
 = "undefined";

20 
«me
 = "notáÅty";

22 
	`¥ötf
("fd 1: %s\n", 
«me
);

23 i‡(
	`ißây
(2)) {

24 
«me
 = 
	`ây«me
(2);

25 i‡(
«me
 =
NULL
)

26 
«me
 = "undefined";

28 
«me
 = "notáÅty";

30 
	`¥ötf
("fd 2: %s\n", 
«me
);

31 
	`exô
(0);

32 
	}
}

	@termios/ttyname.c

1 
	~<sys/°©.h
>

2 
	~<dúít.h
>

3 
	~<limôs.h
>

4 
	~<°rög.h
>

5 
	~<ãrmios.h
>

6 
	~<uni°d.h
>

7 
	~<°dlib.h
>

9 
	sdevdú
 {

10 
devdú
 *
	md_√xt
;

11 *
	md_«me
;

14 
devdú
 *
	ghód
;

15 
devdú
 *
	gèû
;

16 
	g∑th«me
[
_POSIX_PATH_MAX
 + 1];

19 
	$add
(*
dú«me
)

21 
devdú
 *
ddp
;

22 
Àn
;

24 
Àn
 = 
	`°æí
(
dú«me
);

29 i‡((
dú«me
[
Àn
-1] == '.') && (dirname[len-2] == '/' ||

30 (
dú«me
[
Àn
-2] == '.' && dirname[len-3] == '/')))

32 i‡(
	`°rcmp
(
dú«me
, "/dev/fd") == 0)

34 
ddp
 = 
	`mÆloc
((
devdú
));

35 i‡(
ddp
 =
NULL
)

38 
ddp
->
d_«me
 = 
	`°rdup
(
dú«me
);

39 i‡(
ddp
->
d_«me
 =
NULL
) {

40 
	`‰ì
(
ddp
);

43 
ddp
->
d_√xt
 = 
NULL
;

44 i‡(
èû
 =
NULL
) {

45 
hód
 = 
ddp
;

46 
èû
 = 
ddp
;

48 
èû
->
d_√xt
 = 
ddp
;

49 
èû
 = 
ddp
;

51 
	}
}

54 
	$˛ónup
()

56 
devdú
 *
ddp
, *
nddp
;

58 
ddp
 = 
hód
;

59 
ddp
 !
NULL
) {

60 
nddp
 = 
ddp
->
d_√xt
;

61 
	`‰ì
(
ddp
->
d_«me
);

62 
	`‰ì
(
ddp
);

63 
ddp
 = 
nddp
;

65 
hód
 = 
NULL
;

66 
èû
 = 
NULL
;

67 
	}
}

70 
	$£¨chdú
(*
dú«me
, 
°©
 *
fd°©p
)

72 
°©
 
dev°©
;

73 
DIR
 *
dp
;

74 
devÀn
;

75 
dúít
 *
dúp
;

77 
	`°r˝y
(
∑th«me
, 
dú«me
);

78 i‡((
dp
 = 
	`›ídú
(
dú«me
)Ë=
NULL
)

79 (
NULL
);

80 
	`°rˇt
(
∑th«me
, "/");

81 
devÀn
 = 
	`°æí
(
∑th«me
);

82 (
dúp
 = 
	`ªaddú
(
dp
)Ë!
NULL
) {

83 
	`°∫˝y
(
∑th«me
 + 
devÀn
, 
dúp
->
d_«me
,

84 
_POSIX_PATH_MAX
 - 
devÀn
);

89 i‡(
	`°rcmp
(
∑th«me
, "/dev/stdin") == 0 ||

90 
	`°rcmp
(
∑th«me
, "/dev/stdout") == 0 ||

91 
	`°rcmp
(
∑th«me
, "/dev/stderr") == 0)

93 i‡(
	`°©
(
∑th«me
, &
dev°©
) < 0)

95 i‡(
	`S_ISDIR
(
dev°©
.
°_mode
)) {

96 
	`add
(
∑th«me
);

99 i‡(
dev°©
.
°_öo
 =
fd°©p
->st_ino &&

100 
dev°©
.
°_dev
 =
fd°©p
->st_dev) {

101 
	`˛o£dú
(
dp
);

102 (
∑th«me
);

106 
	`˛o£dú
(
dp
);

107 (
NULL
);

108 
	}
}

111 
	$ây«me
(
fd
)

113 
°©
 
fd°©
;

114 
devdú
 *
ddp
;

115 *
rvÆ
;

117 i‡(
	`ißây
(
fd
) == 0)

118 (
NULL
);

119 i‡(
	`f°©
(
fd
, &
fd°©
) < 0)

120 (
NULL
);

121 i‡(
	`S_ISCHR
(
fd°©
.
°_mode
) == 0)

122 (
NULL
);

124 
rvÆ
 = 
	`£¨chdú
("/dev", &
fd°©
);

125 i‡(
rvÆ
 =
NULL
) {

126 
ddp
 = 
hód
; dd∞!
NULL
; dd∞ddp->
d_√xt
)

127 i‡((
rvÆ
 = 
	`£¨chdú
(
ddp
->
d_«me
, &
fd°©
)Ë!
NULL
)

131 
	`˛ónup
();

132 (
rvÆ
);

133 
	}
}

	@termios/winch.c

1 
	~"≠ue.h
"

2 
	~<ãrmios.h
>

3 #i‚def 
TIOCGWINSZ


4 
	~<sys/io˘l.h
>

8 
	$¥_wösize
(
fd
)

10 
wösize
 
size
;

12 i‡(
	`io˘l
(
fd
, 
TIOCGWINSZ
, (*Ë&
size
) < 0)

13 
	`îr_sys
("TIOCGWINSZÉrror");

14 
	`¥ötf
("%dÑows, %d cﬁumns\n", 
size
.
ws_row
, size.
ws_cﬁ
);

15 
	}
}

18 
	$sig_wöch
(
signo
)

20 
	`¥ötf
("SIGWINCHÑeceived\n");

21 
	`¥_wösize
(
STDIN_FILENO
);

22 
	}
}

25 
	$maö
()

27 i‡(
	`ißây
(
STDIN_FILENO
) == 0)

28 
	`exô
(1);

29 i‡(
	`sig«l
(
SIGWINCH
, 
sig_wöch
Ë=
SIG_ERR
)

30 
	`îr_sys
("signalÉrror");

31 
	`¥_wösize
(
STDIN_FILENO
);

33 
	`∑u£
();

34 
	}
}

	@threadctl/atfork.c

1 
	~"../ö˛ude/≠ue.h
"

2 
	~<±hªad.h
>

4 
±hªad_muãx_t
 
	glock1
 = 
PTHREAD_MUTEX_INITIALIZER
;

5 
±hªad_muãx_t
 
	glock2
 = 
PTHREAD_MUTEX_INITIALIZER
;

8 
	$¥ï¨e
()

10 
	`¥ötf
("preparingÜocks...\n");

11 
	`±hªad_muãx_lock
(&
lock1
);

12 
	`±hªad_muãx_lock
(&
lock2
);

13 
	}
}

16 
	$∑ª¡
()

18 
	`¥ötf
("parent unlockingÜocks...\n");

19 
	`±hªad_muãx_u∆ock
(&
lock1
);

20 
	`±hªad_muãx_u∆ock
(&
lock2
);

21 
	}
}

24 
	$chûd
()

26 
	`¥ötf
("child unlockingÜocks...\n");

27 
	`±hªad_muãx_u∆ock
(&
lock1
);

28 
	`±hªad_muãx_u∆ock
(&
lock2
);

29 
	}
}

32 
	$thr_‚
(*
¨g
)

34 
	`¥ötf
("thread started...\n");

35 
	`∑u£
();

37 
	}
}

40 
	$maö
()

42 
îr
;

43 
pid_t
 
pid
;

44 
±hªad_t
 
tid
;

46 #i‡
	`deföed
(
BSD
Ë|| deföed(
MACOS
)

47 
	`¥ötf
("pthread_atfork is unsupported\n");

49 i‡((
îr
 = 
	`±hªad_©f‹k
(
¥ï¨e
, 
∑ª¡
, 
chûd
)) != 0)

50 
	`îr_exô
(
îr
, "can't install fork handlers");

51 
îr
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
thr_‚
, 0);

52 i‡(
îr
 != 0)

53 
	`îr_exô
(
îr
, "can't createÅhread");

54 
	`¶ìp
(2);

55 
	`¥ötf
("parentáboutÅo fork...\n");

56 i‡((
pid
 = 
	`f‹k
()) < 0)

57 
	`îr_quô
("fork failed");

58 i‡(
pid
 == 0)

59 
	`¥ötf
("childÑeturned from fork\n");

61 
	`¥ötf
("parentÑeturned from fork\n");

63 
	`exô
(0);

64 
	}
}

	@threadctl/detach.c

1 
	~"≠ue.h
"

2 
	~<±hªad.h
>

5 
makëhªad
(*(*
‚
)(*), *
¨g
)

7 
	gîr
;

8 
±hªad_t
 
	gtid
;

9 
±hªad_©å_t
 
	g©å
;

11 
	gîr
 = 
±hªad_©å_öô
(&
©å
);

12 i‡(
	gîr
 != 0)

13 (
îr
);

14 
	gîr
 = 
±hªad_©å_£tdëach°©e
(&
©å
, 
PTHREAD_CREATE_DETACHED
);

15 i‡(
	gîr
 == 0)

16 
îr
 = 
±hªad_¸óã
(&
tid
, &
©å
, 
‚
, 
¨g
);

17 
±hªad_©å_de°roy
(&
©å
);

18 (
	gîr
);

	@threadctl/getenv1.c

1 
	~<löux/limôs.h
>

2 
	~<°rög.h
>

4 
	gívbuf
[
ARG_MAX
];

6 **
ívú⁄
;

9 
	$gëív
(c⁄° *
«me
)

11 
i
, 
Àn
;

13 
Àn
 = 
	`°æí
(
«me
);

14 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

15 i‡((
	`°∫cmp
(
«me
, 
ívú⁄
[
i
], 
Àn
) == 0) &&

16 (
ívú⁄
[
i
][
Àn
] == '=')) {

17 
	`°r˝y
(
ívbuf
, &
ívú⁄
[
i
][
Àn
+1]);

18 (
ívbuf
);

21 (
NULL
);

22 
	}
}

	@threadctl/getenv2.c

1 
	~<°rög.h
>

2 
	~<î∫o.h
>

3 
	~<±hªad.h
>

4 
	~<°dlib.h
>

6 **
ívú⁄
;

8 
±hªad_muãx_t
 
	gív_muãx
;

9 
±hªad_⁄˚_t
 
	göô_d⁄e
 = 
PTHREAD_ONCE_INIT
;

12 
	$thªad_öô
()

14 
±hªad_muãx©å_t
 
©å
;

16 
	`±hªad_muãx©å_öô
(&
©å
);

17 
	`±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_RECURSIVE
);

18 
	`±hªad_muãx_öô
(&
ív_muãx
, &
©å
);

19 
	`±hªad_muãx©å_de°roy
(&
©å
);

20 
	}
}

23 
	$gëív_r
(c⁄° *
«me
, *
buf
, 
buÊí
)

25 
i
, 
Àn
, 
ﬁí
;

27 
	`±hªad_⁄˚
(&
öô_d⁄e
, 
thªad_öô
);

28 
Àn
 = 
	`°æí
(
«me
);

29 
	`±hªad_muãx_lock
(&
ív_muãx
);

30 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

31 i‡((
	`°∫cmp
(
«me
, 
ívú⁄
[
i
], 
Àn
) == 0) &&

32 (
ívú⁄
[
i
][
Àn
] == '=')) {

33 
ﬁí
 = 
	`°æí
(&
ívú⁄
[
i
][
Àn
+1]);

34 i‡(
ﬁí
 >
buÊí
) {

35 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

36 (
ENOSPC
);

38 
	`°r˝y
(
buf
, &
ívú⁄
[
i
][
Àn
+1]);

39 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

43 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

44 (
ENOENT
);

45 
	}
}

	@threadctl/getenv3.c

1 
	~<löux/limôs.h
>

2 
	~<°rög.h
>

3 
	~<±hªad.h
>

4 
	~<°dlib.h
>

6 
±hªad_key_t
 
	gkey
;

7 
±hªad_⁄˚_t
 
	göô_d⁄e
 = 
PTHREAD_ONCE_INIT
;

8 
±hªad_muãx_t
 
	gív_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

10 **
ívú⁄
;

13 
	$thªad_öô
()

15 
	`±hªad_key_¸óã
(&
key
, 
‰ì
);

16 
	}
}

19 
	$gëív
(c⁄° *
«me
)

21 
i
, 
Àn
;

22 *
ívbuf
;

24 
	`±hªad_⁄˚
(&
öô_d⁄e
, 
thªad_öô
);

25 
	`±hªad_muãx_lock
(&
ív_muãx
);

26 
ívbuf
 = (*)
	`±hªad_gë•ecific
(
key
);

27 i‡(
ívbuf
 =
NULL
) {

28 
ívbuf
 = 
	`mÆloc
(
ARG_MAX
);

29 i‡(
ívbuf
 =
NULL
) {

30 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

31 (
NULL
);

33 
	`±hªad_£t•ecific
(
key
, 
ívbuf
);

35 
Àn
 = 
	`°æí
(
«me
);

36 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

37 i‡((
	`°∫cmp
(
«me
, 
ívú⁄
[
i
], 
Àn
) == 0) &&

38 (
ívú⁄
[
i
][
Àn
] == '=')) {

39 
	`°r˝y
(
ívbuf
, &
ívú⁄
[
i
][
Àn
+1]);

40 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

41 (
ívbuf
);

44 
	`±hªad_muãx_u∆ock
(&
ív_muãx
);

45 (
NULL
);

46 
	}
}

	@threadctl/suspend.c

1 
	~"../ö˛ude/≠ue.h
"

2 
	~<±hªad.h
>

4 
	gquôÊag
;

5 
sig£t_t
 
	gmask
;

7 
±hªad_muãx_t
 
	glock
 = 
PTHREAD_MUTEX_INITIALIZER
;

8 
±hªad_c⁄d_t
 
	gwaôloc
 = 
PTHREAD_COND_INITIALIZER
;

11 
	$thr_‚
(*
¨g
)

13 
îr
, 
signo
;

16 
îr
 = 
	`sigwaô
(&
mask
, &
signo
);

17 i‡(
îr
 != 0)

18 
	`îr_exô
(
îr
, "sigwait failed");

19 
signo
) {

20 
SIGINT
:

21 
	`¥ötf
("\ninterrupt\n");

24 
SIGQUIT
:

25 
	`±hªad_muãx_lock
(&
lock
);

26 
quôÊag
 = 1;

27 
	`±hªad_muãx_u∆ock
(&
lock
);

28 
	`±hªad_c⁄d_sig«l
(&
waôloc
);

32 
	`¥ötf
("u√x≥˘ed sig«»%d\n", 
signo
);

33 
	`exô
(1);

36 
	}
}

39 
	$maö
()

41 
îr
;

42 
sig£t_t
 
ﬁdmask
;

43 
±hªad_t
 
tid
;

45 
	`sigem±y£t
(&
mask
);

46 
	`sigadd£t
(&
mask
, 
SIGINT
);

47 
	`sigadd£t
(&
mask
, 
SIGQUIT
);

48 i‡((
îr
 = 
	`±hªad_sigmask
(
SIG_BLOCK
, &
mask
, &
ﬁdmask
)) != 0)

49 
	`îr_exô
(
îr
, "SIG_BLOCKÉrror");

51 
îr
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
thr_‚
, 0);

52 i‡(
îr
 != 0)

53 
	`îr_exô
(
îr
, "can't createÅhread");

55 
	`±hªad_muãx_lock
(&
lock
);

56 
quôÊag
 == 0)

57 
	`±hªad_c⁄d_waô
(&
waôloc
, &
lock
);

58 
	`±hªad_muãx_u∆ock
(&
lock
);

61 
quôÊag
 = 0;

64 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

65 
	`îr_sys
("SIG_SETMASKÉrror");

66 
	`exô
(0);

67 
	}
}

	@threadctl/timeout.c

1 
	~"../ö˛ude/≠ue.h
"

2 
	~<±hªad.h
>

3 
	~<time.h
>

4 
	~<sys/time.h
>

6 
makëhªad
(*(*)(*), *);

8 
	sto_öfo
 {

9 (*
	mto_‚
)(*);

10 *
	mto_¨g
;

11 
time•ec
 
	mto_waô
;

14 
	#SECTONSEC
 1000000000

	)

15 
	#USECTONSEC
 1000

	)

18 
	$timeout_hñ≥r
(*
¨g
)

20 
to_öfo
 *
tù
;

22 
tù
 = (
to_öfo
 *)
¨g
;

23 
	`«no¶ìp
(&
tù
->
to_waô
, 
NULL
);

24 (*
tù
->
to_‚
)—ù->
to_¨g
);

26 
	}
}

29 
timeout
(c⁄° 
time•ec
 *
whí
, (*
func
)(*), *
¨g
)

31 
time•ec
 
now
;

32 
timevÆ
 
tv
;

33 
to_öfo
 *
tù
;

34 
îr
;

36 
	`gëtimeofday
(&
tv
, 
NULL
);

37 
now
.
tv_£c
 = 
tv
.tv_sec;

38 
now
.
tv_n£c
 = 
tv
.
tv_u£c
 * 
USECTONSEC
;

39 i‡((
whí
->
tv_£c
 > 
now
.tv_sec) ||

40 (
whí
->
tv_£c
 =
now
.tv_£¯&& whí->
tv_n£c
 >Çow.tv_nsec)) {

41 
tù
 = 
	`mÆloc
((
to_öfo
));

42 i‡(
tù
 !
NULL
) {

43 
tù
->
to_‚
 = 
func
;

44 
tù
->
to_¨g
 = 
¨g
;

45 
tù
->
to_waô
.
tv_£c
 = 
whí
->tv_£¯- 
now
.tv_sec;

46 i‡(
whí
->
tv_n£c
 >
now
.tv_nsec) {

47 
tù
->
to_waô
.
tv_n£c
 = 
whí
->tv_n£¯- 
now
.tv_nsec;

49 
tù
->
to_waô
.
tv_£c
--;

50 
tù
->
to_waô
.
tv_n£c
 = 
SECTONSEC
 - 
now
.tv_nsec +

51 
whí
->
tv_n£c
;

53 
îr
 = 
	`makëhªad
(
timeout_hñ≥r
, (*)
tù
);

54 i‡(
îr
 == 0)

63 (*
func
)(
¨g
);

64 
	}
}

66 
±hªad_muãx©å_t
 
	g©å
;

67 
±hªad_muãx_t
 
	gmuãx
;

70 
	$ªåy
(*
¨g
)

72 
	`±hªad_muãx_lock
(&
muãx
);

74 
	`±hªad_muãx_u∆ock
(&
muãx
);

75 
	}
}

78 
	$maö
()

80 
îr
, 
c⁄dôi⁄
, 
¨g
;

81 
time•ec
 
whí
;

83 i‡((
îr
 = 
	`±hªad_muãx©å_öô
(&
©å
)) != 0)

84 
	`îr_exô
(
îr
, "pthread_mutexattr_init failed");

85 i‡((
îr
 = 
	`±hªad_muãx©å_£ây≥
(&
©å
,

86 
PTHREAD_MUTEX_RECURSIVE
)) != 0)

87 
	`îr_exô
(
îr
, "can't setÑecursiveÅype");

88 i‡((
îr
 = 
	`±hªad_muãx_öô
(&
muãx
, &
©å
)) != 0)

89 
	`îr_exô
(
îr
, "can't createÑecursive mutex");

91 
	`±hªad_muãx_lock
(&
muãx
);

93 i‡(
c⁄dôi⁄
) {

95 
	`timeout
(&
whí
, 
ªåy
, (*)
¨g
);

98 
	`±hªad_muãx_u∆ock
(&
muãx
);

100 
	`exô
(0);

101 
	}
}

	@threads/badexit2.c

1 
	~"../ö˛ude/≠ue.h
"

2 
	~<±hªad.h
>

4 
	sfoo
 {

5 
	ma
, 
	mb
, 
	mc
, 
	md
;

9 
	$¥ötfoo
(c⁄° *
s
, c⁄° 
foo
 *
Â
)

11 
	`¥ötf
(
s
);

12 
	`¥ötf
(" såu˘uªáà0x%x\n", ()
Â
);

13 
	`¥ötf
(" foo.®%d\n", 
Â
->
a
);

14 
	`¥ötf
(" foo.b = %d\n", 
Â
->
b
);

15 
	`¥ötf
(" foo.¯%d\n", 
Â
->
c
);

16 
	`¥ötf
(" foo.d = %d\n", 
Â
->
d
);

17 
	}
}

20 
	$thr_‚1
(*
¨g
)

22 
foo
 foo = {1, 2, 3, 4};

24 
	`¥ötfoo
("thªad 1:\n", &
foo
);

25 
	`±hªad_exô
((*)&
foo
);

26 
	}
}

29 
	$thr_‚2
(*
¨g
)

31 
	`¥ötf
("thªad 2: ID i†%d\n", ()
	`±hªad_£lf
());

32 
	`±hªad_exô
((*)0);

33 
	}
}

36 
	$maö
()

38 
îr
;

39 
±hªad_t
 
tid1
, 
tid2
;

40 
foo
 *
Â
;

42 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, NULL);

43 i‡(
îr
 != 0)

44 
	`îr_quô
("ˇn'à¸óãÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

45 
îr
 = 
	`±hªad_joö
(
tid1
, (*)&
Â
);

46 i‡(
îr
 != 0)

47 
	`îr_quô
("ˇn'àjoö wôhÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

48 
	`¶ìp
(1);

49 
	`¥ötf
("parent starting secondÅhread\n");

50 
îr
 = 
	`±hªad_¸óã
(&
tid2
, 
NULL
, 
thr_‚2
, NULL);

51 i‡(
îr
 != 0)

52 
	`îr_quô
("ˇn'à¸óãÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

53 
	`¶ìp
(1);

54 
	`¥ötfoo
("∑ª¡:\n", 
Â
);

55 
	`exô
(0);

56 
	}
}

	@threads/cleanup.c

1 
	~"../ö˛ude/≠ue.h
"

2 
	~<±hªad.h
>

5 
	$˛ónup
(*
¨g
)

7 
	`¥ötf
("˛ónup: %s\n", (*)
¨g
);

8 
	}
}

11 
	$thr_‚1
(*
¨g
)

13 
	`¥ötf
("thread 1 start\n");

14 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 1 first handler");

15 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 1 second handler");

16 
	`¥ötf
("thread 1Öush complete\n");

17 i‡(
¨g
)

19 
	`±hªad_˛ónup_p›
(0);

20 
	`±hªad_˛ónup_p›
(0);

22 
	}
}

25 
	$thr_‚2
(*
¨g
)

27 
	`¥ötf
("thread 2 start\n");

28 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 2 first handler");

29 
	`±hªad_˛ónup_push
(
˛ónup
, "thread 2 second handler");

30 
	`¥ötf
("thread 2Öush complete\n");

31 i‡(
¨g
)

32 
	`±hªad_exô
((*)2);

33 
	`±hªad_˛ónup_p›
(0);

34 
	`±hªad_˛ónup_p›
(0);

35 
	`±hªad_exô
((*)2);

36 
	}
}

39 
	$maö
()

41 
îr
;

42 
±hªad_t
 
tid1
, 
tid2
;

43 *
åë
;

45 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, (*)1);

46 i‡(
îr
 != 0)

47 
	`îr_quô
("ˇn'à¸óãÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

48 
îr
 = 
	`±hªad_¸óã
(&
tid2
, 
NULL
, 
thr_‚2
, (*)1);

49 i‡(
îr
 != 0)

50 
	`îr_quô
("ˇn'à¸óãÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

51 
îr
 = 
	`±hªad_joö
(
tid1
, &
åë
);

52 i‡(
îr
 != 0)

53 
	`îr_quô
("ˇn'àjoö wôhÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

54 
	`¥ötf
("thªad 1Éxô codê%d\n", ()
åë
);

55 
îr
 = 
	`±hªad_joö
(
tid2
, &
åë
);

56 i‡(
îr
 != 0)

57 
	`îr_quô
("ˇn'àjoö wôhÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

58 
	`¥ötf
("thªad 2Éxô codê%d\n", ()
åë
);

59 
	`exô
(0);

60 
	}
}

	@threads/condvar.c

1 
	~<±hªad.h
>

3 
	smsg
 {

4 
msg
 *
	mm_√xt
;

8 
msg
 *
	gw‹kq
;

9 
±hªad_c⁄d_t
 
	gqªady
 = 
PTHREAD_COND_INITIALIZER
;

10 
±hªad_muãx_t
 
	gqlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

13 
	$¥o˚ss_msg
()

15 
msg
 *
mp
;

18 
	`±hªad_muãx_lock
(&
qlock
);

19 
w‹kq
 =
NULL
)

20 
	`±hªad_c⁄d_waô
(&
qªady
, &
qlock
);

21 
mp
 = 
w‹kq
;

22 
w‹kq
 = 
mp
->
m_√xt
;

23 
	`±hªad_muãx_u∆ock
(&
qlock
);

26 
	}
}

29 
	$íqueue_msg
(
msg
 *
mp
)

31 
	`±hªad_muãx_lock
(&
qlock
);

32 
mp
->
m_√xt
 = 
w‹kq
;

33 
w‹kq
 = 
mp
;

34 
	`±hªad_muãx_u∆ock
(&
qlock
);

35 
	`±hªad_c⁄d_sig«l
(&
qªady
);

36 
	}
}

	@threads/exitstatus.c

1 
	~"../ö˛ude/≠ue.h
"

2 
	~<±hªad.h
>

5 
	$thr_‚1
(*
¨g
)

7 
	`¥ötf
("thread 1Ñeturning\n");

9 
	}
}

12 
	$thr_‚2
(*
¨g
)

14 
	`¥ötf
("thread 2Éxiting\n");

15 
	`±hªad_exô
((*)2);

16 
	}
}

19 
	$maö
()

21 
îr
;

22 
±hªad_t
 
tid1
, 
tid2
;

23 *
åë
;

25 
îr
 = 
	`±hªad_¸óã
(&
tid1
, 
NULL
, 
thr_‚1
, NULL);

26 i‡(
îr
 != 0)

27 
	`îr_quô
("ˇn'à¸óãÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

28 
îr
 = 
	`±hªad_¸óã
(&
tid2
, 
NULL
, 
thr_‚2
, NULL);

29 i‡(
îr
 != 0)

30 
	`îr_quô
("ˇn'à¸óãÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

31 
îr
 = 
	`±hªad_joö
(
tid1
, &
åë
);

32 i‡(
îr
 != 0)

33 
	`îr_quô
("ˇn'àjoö wôhÅhªad 1: %s\n", 
	`°ªº‹
(
îr
));

34 
	`¥ötf
("thªad 1Éxô codê%d\n", ()
åë
);

35 
îr
 = 
	`±hªad_joö
(
tid2
, &
åë
);

36 i‡(
îr
 != 0)

37 
	`îr_quô
("ˇn'àjoö wôhÅhªad 2: %s\n", 
	`°ªº‹
(
îr
));

38 
	`¥ötf
("thªad 2Éxô codê%d\n", ()
åë
);

39 
	`exô
(0);

40 
	}
}

	@threads/mutex1.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	sfoo
 {

5 
	mf_cou¡
;

6 
±hªad_muãx_t
 
	mf_lock
;

10 
foo
 *

11 
	$foo_Æloc
()

13 
foo
 *
Â
;

15 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë!
NULL
) {

16 
Â
->
f_cou¡
 = 1;

17 i‡(
	`±hªad_muãx_öô
(&
Â
->
f_lock
, 
NULL
) != 0) {

18 
	`‰ì
(
Â
);

19 (
NULL
);

23 (
Â
);

24 
	}
}

27 
	$foo_hﬁd
(
foo
 *
Â
)

29 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

30 
Â
->
f_cou¡
++;

31 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

32 
	}
}

35 
	$foo_ªÀ
(
foo
 *
Â
)

37 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

38 i‡(--
Â
->
f_cou¡
 == 0) {

39 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

40 
	`±hªad_muãx_de°roy
(&
Â
->
f_lock
);

41 
	`‰ì
(
Â
);

43 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

45 
	}
}

	@threads/mutex2.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	#NHASH
 29

	)

5 
	#HASH
(
Â
Ë((()Â)%
NHASH
)

	)

7 
foo
 *
	gfh
[
NHASH
];

9 
±hªad_muãx_t
 
	ghashlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

11 
	sfoo
 {

12 
	mf_cou¡
;

13 
±hªad_muãx_t
 
	mf_lock
;

14 
foo
 *
	mf_√xt
;

15 
	mf_id
;

19 
foo
 *

20 
	$foo_Æloc
()

22 
foo
 *
Â
;

23 
idx
;

25 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë!
NULL
) {

26 
Â
->
f_cou¡
 = 1;

27 i‡(
	`±hªad_muãx_öô
(&
Â
->
f_lock
, 
NULL
) != 0) {

28 
	`‰ì
(
Â
);

29 (
NULL
);

31 
idx
 = 
	`HASH
(
Â
);

32 
	`±hªad_muãx_lock
(&
hashlock
);

33 
Â
->
f_√xt
 = 
fh
[
idx
];

34 
fh
[
idx
] = 
Â
->
f_√xt
;

35 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

36 
	`±hªad_muãx_u∆ock
(&
hashlock
);

38 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

40 (
Â
);

41 
	}
}

44 
	$foo_hﬁd
(
foo
 *
Â
)

46 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

47 
Â
->
f_cou¡
++;

48 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

49 
	}
}

51 
foo
 *

52 
	$foo_föd
(
id
)

54 
foo
 *
Â
 = 
NULL
;

55 
idx
;

57 
idx
 = 
	`HASH
(
Â
);

58 
	`±hªad_muãx_lock
(&
hashlock
);

59 
Â
 = 
fh
[
idx
]; f∞!
NULL
; f∞Â->
f_√xt
) {

60 i‡(
Â
->
f_id
 =
id
) {

61 
	`foo_hﬁd
(
Â
);

65 
	`±hªad_muãx_u∆ock
(&
hashlock
);

66 (
Â
);

67 
	}
}

70 
	$foo_ªÀ
(
foo
 *
Â
)

72 
foo
 *
tÂ
;

73 
idx
;

75 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

76 i‡(
Â
->
f_cou¡
 == 1) {

77 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

78 
	`±hªad_muãx_lock
(&
hashlock
);

79 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

81 i‡(
Â
->
f_cou¡
 != 1) {

82 
Â
->
f_cou¡
--;

83 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

84 
	`±hªad_muãx_u∆ock
(&
hashlock
);

88 
idx
 = 
	`HASH
(
Â
);

89 
tÂ
 = 
fh
[
idx
];

90 i‡(
tÂ
 =
Â
) {

91 
fh
[
idx
] = 
Â
->
f_√xt
;

93 
tÂ
->
f_√xt
 !
Â
)

94 
tÂ
 =ÅÂ->
f_√xt
;

95 
tÂ
->
f_√xt
 = 
Â
->f_next;

97 
	`±hªad_muãx_u∆ock
(&
hashlock
);

98 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

99 
	`±hªad_muãx_de°roy
(&
Â
->
f_lock
);

100 
	`‰ì
(
Â
);

102 
Â
->
f_cou¡
--;

103 
	`±hªad_muãx_u∆ock
(&
Â
->
f_lock
);

105 
	}
}

	@threads/mutex3.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	#NHASH
 29

	)

5 
	#HASH
(
Â
Ë((()Â)%
NHASH
)

	)

7 
foo
 *
	gfh
[
NHASH
];

8 
±hªad_muãx_t
 
	ghashlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

10 
	sfoo
 {

11 
	mf_cou¡
;

12 
±hªad_muãx_t
 
	mf_lock
;

13 
foo
 *
	mf_√xt
;

14 
	mf_id
;

18 
foo
 *

19 
	$foo_Æloc
()

21 
foo
 *
Â
;

22 
idx
;

24 i‡((
Â
 = 
	`mÆloc
((
foo
))Ë!
NULL
) {

25 
Â
->
f_cou¡
 = 1;

26 i‡(
	`±hªad_muãx_öô
(&
Â
->
f_lock
, 
NULL
) != 0) {

27 
	`‰ì
(
Â
);

28 (
NULL
);

30 
idx
 = 
	`HASH
(
Â
);

31 
	`±hªad_muãx_lock
(&
hashlock
);

32 
Â
->
f_√xt
 = 
fh
[
idx
];

33 
fh
[
idx
] = 
Â
->
f_√xt
;

34 
	`±hªad_muãx_lock
(&
Â
->
f_lock
);

35 
	`±hªad_muãx_u∆ock
(&
hashlock
);

38 (
Â
);

39 
	}
}

42 
	$foo_hﬁd
(
foo
 *
Â
)

44 
	`±hªad_muãx_lock
(&
hashlock
);

45 
Â
->
f_cou¡
++;

46 
	`±hªad_muãx_u∆ock
(&
hashlock
);

47 
	}
}

49 
foo
 *

50 
	$foo_föd
(
id
)

52 
foo
 *
Â
;

53 
idx
;

55 
idx
 = 
	`HASH
(
Â
);

56 
	`±hªad_muãx_lock
(&
hashlock
);

57 
Â
 = 
fh
[
idx
]; f∞!
NULL
; f∞Â->
f_√xt
) {

58 i‡(
Â
->
f_id
 =
id
) {

59 
Â
->
f_cou¡
++;

63 
	`±hªad_muãx_u∆ock
(&
hashlock
);

64 (
Â
);

65 
	}
}

68 
	$foo_ªÀ
(
foo
 *
Â
)

70 
foo
 *
tÂ
;

71 
idx
;

73 
	`±hªad_muãx_lock
(&
hashlock
);

74 i‡(--
Â
->
f_cou¡
 == 0) {

75 
idx
 = 
	`HASH
(
Â
);

76 
tÂ
 = 
fh
[
idx
];

77 i‡(
tÂ
 =
Â
) {

78 
fh
[
idx
] = 
Â
->
f_√xt
;

80 
tÂ
->
f_√xt
 !
Â
)

81 
tÂ
 =ÅÂ->
f_√xt
;

82 
tÂ
->
f_√xt
 = 
Â
->f_next;

84 
	`±hªad_muãx_u∆ock
(&
hashlock
);

85 
	`±hªad_muãx_de°roy
(&
Â
->
f_lock
);

86 
	`‰ì
(
Â
);

88 
	`±hªad_muãx_u∆ock
(&
hashlock
);

90 
	}
}

	@threads/rwlock.c

1 
	~<°dlib.h
>

2 
	~<±hªad.h
>

4 
	sjob
 {

5 
job
 *
	mj_√xt
;

6 
job
 *
	mj_¥ev
;

7 
±hªad_t
 
	mj_id
;

11 
	squeue
 {

12 
job
 *
	mq_hód
;

13 
job
 *
	mq_èû
;

14 
±hªad_rwlock_t
 
	mq_lock
;

21 
	$queue_öô
(
queue
 *
qp
)

23 
îr
;

25 
qp
->
q_hód
 = 
NULL
;

26 
qp
->
q_èû
 = 
NULL
;

27 
îr
 = 
	`±hªad_rwlock_öô
(&
qp
->
q_lock
, 
NULL
);

28 i‡(
îr
 != 0)

29 (
îr
);

34 
	}
}

40 
	$job_ö£π
(
queue
 *
qp
, 
job
 *
jp
)

42 
	`±hªad_rwlock_wæock
(&
qp
->
q_lock
);

43 
jp
->
j_√xt
 = 
qp
->
q_hód
;

44 
jp
->
j_¥ev
 = 
NULL
;

45 i‡(
qp
->
q_hód
 !
NULL
)

46 
qp
->
q_hód
->
j_¥ev
 = 
jp
;

48 
qp
->
q_èû
 = 
jp
;

49 
qp
->
q_hód
 = 
jp
;

50 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

51 
	}
}

57 
	$job_≠≥nd
(
queue
 *
qp
, 
job
 *
jp
)

59 
	`±hªad_rwlock_wæock
(&
qp
->
q_lock
);

60 
jp
->
j_√xt
 = 
NULL
;

61 
jp
->
j_¥ev
 = 
qp
->
q_èû
;

62 i‡(
qp
->
q_èû
 !
NULL
)

63 
qp
->
q_èû
->
j_√xt
 = 
jp
;

65 
qp
->
q_hód
 = 
jp
;

66 
qp
->
q_èû
 = 
jp
;

67 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

68 
	}
}

74 
	$job_ªmove
(
queue
 *
qp
, 
job
 *
jp
)

76 
	`±hªad_rwlock_wæock
(&
qp
->
q_lock
);

77 i‡(
jp
 =
qp
->
q_hód
) {

78 
qp
->
q_hód
 = 
jp
->
j_√xt
;

79 i‡(
qp
->
q_èû
 =
jp
)

80 
qp
->
q_èû
 = 
NULL
;

81 } i‡(
jp
 =
qp
->
q_èû
) {

82 
qp
->
q_èû
 = 
jp
->
j_¥ev
;

83 i‡(
qp
->
q_hód
 =
jp
)

84 
qp
->
q_hód
 = 
NULL
;

86 
jp
->
j_¥ev
->
j_√xt
 = jp->j_next;

87 
jp
->
j_√xt
->
j_¥ev
 = jp->j_prev;

89 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

90 
	}
}

95 
job
 *

96 
	$job_föd
(
queue
 *
qp
, 
±hªad_t
 
id
)

98 
job
 *
jp
;

100 i‡(
	`±hªad_rwlock_rdlock
(&
qp
->
q_lock
) != 0)

101 (
NULL
);

103 
jp
 = 
qp
->
q_hód
; j∞!
NULL
; j∞jp->
j_√xt
)

104 i‡(
	`±hªad_equÆ
(
jp
->
j_id
, 
id
))

107 
	`±hªad_rwlock_u∆ock
(&
qp
->
q_lock
);

108 (
jp
);

109 
	}
}

	@threads/threadid.c

1 
	~"../ö˛ude/≠ue.h
"

2 
	~<±hªad.h
>

4 
±hªad_t
 
	g¡id
;

7 
	$¥ötids
(c⁄° *
s
)

9 
pid_t
 
pid
;

10 
±hªad_t
 
tid
;

12 
pid
 = 
	`gëpid
();

13 
tid
 = 
	`±hªad_£lf
();

14 
	`¥ötf
("%†pid %uÅid %u (0x%x)\n", 
s
, ()
pid
,

15 ()
tid
, ()tid);

16 
	}
}

19 
	$thr_‚
(*
¨g
)

21 
	`¥ötids
("newÅhread: ");

23 
	}
}

26 
	$maö
()

28 
îr
;

30 
îr
 = 
	`±hªad_¸óã
(&
¡id
, 
NULL
, 
thr_‚
, NULL);

31 i‡(
îr
 != 0)

32 
	`îr_quô
("ˇn'à¸óãÅhªad: %s\n", 
	`°ªº‹
(
îr
));

33 
	`¥ötids
("mainÅhread:");

34 
	`¶ìp
(1);

35 
	`exô
(0);

36 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

135 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

137 #ifde‡
__USE_XOPEN2K8


142 
DIR
 *
	`fd›ídú
 (
__fd
);

150 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

162 #i‚de‡
__USE_FILE_OFFSET64


163 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

165 #ifde‡
__REDIRECT


166 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

167 
	`__n⁄nuŒ
 ((1));

169 
	#ªaddú
 
ªaddú64


	)

173 #ifde‡
__USE_LARGEFILE64


174 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

177 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


183 #i‚de‡
__USE_FILE_OFFSET64


184 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

185 
dúít
 *
__ª°ri˘
 
__íåy
,

186 
dúít
 **
__ª°ri˘
 
__ªsu…
)

187 
	`__n⁄nuŒ
 ((1, 2, 3));

189 #ifde‡
__REDIRECT


190 
	`__REDIRECT
 (
ªaddú_r
,

191 (
DIR
 *
__ª°ri˘
 
__dúp
,

192 
dúít
 *
__ª°ri˘
 
__íåy
,

193 
dúít
 **
__ª°ri˘
 
__ªsu…
),

194 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3));

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

251 #i‚de‡
__USE_FILE_OFFSET64


252 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

253 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

254 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

255 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

256 
__c⁄°
 
dúít
 **))

257 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__REDIRECT


260 
	`__REDIRECT
 (
sˇndú
,

261 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

262 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

263 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

264 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

265 
__c⁄°
 
dúít
 **)),

266 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

268 
	#sˇndú
 
sˇndú64


	)

272 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


275 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

276 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

277 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

278 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

279 
__c⁄°
 
dúít64
 **))

280 
	`__n⁄nuŒ
 ((1, 2));

284 #i‚de‡
__USE_FILE_OFFSET64


285 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

286 
__c⁄°
 
dúít
 **
__e2
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__REDIRECT


290 
	`__REDIRECT_NTH
 (
Æphas‹t
,

291 (
__c⁄°
 
dúít
 **
__e1
,

292 
__c⁄°
 
dúít
 **
__e2
),

293 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 
	#Æphas‹t
 
Æphas‹t64


	)

299 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


300 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

301 
__c⁄°
 
dúít64
 **
__e2
)

302 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


312 #i‚de‡
__USE_FILE_OFFSET64


313 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

314 
size_t
 
__nbyãs
,

315 
__off_t
 *
__ª°ri˘
 
__ba£p
)

316 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

318 #ifde‡
__REDIRECT


319 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

320 (
__fd
, *
__ª°ri˘
 
__buf
,

321 
size_t
 
__nbyãs
,

322 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

323 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

325 
	#gëdúíåõs
 
gëdúíåõs64


	)

329 #ifde‡
__USE_LARGEFILE64


330 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

331 
size_t
 
__nbyãs
,

332 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

333 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

337 #ifde‡
__USE_GNU


339 #i‚de‡
__USE_FILE_OFFSET64


340 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

341 
__c⁄°
 
dúít
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 #ifde‡
__REDIRECT


345 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

346 (
__c⁄°
 
dúít
 **
__e1
,

347 
__c⁄°
 
dúít
 **
__e2
),

348 
vîsi⁄s‹t64
)

349 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

351 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

355 #ifde‡
__USE_LARGEFILE64


356 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

357 
__c⁄°
 
dúít64
 **
__e2
)

358 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

362 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/grp.h

23 #i‚def 
_GRP_H


24 
	#_GRP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

43 
	sgroup


45 *
	mgr_«me
;

46 *
	mgr_∑sswd
;

47 
__gid_t
 
	mgr_gid
;

48 **
	mgr_mem
;

52 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


53 
	#__√ed_FILE


	)

54 
	~<°dio.h
>

58 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


63 
£tgª¡
 ();

69 
ídgª¡
 ();

75 
group
 *
gëgª¡
 ();

78 #ifdef 
__USE_SVID


85 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

88 #ifde‡
__USE_GNU


95 
putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

96 
FILE
 *
__ª°ri˘
 
__f
);

103 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

109 
group
 *
gëg∫am
 (
__c⁄°
 *
__«me
);

111 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


113 #ifde‡
__USE_MISC


116 
	#NSS_BUFLEN_GROUP
 1024

	)

132 #ifde‡
__USE_GNU


133 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

134 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

135 
group
 **
__ª°ri˘
 
__ªsu…
);

142 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

143 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

144 
group
 **
__ª°ri˘
 
__ªsu…
);

150 
gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
group
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
group
 **
__ª°ri˘
 
__ªsu…
);

155 #ifdef 
__USE_SVID


163 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 
group
 *
__ª°ri˘
 
__ªsu…buf
,

165 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

166 
group
 **
__ª°ri˘
 
__ªsu…
);

172 #ifdef 
__USE_BSD


174 
	#__√ed_size_t


	)

175 
	~<°ddef.h
>

178 
	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

188 
	`gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

189 
__gid_t
 *
__groups
, *
__ngroups
);

199 
	`öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
);

203 
__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

72 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


73 
	#NETDB_INTERNAL
 -1

	)

74 
	#NETDB_SUCCESS
 0

	)

75 
	#NO_ADDRESS
 
NO_DATA


	)

78 #ifde‡
__USE_XOPEN2K


80 
	#IPPORT_RESERVED
 1024

	)

83 #ifde‡
__USE_GNU


85 
	#SCOPE_DELIMITER
 '%'

	)

88 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


91 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

94 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

99 
	sho°ít


101 *
h_«me
;

102 **
h_Æü£s
;

103 
h_addπy≥
;

104 
h_Àngth
;

105 **
h_addr_li°
;

106 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


107 
	#h_addr
 
h_addr_li°
[0]

	)

116 
	`£tho°ít
 (
__°ay_›í
);

122 
	`ídho°ít
 ();

129 
ho°ít
 *
	`gëho°ít
 ();

136 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

137 
__ty≥
);

143 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

145 #ifde‡
__USE_MISC


154 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

166 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

168 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

169 *
__ª°ri˘
 
__h_î∫›
);

171 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

172 
__ty≥
,

173 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

175 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

176 *
__ª°ri˘
 
__h_î∫›
);

178 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

179 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

180 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

181 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

182 *
__ª°ri˘
 
__h_î∫›
);

184 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

185 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

186 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

187 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

188 *
__ª°ri˘
 
__h_î∫›
);

197 
	`£äëít
 (
__°ay_›í
);

203 
	`íd√ã¡
 ();

210 
√ã¡
 *
	`gë√ã¡
 ();

217 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

223 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

225 #ifdef 
__USE_MISC


236 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

237 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

238 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

239 *
__ª°ri˘
 
__h_î∫›
);

241 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

242 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

243 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

244 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

245 *
__ª°ri˘
 
__h_î∫›
);

247 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

248 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

249 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

250 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

251 *
__ª°ri˘
 
__h_î∫›
);

256 
	s£rvít


258 *
s_«me
;

259 **
s_Æü£s
;

260 
s_p‹t
;

261 *
s_¥Ÿo
;

269 
	`£t£rvít
 (
__°ay_›í
);

275 
	`íd£rvít
 ();

282 
£rvít
 *
	`gë£rvít
 ();

289 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

290 
__c⁄°
 *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

313 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

424 
__c⁄°
 *
__u£r
, __c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

453 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

454 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

465 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

466 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 
__c⁄°
 *
__ª°ri˘
 
__«me
,

481 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

482 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 
__c⁄°
 *
__ª°ri˘
 
__«me
,

493 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

494 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

506 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

516 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

527 
	`ºesvp‹t
 (*
__Æp‹t
);

536 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

541 #ifdef 
__USE_POSIX


543 
	saddröfo


545 
ai_Êags
;

546 
ai_Ámûy
;

547 
ai_sockty≥
;

548 
ai_¥Ÿocﬁ
;

549 
sockÀn_t
 
ai_addæí
;

550 
sockaddr
 *
ai_addr
;

551 *
ai_ˇn⁄«me
;

552 
addröfo
 *
ai_√xt
;

555 #ifde‡
__USE_GNU


557 
	sgaicb


559 c⁄° *
¨_«me
;

560 c⁄° *
¨_£rvi˚
;

561 c⁄° 
addröfo
 *
¨_ªque°
;

562 
addröfo
 *
¨_ªsu…
;

564 
__ªtu∫
;

565 
__unu£d
[5];

569 
	#GAI_WAIT
 0

	)

570 
	#GAI_NOWAIT
 1

	)

574 
	#AI_PASSIVE
 0x0001

	)

575 
	#AI_CANONNAME
 0x0002

	)

576 
	#AI_NUMERICHOST
 0x0004

	)

577 
	#AI_V4MAPPED
 0x0008

	)

578 
	#AI_ALL
 0x0010

	)

579 
	#AI_ADDRCONFIG
 0x0020

	)

581 #ifde‡
__USE_GNU


582 
	#AI_IDN
 0x0040

	)

585 
	#AI_CANONIDN
 0x0080

	)

586 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

588 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

591 
	#AI_NUMERICSERV
 0x0400

	)

594 
	#EAI_BADFLAGS
 -1

	)

595 
	#EAI_NONAME
 -2

	)

596 
	#EAI_AGAIN
 -3

	)

597 
	#EAI_FAIL
 -4

	)

598 
	#EAI_FAMILY
 -6

	)

599 
	#EAI_SOCKTYPE
 -7

	)

600 
	#EAI_SERVICE
 -8

	)

601 
	#EAI_MEMORY
 -10

	)

602 
	#EAI_SYSTEM
 -11

	)

603 
	#EAI_OVERFLOW
 -12

	)

604 #ifde‡
__USE_GNU


605 
	#EAI_NODATA
 -5

	)

606 
	#EAI_ADDRFAMILY
 -9

	)

607 
	#EAI_INPROGRESS
 -100

	)

608 
	#EAI_CANCELED
 -101

	)

609 
	#EAI_NOTCANCELED
 -102

	)

610 
	#EAI_ALLDONE
 -103

	)

611 
	#EAI_INTR
 -104

	)

612 
	#EAI_IDN_ENCODE
 -105

	)

615 #ifde‡
__USE_MISC


616 
	#NI_MAXHOST
 1025

	)

617 
	#NI_MAXSERV
 32

	)

620 
	#NI_NUMERICHOST
 1

	)

621 
	#NI_NUMERICSERV
 2

	)

622 
	#NI_NOFQDN
 4

	)

623 
	#NI_NAMEREQD
 8

	)

624 
	#NI_DGRAM
 16

	)

625 #ifde‡
__USE_GNU


626 
	#NI_IDN
 32

	)

627 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

629 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

638 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

639 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

640 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

641 
addröfo
 **
__ª°ri˘
 
__∑i
);

644 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

647 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

653 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

654 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

655 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

656 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

659 #ifde‡
__USE_GNU


668 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

669 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

679 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

680 
__c⁄°
 
time•ec
 *
__timeout
);

683 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

686 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

689 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/shadow.h

21 #i‚de‡
_SHADOW_H


22 
	#_SHADOW_H
 1

	)

24 
	~<„©uªs.h
>

26 
	~<∑ths.h
>

28 
	#__√ed_FILE


	)

29 
	~<°dio.h
>

30 
	#__√ed_size_t


	)

31 
	~<°ddef.h
>

34 
	#SHADOW
 
_PATH_SHADOW


	)

37 
__BEGIN_DECLS


40 
	s•wd


42 *
	m•_«mp
;

43 *
	m•_pwdp
;

44 
	m•_l°chg
;

45 
	m•_mö
;

46 
	m•_max
;

47 
	m•_w¨n
;

49 
	m•_öa˘
;

51 
	m•_expúe
;

53 
	m•_Êag
;

63 
£t•ít
 ();

71 
íd•ít
 ();

79 
•wd
 *
gë•ít
 ();

87 
•wd
 *
gë•«m
 (
__c⁄°
 *
__«me
);

95 
•wd
 *
sgë•ít
 (
__c⁄°
 *
__°rög
);

103 
•wd
 *
fgë•ít
 (
FILE
 *
__°ªam
);

111 
put•ít
 (
__c⁄°
 
•wd
 *
__p
, 
FILE
 *
__°ªam
);

114 #ifde‡
__USE_MISC


121 
gë•ít_r
 (
•wd
 *
__ªsu…_buf
, *
__buf„r
,

122 
size_t
 
__buÊí
, 
•wd
 **
__ªsu…
);

124 
gë•«m_r
 (
__c⁄°
 *
__«me
, 
•wd
 *
__ªsu…_buf
,

125 *
__buf„r
, 
size_t
 
__buÊí
,

126 
•wd
 **
__ªsu…
);

128 
sgë•ít_r
 (
__c⁄°
 *
__°rög
, 
•wd
 *
__ªsu…_buf
,

129 *
__buf„r
, 
size_t
 
__buÊí
,

130 
•wd
 **
__ªsu…
);

132 
fgë•ít_r
 (
FILE
 *
__°ªam
, 
•wd
 *
__ªsu…_buf
,

133 *
__buf„r
, 
size_t
 
__buÊí
,

134 
•wd
 **
__ªsu…
);

142 
	$lckpwdf
 (Ë
__THROW
;

145 
	$ulckpwdf
 (Ë
__THROW
;

147 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

33 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

36 
__BEGIN_DECLS


39 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

40 
__THROW
 
__©åibuã_puª__
;

43 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

46 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

50 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 
__c⁄°
 *

69 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 
__c⁄°
 *

97 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

110 
__THROW
 
__©åibuã_puª__
;

113 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

114 
__THROW
 
__©åibuã_puª__
;

116 #ifdef 
__USE_XOPEN2K8


120 
	~<xloˇÀ.h
>

124 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

125 
__loˇÀ_t
 
__loc
)

126 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

128 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

129 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

130 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

133 
__END_DECLS


	@/usr/include/stropts.h

19 #i‚de‡
_STROPTS_H


20 
	#_STROPTS_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/xtôy≥s.h
>

26 #i‚de‡
__gid_t_deföed


27 
__gid_t
 
	tgid_t
;

28 
	#__gid_t_deföed


	)

31 #i‚de‡
__uid_t_deföed


32 
__uid_t
 
	tuid_t
;

33 
	#__uid_t_deföed


	)

36 
__t_usˇœr_t
 
	tt_usˇœr_t
;

39 
	~<bôs/°r›ts.h
>

42 
__BEGIN_DECLS


45 
	$iß°ªam
 (
__fûdes
Ë
__THROW
;

51 
	`gëmsg
 (
__fûdes
, 
°rbuf
 *
__ª°ri˘
 
__˘Õå
,

52 
°rbuf
 *
__ª°ri˘
 
__d©≠å
,

53 *
__ª°ri˘
 
__Êag•
);

60 
	`gëpmsg
 (
__fûdes
, 
°rbuf
 *
__ª°ri˘
 
__˘Õå
,

61 
°rbuf
 *
__ª°ri˘
 
__d©≠å
,

62 *
__ª°ri˘
 
__b™dp
, *__ª°ri˘ 
__Êag•
);

67 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

73 
	`putmsg
 (
__fûdes
, 
__c⁄°
 
°rbuf
 *
__˘Õå
,

74 
__c⁄°
 
°rbuf
 *
__d©≠å
, 
__Êags
);

80 
	`puçmsg
 (
__fûdes
, 
__c⁄°
 
°rbuf
 *
__˘Õå
,

81 
__c⁄°
 
°rbuf
 *
__d©≠å
, 
__b™d
, 
__Êags
);

85 
	$Áâach
 (
__fûdes
, 
__c⁄°
 *
__∑th
Ë
__THROW
;

88 
	$fdëach
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

90 
__END_DECLS


	@/usr/include/sys/acct.h

19 #i‚de‡
_SYS_ACCT_H


20 
	#_SYS_ACCT_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	#__√ed_time_t


	)

26 
	~<time.h
>

27 
	~<sys/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 
	#ACCT_COMM
 16

	)

39 
u_öt16_t
 
	tcomp_t
;

41 
	sac˘


43 
	mac_Êag
;

44 
u_öt16_t
 
	mac_uid
;

45 
u_öt16_t
 
	mac_gid
;

46 
u_öt16_t
 
	mac_ây
;

47 
u_öt32_t
 
	mac_btime
;

48 
comp_t
 
	mac_utime
;

49 
comp_t
 
	mac_°ime
;

50 
comp_t
 
	mac_ëime
;

51 
comp_t
 
	mac_mem
;

52 
comp_t
 
	mac_io
;

53 
comp_t
 
	mac_rw
;

54 
comp_t
 
	mac_möÊt
;

55 
comp_t
 
	mac_majÊt
;

56 
comp_t
 
	mac_sw≠s
;

57 
u_öt32_t
 
	mac_exôcode
;

58 
	mac_comm
[
ACCT_COMM
+1];

59 
	mac_∑d
[10];

63 
	sac˘_v3


65 
	mac_Êag
;

66 
	mac_vîsi⁄
;

67 
u_öt16_t
 
	mac_ây
;

68 
u_öt32_t
 
	mac_exôcode
;

69 
u_öt32_t
 
	mac_uid
;

70 
u_öt32_t
 
	mac_gid
;

71 
u_öt32_t
 
	mac_pid
;

72 
u_öt32_t
 
	mac_µid
;

73 
u_öt32_t
 
	mac_btime
;

74 
	mac_ëime
;

75 
comp_t
 
	mac_utime
;

76 
comp_t
 
	mac_°ime
;

77 
comp_t
 
	mac_mem
;

78 
comp_t
 
	mac_io
;

79 
comp_t
 
	mac_rw
;

80 
comp_t
 
	mac_möÊt
;

81 
comp_t
 
	mac_majÊt
;

82 
comp_t
 
	mac_sw≠s
;

83 
	mac_comm
[
ACCT_COMM
];

89 
	mAFORK
 = 0x01,

90 
	mASU
 = 0x02,

91 
	mACORE
 = 0x08,

92 
	mAXSIG
 = 0x10

95 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


96 
	#ACCT_BYTEORDER
 0x80

	)

98 
	#ACCT_BYTEORDER
 0x00

	)

101 
	#AHZ
 100

	)

105 
	$ac˘
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

107 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/ipc.h

19 #i‚de‡
_SYS_IPC_H


20 
	#_SYS_IPC_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

29 
	~<bôs/ù˘y≥s.h
>

30 
	~<bôs/ùc.h
>

32 #i‚de‡
__uid_t_deföed


33 
__uid_t
 
	tuid_t
;

34 
	#__uid_t_deföed


	)

37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__mode_t_deföed


43 
__mode_t
 
	tmode_t
;

44 
	#__mode_t_deföed


	)

47 #i‚de‡
__key_t_deföed


48 
__key_t
 
	tkey_t
;

49 
	#__key_t_deföed


	)

52 
__BEGIN_DECLS


55 
key_t
 
	$·ok
 (
__c⁄°
 *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

57 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sem.h

19 #i‚de‡
_SYS_SEM_H


20 
	#_SYS_SEM_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/£m.h
>

33 #ifde‡
__USE_GNU


34 
	#__√ed_time•ec


	)

35 
	~<time.h
>

42 
	s£mbuf


44 
	m£m_num
;

45 
	m£m_›
;

46 
	m£m_Êg
;

50 
__BEGIN_DECLS


53 
	$£m˘l
 (
__£mid
, 
__£mnum
, 
__cmd
, ...Ë
__THROW
;

56 
	$£mgë
 (
key_t
 
__key
, 
__n£ms
, 
__£mÊg
Ë
__THROW
;

59 
	$£m›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
Ë
__THROW
;

61 #ifde‡
__USE_GNU


63 
	$£mtimed›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
,

64 
__c⁄°
 
time•ec
 *
__timeout
Ë
__THROW
;

67 
__END_DECLS


	@/usr/include/sys/shm.h

19 #i‚de‡
_SYS_SHM_H


20 
	#_SYS_SHM_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/shm.h
>

34 
	#__√ed_time_t


	)

35 
	~<time.h
>

37 #ifde‡
__USE_XOPEN


38 #i‚de‡
__pid_t_deföed


39 
__pid_t
 
	tpid_t
;

40 
	#__pid_t_deföed


	)

45 
__BEGIN_DECLS


51 
	$shm˘l
 (
__shmid
, 
__cmd
, 
shmid_ds
 *
__buf
Ë
__THROW
;

54 
	$shmgë
 (
key_t
 
__key
, 
size_t
 
__size
, 
__shmÊg
Ë
__THROW
;

57 *
	$shm©
 (
__shmid
, 
__c⁄°
 *
__shmaddr
, 
__shmÊg
)

58 
__THROW
;

61 
	$shmdt
 (
__c⁄°
 *
__shmaddr
Ë
__THROW
;

63 
__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/termios.h

1 #i‚de‡
_SYS_TERMIOS_H


2 
	#_SYS_TERMIOS_H


	)

3 
	~<ãrmios.h
>

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/sys/un.h

19 #i‚def 
_SYS_UN_H


20 
	#_SYS_UN_H
 1

	)

22 
	~<sys/cdefs.h
>

25 
	~<bôs/sockaddr.h
>

27 
__BEGIN_DECLS


30 
	ssockaddr_un


32 
__SOCKADDR_COMMON
 (
sun_
);

33 
	msun_∑th
[108];

37 #ifde‡
__USE_MISC


38 
	~<°rög.h
>

41 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

42 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

45 
	g__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || !deföed 
__USE_XOPEN


38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #ifde‡
__USE_UNIX98


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

70 
	#IP_PMTUDISC_DONT
 0

	)

71 
	#IP_PMTUDISC_WANT
 1

	)

72 
	#IP_PMTUDISC_DO
 2

	)

73 
	#IP_PMTUDISC_PROBE
 3

	)

76 
	#SOL_IP
 0

	)

78 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

79 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

80 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


86 
	sù_›ts


88 
ö_addr
 
	mù_d°
;

89 
	mù_›ts
[40];

93 
	sù_mªqn


95 
ö_addr
 
	mimr_mu…üddr
;

96 
ö_addr
 
	mimr_addªss
;

97 
	mimr_ifödex
;

101 
	sö_pktöfo


103 
	mùi_ifödex
;

104 
ö_addr
 
	mùi_•ec_d°
;

105 
ö_addr
 
	mùi_addr
;

112 
	#IPV6_ADDRFORM
 1

	)

113 
	#IPV6_2292PKTINFO
 2

	)

114 
	#IPV6_2292HOPOPTS
 3

	)

115 
	#IPV6_2292DSTOPTS
 4

	)

116 
	#IPV6_2292RTHDR
 5

	)

117 
	#IPV6_2292PKTOPTIONS
 6

	)

118 
	#IPV6_CHECKSUM
 7

	)

119 
	#IPV6_2292HOPLIMIT
 8

	)

121 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

123 
	#IPV6_NEXTHOP
 9

	)

124 
	#IPV6_AUTHHDR
 10

	)

125 
	#IPV6_UNICAST_HOPS
 16

	)

126 
	#IPV6_MULTICAST_IF
 17

	)

127 
	#IPV6_MULTICAST_HOPS
 18

	)

128 
	#IPV6_MULTICAST_LOOP
 19

	)

129 
	#IPV6_JOIN_GROUP
 20

	)

130 
	#IPV6_LEAVE_GROUP
 21

	)

131 
	#IPV6_ROUTER_ALERT
 22

	)

132 
	#IPV6_MTU_DISCOVER
 23

	)

133 
	#IPV6_MTU
 24

	)

134 
	#IPV6_RECVERR
 25

	)

135 
	#IPV6_V6ONLY
 26

	)

136 
	#IPV6_JOIN_ANYCAST
 27

	)

137 
	#IPV6_LEAVE_ANYCAST
 28

	)

138 
	#IPV6_IPSEC_POLICY
 34

	)

139 
	#IPV6_XFRM_POLICY
 35

	)

141 
	#IPV6_RECVPKTINFO
 49

	)

142 
	#IPV6_PKTINFO
 50

	)

143 
	#IPV6_RECVHOPLIMIT
 51

	)

144 
	#IPV6_HOPLIMIT
 52

	)

145 
	#IPV6_RECVHOPOPTS
 53

	)

146 
	#IPV6_HOPOPTS
 54

	)

147 
	#IPV6_RTHDRDSTOPTS
 55

	)

148 
	#IPV6_RECVRTHDR
 56

	)

149 
	#IPV6_RTHDR
 57

	)

150 
	#IPV6_RECVDSTOPTS
 58

	)

151 
	#IPV6_DSTOPTS
 59

	)

153 
	#IPV6_RECVTCLASS
 66

	)

154 
	#IPV6_TCLASS
 67

	)

157 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

158 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

159 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

160 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

163 
	#IPV6_PMTUDISC_DONT
 0

	)

164 
	#IPV6_PMTUDISC_WANT
 1

	)

165 
	#IPV6_PMTUDISC_DO
 2

	)

166 
	#IPV6_PMTUDISC_PROBE
 3

	)

169 
	#SOL_IPV6
 41

	)

170 
	#SOL_ICMPV6
 58

	)

173 
	#IPV6_RTHDR_LOOSE
 0

	)

174 
	#IPV6_RTHDR_STRICT
 1

	)

176 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/ipc.h

19 #i‚de‡
_SYS_IPC_H


23 
	~<bôs/ty≥s.h
>

26 
	#IPC_CREAT
 01000

	)

27 
	#IPC_EXCL
 02000

	)

28 
	#IPC_NOWAIT
 04000

	)

31 
	#IPC_RMID
 0

	)

32 
	#IPC_SET
 1

	)

33 
	#IPC_STAT
 2

	)

34 #ifde‡
__USE_GNU


35 
	#IPC_INFO
 3

	)

39 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

43 
	sùc_≥rm


45 
__key_t
 
	m__key
;

46 
__uid_t
 
	muid
;

47 
__gid_t
 
	mgid
;

48 
__uid_t
 
	mcuid
;

49 
__gid_t
 
	mcgid
;

50 
	mmode
;

51 
	m__∑d1
;

52 
	m__£q
;

53 
	m__∑d2
;

54 
	m__unu£d1
;

55 
	m__unu£d2
;

	@/usr/include/bits/ipctypes.h

24 #i‚de‡
_BITS_IPCTYPES_H


25 
	#_BITS_IPCTYPES_H
 1

	)

27 
	~<bôs/ty≥s.h
>

30 #i‡
__WORDSIZE
 == 32

31 
	t__ùc_pid_t
;

33 
	t__ùc_pid_t
;

	@/usr/include/bits/mman.h

20 #i‚de‡
_SYS_MMAN_H


33 
	#PROT_READ
 0x1

	)

34 
	#PROT_WRITE
 0x2

	)

35 
	#PROT_EXEC
 0x4

	)

36 
	#PROT_NONE
 0x0

	)

37 
	#PROT_GROWSDOWN
 0x01000000

	)

39 
	#PROT_GROWSUP
 0x02000000

	)

43 
	#MAP_SHARED
 0x01

	)

44 
	#MAP_PRIVATE
 0x02

	)

45 #ifde‡
__USE_MISC


46 
	#MAP_TYPE
 0x0‡

	)

50 
	#MAP_FIXED
 0x10

	)

51 #ifde‡
__USE_MISC


52 
	#MAP_FILE
 0

	)

53 
	#MAP_ANONYMOUS
 0x20

	)

54 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

55 
	#MAP_32BIT
 0x40

	)

59 #ifde‡
__USE_MISC


60 
	#MAP_GROWSDOWN
 0x00100

	)

61 
	#MAP_DENYWRITE
 0x00800

	)

62 
	#MAP_EXECUTABLE
 0x01000

	)

63 
	#MAP_LOCKED
 0x02000

	)

64 
	#MAP_NORESERVE
 0x04000

	)

65 
	#MAP_POPULATE
 0x08000

	)

66 
	#MAP_NONBLOCK
 0x10000

	)

67 
	#MAP_STACK
 0x20000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 1

	)

77 
	#MCL_FUTURE
 2

	)

81 #ifde‡
__USE_GNU


82 
	#MREMAP_MAYMOVE
 1

	)

83 
	#MREMAP_FIXED
 2

	)

87 #ifde‡
__USE_BSD


88 
	#MADV_NORMAL
 0

	)

89 
	#MADV_RANDOM
 1

	)

90 
	#MADV_SEQUENTIAL
 2

	)

91 
	#MADV_WILLNEED
 3

	)

92 
	#MADV_DONTNEED
 4

	)

93 
	#MADV_REMOVE
 9

	)

94 
	#MADV_DONTFORK
 10

	)

95 
	#MADV_DOFORK
 11

	)

96 
	#MADV_MERGEABLE
 12

	)

97 
	#MADV_UNMERGEABLE
 13

	)

98 
	#MADV_HWPOISON
 100

	)

102 #ifde‡
__USE_XOPEN2K


103 
	#POSIX_MADV_NORMAL
 0

	)

104 
	#POSIX_MADV_RANDOM
 1

	)

105 
	#POSIX_MADV_SEQUENTIAL
 2

	)

106 
	#POSIX_MADV_WILLNEED
 3

	)

107 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/sem.h

19 #i‚de‡
_SYS_SEM_H


23 
	~<sys/ty≥s.h
>

26 
	#SEM_UNDO
 0x1000

	)

29 
	#GETPID
 11

	)

30 
	#GETVAL
 12

	)

31 
	#GETALL
 13

	)

32 
	#GETNCNT
 14

	)

33 
	#GETZCNT
 15

	)

34 
	#SETVAL
 16

	)

35 
	#SETALL
 17

	)

39 
	s£mid_ds


41 
ùc_≥rm
 
	m£m_≥rm
;

42 
__time_t
 
	m£m_Ÿime
;

43 
	m__unu£d1
;

44 
__time_t
 
	m£m_˘ime
;

45 
	m__unu£d2
;

46 
	m£m_n£ms
;

47 
	m__unu£d3
;

48 
	m__unu£d4
;

65 
	#_SEM_SEMUN_UNDEFINED
 1

	)

67 #ifde‡
__USE_MISC


70 
	#SEM_STAT
 18

	)

71 
	#SEM_INFO
 19

	)

73 
	s£möfo


75 
	m£mm≠
;

76 
	m£mmni
;

77 
	m£mmns
;

78 
	m£mmnu
;

79 
	m£mm¶
;

80 
	m£m›m
;

81 
	m£mume
;

82 
	m£musz
;

83 
	m£mvmx
;

84 
	m£m´m
;

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

20 #i‚de‡
_SETJMP_H


25 #ifde‡
__REDIRECT_NTH


26 
__REDIRECT_NTH
 (
l⁄gjmp
,

27 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

28 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

29 
__REDIRECT_NTH
 (
_l⁄gjmp
,

30 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

31 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

32 
__REDIRECT_NTH
 (
sigl⁄gjmp
,

33 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

34 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

36 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

37 
__THROW
 
__©åibuã__
 ((
__n‹ëu∫__
));

38 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

40 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/shm.h

20 #i‚de‡
_SYS_SHM_H


24 
	~<bôs/ty≥s.h
>

27 
	#SHM_R
 0400

	)

28 
	#SHM_W
 0200

	)

31 
	#SHM_RDONLY
 010000

	)

32 
	#SHM_RND
 020000

	)

33 
	#SHM_REMAP
 040000

	)

34 
	#SHM_EXEC
 0100000

	)

37 
	#SHM_LOCK
 11

	)

38 
	#SHM_UNLOCK
 12

	)

40 
	g__BEGIN_DECLS


43 
	#SHMLBA
 (
	`__gë∑gesize
 ())

	)

44 
	$__gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

48 
	tshm©t_t
;

51 
	sshmid_ds


53 
ùc_≥rm
 
shm_≥rm
;

54 
size_t
 
shm_£gsz
;

55 
__time_t
 
shm_©ime
;

56 #i‡
__WORDSIZE
 == 32

57 
__unu£d1
;

59 
__time_t
 
shm_dtime
;

60 #i‡
__WORDSIZE
 == 32

61 
__unu£d2
;

63 
__time_t
 
shm_˘ime
;

64 #i‡
__WORDSIZE
 == 32

65 
__unu£d3
;

67 
__pid_t
 
shm_˝id
;

68 
__pid_t
 
shm_Õid
;

69 
shm©t_t
 
shm_«âch
;

70 
__unu£d4
;

71 
__unu£d5
;

74 #ifde‡
__USE_MISC


77 
	#SHM_STAT
 13

	)

78 
	#SHM_INFO
 14

	)

81 
	#SHM_DEST
 01000

	)

82 
	#SHM_LOCKED
 02000

	)

83 
	#SHM_HUGETLB
 04000

	)

84 
	#SHM_NORESERVE
 010000

	)

86 
	sshmöfo


88 
shmmax
;

89 
shmmö
;

90 
shmmni
;

91 
shm£g
;

92 
shmÆl
;

93 
__unu£d1
;

94 
__unu£d2
;

95 
__unu£d3
;

96 
__unu£d4
;

99 
	sshm_öfo


101 
u£d_ids
;

102 
shm_tŸ
;

103 
shm_rss
;

104 
shm_swp
;

105 
sw≠_©ãm±s
;

106 
sw≠_suc˚s£s
;

111 
__END_DECLS


	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

236 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

239 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

245 
	smsghdr


247 *
	mmsg_«me
;

248 
sockÀn_t
 
	mmsg_«mñí
;

250 
iovec
 *
	mmsg_iov
;

251 
size_t
 
	mmsg_iovÀn
;

253 *
	mmsg_c⁄åﬁ
;

254 
size_t
 
	mmsg_c⁄åﬁÀn
;

259 
	mmsg_Êags
;

263 
	scmsghdr


265 
size_t
 
	mcmsg_Àn
;

270 
	mcmsg_Àvñ
;

271 
	mcmsg_ty≥
;

272 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

273 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

278 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

279 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

281 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

283 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

284 
	#CMSG_FIRSTHDR
(
mhdr
) \

285 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

286 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

287 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

288 & (
size_t
Ë~( (size_tË- 1))

	)

289 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

290 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

291 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

293 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

294 
cmsghdr
 *
__cmsg
Ë
__THROW
;

295 #ifde‡
__USE_EXTERN_INLINES


296 #i‚de‡
_EXTERN_INLINE


297 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

299 
_EXTERN_INLINE
 
cmsghdr
 *

300 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

302 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

306 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

307 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

308 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


309 + 
__mhdr
->
msg_c⁄åﬁÀn
)

310 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

311 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

314  
__cmsg
;

315 
	}
}

322 
	mSCM_RIGHTS
 = 0x01

323 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

324 #ifde‡
__USE_GNU


325 , 
	mSCM_CREDENTIALS
 = 0x02

326 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

330 #ifde‡
__USE_GNU


332 
	su¸ed


334 
pid_t
 
	mpid
;

335 
uid_t
 
	muid
;

336 
gid_t
 
	mgid
;

341 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


342 #i‚de‡
FIOGETOWN


343 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

345 #i‚de‡
FIOSETOWN


346 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

348 #i‚de‡
SIOCATMARK


349 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

351 #i‚de‡
SIOCGPGRP


352 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

354 #i‚de‡
SIOCGSTAMP


355 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

357 #i‚de‡
SIOCGSTAMPNS


358 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

360 #i‚de‡
SIOCSPGRP


361 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

366 
	~<asm/sockë.h
>

368 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


369 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


370 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


371 #unde‡
FIOGETOWN


373 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


374 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


375 #unde‡
FIOSETOWN


377 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


378 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


379 #unde‡
SIOCATMARK


381 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


382 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


383 #unde‡
SIOCGPGRP


385 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


386 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


387 #unde‡
SIOCGSTAMP


389 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


390 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


391 #unde‡
SIOCGSTAMPNS


393 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


394 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


395 #unde‡
SIOCSPGRP


400 
	slögî


402 
	ml_⁄off
;

403 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/stropts.h

19 #i‚de‡
_STROPTS_H


23 #i‚de‡
_BITS_STROPTS_H


24 
	#_BITS_STROPTS_H
 1

	)

26 
	~<bôs/ty≥s.h
>

29 
	#__SID
 ('S' << 8)

	)

31 
	#I_NREAD
 (
__SID
 | 1Ë

	)

33 
	#I_PUSH
 (
__SID
 | 2Ë

	)

35 
	#I_POP
 (
__SID
 | 3Ë

	)

37 
	#I_LOOK
 (
__SID
 | 4Ë

	)

40 
	#I_FLUSH
 (
__SID
 | 5Ë

	)

41 
	#I_SRDOPT
 (
__SID
 | 6Ë

	)

42 
	#I_GRDOPT
 (
__SID
 | 7Ë

	)

43 
	#I_STR
 (
__SID
 | 8Ë

	)

45 
	#I_SETSIG
 (
__SID
 | 9Ë

	)

47 
	#I_GETSIG
 (
__SID
 |10Ë

	)

50 
	#I_FIND
 (
__SID
 |11Ë

	)

53 
	#I_LINK
 (
__SID
 |12Ë

	)

54 
	#I_UNLINK
 (
__SID
 |13Ë

	)

55 
	#I_PEEK
 (
__SID
 |15Ë

	)

59 
	#I_FDINSERT
 (
__SID
 |16Ë

	)

62 
	#I_SENDFD
 (
__SID
 |17Ë

	)

66 
	#I_RECVFD
 (
__SID
 |14Ë

	)

67 
	#I_SWROPT
 (
__SID
 |19Ë

	)

68 
	#I_GWROPT
 (
__SID
 |20Ë

	)

69 
	#I_LIST
 (
__SID
 |21Ë

	)

71 
	#I_PLINK
 (
__SID
 |22Ë

	)

73 
	#I_PUNLINK
 (
__SID
 |23Ë

	)

75 
	#I_FLUSHBAND
 (
__SID
 |28Ë

	)

76 
	#I_CKBAND
 (
__SID
 |29Ë

	)

79 
	#I_GETBAND
 (
__SID
 |30Ë

	)

81 
	#I_ATMARK
 (
__SID
 |31Ë

	)

84 
	#I_SETCLTIME
 (
__SID
 |32Ë

	)

87 
	#I_GETCLTIME
 (
__SID
 |33Ë

	)

88 
	#I_CANPUT
 (
__SID
 |34Ë

	)

92 
	#FMNAMESZ
 8

	)

95 
	#FLUSHR
 0x01

	)

96 
	#FLUSHW
 0x02

	)

97 
	#FLUSHRW
 0x03

	)

98 #ifde‡
__USE_GNU


99 
	#FLUSHBAND
 0x04

	)

103 
	#S_INPUT
 0x0001

	)

105 
	#S_HIPRI
 0x0002

	)

106 
	#S_OUTPUT
 0x0004

	)

108 
	#S_MSG
 0x0008

	)

111 
	#S_ERROR
 0x0010

	)

112 
	#S_HANGUP
 0x0020

	)

113 
	#S_RDNORM
 0x0040

	)

114 
	#S_WRNORM
 
S_OUTPUT


	)

115 
	#S_RDBAND
 0x0080

	)

117 
	#S_WRBAND
 0x0100

	)

119 
	#S_BANDURG
 0x0200

	)

125 
	#RS_HIPRI
 0x01

	)

128 
	#RNORM
 0x0000

	)

129 
	#RMSGD
 0x0001

	)

130 
	#RMSGN
 0x0002

	)

131 
	#RPROTDAT
 0x0004

	)

133 
	#RPROTDIS
 0x0008

	)

135 
	#RPROTNORM
 0x0010

	)

138 #ifde‡
__USE_GNU


139 
	#RPROTMASK
 0x001C

	)

143 
	#SNDZERO
 0x001

	)

145 #ifde‡
__USE_GNU


146 
	#SNDPIPE
 0x002

	)

151 
	#ANYMARK
 0x01

	)

152 
	#LASTMARK
 0x02

	)

156 #ifde‡
__USE_GNU


157 
	#MUXID_ALL
 (-1Ë

	)

163 
	#MSG_HIPRI
 0x01

	)

164 
	#MSG_ANY
 0x02

	)

165 
	#MSG_BAND
 0x04

	)

168 
	#MORECTL
 1

	)

170 
	#MOREDATA
 2

	)

174 
	sb™döfo


176 
	mbi_¥i
;

177 
	mbi_Êag
;

180 
	s°rbuf


182 
	mmaxÀn
;

183 
	mÀn
;

184 *
	mbuf
;

187 
	s°Ωìk


189 
°rbuf
 
	m˘lbuf
;

190 
°rbuf
 
	md©abuf
;

191 
t_usˇœr_t
 
	mÊags
;

194 
	s°rfdö£π


196 
°rbuf
 
	m˘lbuf
;

197 
°rbuf
 
	md©abuf
;

198 
t_usˇœr_t
 
	mÊags
;

199 
	mfûdes
;

200 
	moff£t
;

203 
	s°rio˘l


205 
	mic_cmd
;

206 
	mic_timout
;

207 
	mic_Àn
;

208 *
	mic_dp
;

211 
	s°ºecvfd


213 
	mfd
;

214 
uid_t
 
	muid
;

215 
gid_t
 
	mgid
;

216 
	m__fûl
[8];

220 
	s°r_mli°


222 
	ml_«me
[
FMNAMESZ
 + 1];

225 
	s°r_li°


227 
	m¶_nmods
;

228 
°r_mli°
 *
	m¶_modli°
;

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

21 #i‚de‡
_TERMIOS_H


25 
	tcc_t
;

26 
	t•ìd_t
;

27 
	ttcÊag_t
;

29 
	#NCCS
 32

	)

30 
	sãrmios


32 
tcÊag_t
 
	mc_iÊag
;

33 
tcÊag_t
 
	mc_oÊag
;

34 
tcÊag_t
 
	mc_cÊag
;

35 
tcÊag_t
 
	mc_lÊag
;

36 
cc_t
 
	mc_löe
;

37 
cc_t
 
	mc_cc
[
NCCS
];

38 
•ìd_t
 
	mc_i•ìd
;

39 
•ìd_t
 
	mc_o•ìd
;

40 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

41 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

45 
	#VINTR
 0

	)

46 
	#VQUIT
 1

	)

47 
	#VERASE
 2

	)

48 
	#VKILL
 3

	)

49 
	#VEOF
 4

	)

50 
	#VTIME
 5

	)

51 
	#VMIN
 6

	)

52 
	#VSWTC
 7

	)

53 
	#VSTART
 8

	)

54 
	#VSTOP
 9

	)

55 
	#VSUSP
 10

	)

56 
	#VEOL
 11

	)

57 
	#VREPRINT
 12

	)

58 
	#VDISCARD
 13

	)

59 
	#VWERASE
 14

	)

60 
	#VLNEXT
 15

	)

61 
	#VEOL2
 16

	)

64 
	#IGNBRK
 0000001

	)

65 
	#BRKINT
 0000002

	)

66 
	#IGNPAR
 0000004

	)

67 
	#PARMRK
 0000010

	)

68 
	#INPCK
 0000020

	)

69 
	#ISTRIP
 0000040

	)

70 
	#INLCR
 0000100

	)

71 
	#IGNCR
 0000200

	)

72 
	#ICRNL
 0000400

	)

73 
	#IUCLC
 0001000

	)

74 
	#IXON
 0002000

	)

75 
	#IXANY
 0004000

	)

76 
	#IXOFF
 0010000

	)

77 
	#IMAXBEL
 0020000

	)

78 
	#IUTF8
 0040000

	)

81 
	#OPOST
 0000001

	)

82 
	#OLCUC
 0000002

	)

83 
	#ONLCR
 0000004

	)

84 
	#OCRNL
 0000010

	)

85 
	#ONOCR
 0000020

	)

86 
	#ONLRET
 0000040

	)

87 
	#OFILL
 0000100

	)

88 
	#OFDEL
 0000200

	)

89 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


90 
	#NLDLY
 0000400

	)

91 
	#NL0
 0000000

	)

92 
	#NL1
 0000400

	)

93 
	#CRDLY
 0003000

	)

94 
	#CR0
 0000000

	)

95 
	#CR1
 0001000

	)

96 
	#CR2
 0002000

	)

97 
	#CR3
 0003000

	)

98 
	#TABDLY
 0014000

	)

99 
	#TAB0
 0000000

	)

100 
	#TAB1
 0004000

	)

101 
	#TAB2
 0010000

	)

102 
	#TAB3
 0014000

	)

103 
	#BSDLY
 0020000

	)

104 
	#BS0
 0000000

	)

105 
	#BS1
 0020000

	)

106 
	#FFDLY
 0100000

	)

107 
	#FF0
 0000000

	)

108 
	#FF1
 0100000

	)

111 
	#VTDLY
 0040000

	)

112 
	#VT0
 0000000

	)

113 
	#VT1
 0040000

	)

115 #ifde‡
__USE_MISC


116 
	#XTABS
 0014000

	)

120 #ifde‡
__USE_MISC


121 
	#CBAUD
 0010017

	)

123 
	#B0
 0000000

	)

124 
	#B50
 0000001

	)

125 
	#B75
 0000002

	)

126 
	#B110
 0000003

	)

127 
	#B134
 0000004

	)

128 
	#B150
 0000005

	)

129 
	#B200
 0000006

	)

130 
	#B300
 0000007

	)

131 
	#B600
 0000010

	)

132 
	#B1200
 0000011

	)

133 
	#B1800
 0000012

	)

134 
	#B2400
 0000013

	)

135 
	#B4800
 0000014

	)

136 
	#B9600
 0000015

	)

137 
	#B19200
 0000016

	)

138 
	#B38400
 0000017

	)

139 #ifde‡
__USE_MISC


140 
	#EXTA
 
B19200


	)

141 
	#EXTB
 
B38400


	)

143 
	#CSIZE
 0000060

	)

144 
	#CS5
 0000000

	)

145 
	#CS6
 0000020

	)

146 
	#CS7
 0000040

	)

147 
	#CS8
 0000060

	)

148 
	#CSTOPB
 0000100

	)

149 
	#CREAD
 0000200

	)

150 
	#PARENB
 0000400

	)

151 
	#PARODD
 0001000

	)

152 
	#HUPCL
 0002000

	)

153 
	#CLOCAL
 0004000

	)

154 #ifde‡
__USE_MISC


155 
	#CBAUDEX
 0010000

	)

157 
	#B57600
 0010001

	)

158 
	#B115200
 0010002

	)

159 
	#B230400
 0010003

	)

160 
	#B460800
 0010004

	)

161 
	#B500000
 0010005

	)

162 
	#B576000
 0010006

	)

163 
	#B921600
 0010007

	)

164 
	#B1000000
 0010010

	)

165 
	#B1152000
 0010011

	)

166 
	#B1500000
 0010012

	)

167 
	#B2000000
 0010013

	)

168 
	#B2500000
 0010014

	)

169 
	#B3000000
 0010015

	)

170 
	#B3500000
 0010016

	)

171 
	#B4000000
 0010017

	)

172 
	#__MAX_BAUD
 
B4000000


	)

173 #ifde‡
__USE_MISC


174 
	#CIBAUD
 002003600000

	)

175 
	#CMSPAR
 010000000000

	)

176 
	#CRTSCTS
 020000000000

	)

180 
	#ISIG
 0000001

	)

181 
	#ICANON
 0000002

	)

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


183 
	#XCASE
 0000004

	)

185 
	#ECHO
 0000010

	)

186 
	#ECHOE
 0000020

	)

187 
	#ECHOK
 0000040

	)

188 
	#ECHONL
 0000100

	)

189 
	#NOFLSH
 0000200

	)

190 
	#TOSTOP
 0000400

	)

191 #ifde‡
__USE_MISC


192 
	#ECHOCTL
 0001000

	)

193 
	#ECHOPRT
 0002000

	)

194 
	#ECHOKE
 0004000

	)

195 
	#FLUSHO
 0010000

	)

196 
	#PENDIN
 0040000

	)

198 
	#IEXTEN
 0100000

	)

201 
	#TCOOFF
 0

	)

202 
	#TCOON
 1

	)

203 
	#TCIOFF
 2

	)

204 
	#TCION
 3

	)

207 
	#TCIFLUSH
 0

	)

208 
	#TCOFLUSH
 1

	)

209 
	#TCIOFLUSH
 2

	)

212 
	#TCSANOW
 0

	)

213 
	#TCSADRAIN
 1

	)

214 
	#TCSAFLUSH
 2

	)

217 
	#_IOT_ãrmios
 \

218 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/bits/xtitypes.h

20 #i‚de‡
_STROPTS_H


24 #i‚de‡
_BITS_XTITYPES_H


25 
	#_BITS_XTITYPES_H
 1

	)

27 
	~<bôs/ty≥s.h
>

30 
__SLONG32_TYPE
 
	t__t_sˇœr_t
;

31 
__ULONG32_TYPE
 
	t__t_usˇœr_t
;

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/paths.h

32 #i‚de‡
_PATHS_H_


33 
	#_PATHS_H_


	)

36 
	#_PATH_DEFPATH
 "/u§/bö:/bö"

	)

38 
	#_PATH_STDPATH
 \

39 "/u§/bö:/bö:/u§/sbö:/sbö"

	)

41 
	#_PATH_BSHELL
 "/bö/sh"

	)

42 
	#_PATH_CONSOLE
 "/dev/c⁄sﬁe"

	)

43 
	#_PATH_CSHELL
 "/bö/csh"

	)

44 
	#_PATH_DEVDB
 "/v¨/run/dev.db"

	)

45 
	#_PATH_DEVNULL
 "/dev/nuŒ"

	)

46 
	#_PATH_DRUM
 "/dev/drum"

	)

47 
	#_PATH_GSHADOW
 "/ëc/gshadow"

	)

48 
	#_PATH_KLOG
 "/¥oc/kmsg"

	)

49 
	#_PATH_KMEM
 "/dev/kmem"

	)

50 
	#_PATH_LASTLOG
 "/v¨/log/œ°log"

	)

51 
	#_PATH_MAILDIR
 "/v¨/maû"

	)

52 
	#_PATH_MAN
 "/u§/sh¨e/m™"

	)

53 
	#_PATH_MEM
 "/dev/mem"

	)

54 
	#_PATH_MNTTAB
 "/ëc/f°ab"

	)

55 
	#_PATH_MOUNTED
 "/ëc/mèb"

	)

56 
	#_PATH_NOLOGIN
 "/ëc/nﬁogö"

	)

57 
	#_PATH_PRESERVE
 "/v¨/lib"

	)

58 
	#_PATH_RWHODIR
 "/v¨/•oﬁ/rwho"

	)

59 
	#_PATH_SENDMAIL
 "/u§/sbö/£ndmaû"

	)

60 
	#_PATH_SHADOW
 "/ëc/shadow"

	)

61 
	#_PATH_SHELLS
 "/ëc/shñls"

	)

62 
	#_PATH_TTY
 "/dev/ây"

	)

63 
	#_PATH_UNIX
 "/boŸ/vmlöux"

	)

64 
	#_PATH_UTMP
 "/v¨/run/utmp"

	)

65 
	#_PATH_VI
 "/u§/bö/vi"

	)

66 
	#_PATH_WTMP
 "/v¨/log/wtmp"

	)

69 
	#_PATH_DEV
 "/dev/"

	)

70 
	#_PATH_TMP
 "/tmp/"

	)

71 
	#_PATH_VARDB
 "/v¨/lib/misc/"

	)

72 
	#_PATH_VARRUN
 "/v¨/run/"

	)

73 
	#_PATH_VARTMP
 "/v¨/tmp/"

	)

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/poll.h

20 #i‚def 
_SYS_POLL_H


21 
	#_SYS_POLL_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/pﬁl.h
>

27 #ifde‡
__USE_GNU


29 
	~<bôs/sig£t.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

37 
	tnfds_t
;

40 
	spﬁlfd


42 
	mfd
;

43 
	mevíts
;

44 
	mªvíts
;

48 
__BEGIN_DECLS


58 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

60 #ifde‡
__USE_GNU


67 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

68 
__c⁄°
 
time•ec
 *
__timeout
,

69 
__c⁄°
 
__sig£t_t
 *
__ss
);

72 
	g__END_DECLS


	@/usr/include/sys/syslog.h

32 #i‚de‡
_SYS_SYSLOG_H


33 
	#_SYS_SYSLOG_H
 1

	)

35 
	~<„©uªs.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

40 
	~<bôs/sy¶og-∑th.h
>

51 
	#LOG_EMERG
 0

	)

52 
	#LOG_ALERT
 1

	)

53 
	#LOG_CRIT
 2

	)

54 
	#LOG_ERR
 3

	)

55 
	#LOG_WARNING
 4

	)

56 
	#LOG_NOTICE
 5

	)

57 
	#LOG_INFO
 6

	)

58 
	#LOG_DEBUG
 7

	)

60 
	#LOG_PRIMASK
 0x07

	)

62 
	#LOG_PRI
(
p
Ë(’Ë& 
LOG_PRIMASK
)

	)

63 
	#LOG_MAKEPRI
(
Ác
, 
¥i
Ë(((ÁcË<< 3Ë| (¥i))

	)

65 #ifde‡
SYSLOG_NAMES


66 
	#INTERNAL_NOPRI
 0x10

	)

68 
	#INTERNAL_MARK
 
	`LOG_MAKEPRI
(
LOG_NFACILITIES
, 0)

	)

69 
	s_code
 {

70 *
	mc_«me
;

71 
	mc_vÆ
;

72 } 
	tCODE
;

74 
CODE
 
	g¥i‹ôy«mes
[] =

76 { "Æît", 
LOG_ALERT
 },

77 { "¸ô", 
LOG_CRIT
 },

78 { "debug", 
LOG_DEBUG
 },

79 { "emîg", 
LOG_EMERG
 },

80 { "îr", 
LOG_ERR
 },

81 { "îr‹", 
LOG_ERR
 },

82 { "öfo", 
LOG_INFO
 },

83 { "n⁄e", 
INTERNAL_NOPRI
 },

84 { "nŸi˚", 
LOG_NOTICE
 },

85 { "∑nic", 
LOG_EMERG
 },

86 { "w¨n", 
LOG_WARNING
 },

87 { "w¨nög", 
LOG_WARNING
 },

88 { 
NULL
, -1 }

93 
	#LOG_KERN
 (0<<3Ë

	)

94 
	#LOG_USER
 (1<<3Ë

	)

95 
	#LOG_MAIL
 (2<<3Ë

	)

96 
	#LOG_DAEMON
 (3<<3Ë

	)

97 
	#LOG_AUTH
 (4<<3Ë

	)

98 
	#LOG_SYSLOG
 (5<<3Ë

	)

99 
	#LOG_LPR
 (6<<3Ë

	)

100 
	#LOG_NEWS
 (7<<3Ë

	)

101 
	#LOG_UUCP
 (8<<3Ë

	)

102 
	#LOG_CRON
 (9<<3Ë

	)

103 
	#LOG_AUTHPRIV
 (10<<3Ë

	)

104 
	#LOG_FTP
 (11<<3Ë

	)

107 
	#LOG_LOCAL0
 (16<<3Ë

	)

108 
	#LOG_LOCAL1
 (17<<3Ë

	)

109 
	#LOG_LOCAL2
 (18<<3Ë

	)

110 
	#LOG_LOCAL3
 (19<<3Ë

	)

111 
	#LOG_LOCAL4
 (20<<3Ë

	)

112 
	#LOG_LOCAL5
 (21<<3Ë

	)

113 
	#LOG_LOCAL6
 (22<<3Ë

	)

114 
	#LOG_LOCAL7
 (23<<3Ë

	)

116 
	#LOG_NFACILITIES
 24

	)

117 
	#LOG_FACMASK
 0x03f8

	)

119 
	#LOG_FAC
(
p
Ë((’Ë& 
LOG_FACMASK
Ë>> 3)

	)

121 #ifde‡
SYSLOG_NAMES


122 
CODE
 
	gÁcûôy«mes
[] =

124 { "auth", 
LOG_AUTH
 },

125 { "auth¥iv", 
LOG_AUTHPRIV
 },

126 { "¸⁄", 
LOG_CRON
 },

127 { "d´m⁄", 
LOG_DAEMON
 },

128 { "·p", 
LOG_FTP
 },

129 { "kîn", 
LOG_KERN
 },

130 { "Õr", 
LOG_LPR
 },

131 { "maû", 
LOG_MAIL
 },

132 { "m¨k", 
INTERNAL_MARK
 },

133 { "√ws", 
LOG_NEWS
 },

134 { "£curôy", 
LOG_AUTH
 },

135 { "sy¶og", 
LOG_SYSLOG
 },

136 { "u£r", 
LOG_USER
 },

137 { "uu˝", 
LOG_UUCP
 },

138 { "loˇl0", 
LOG_LOCAL0
 },

139 { "loˇl1", 
LOG_LOCAL1
 },

140 { "loˇl2", 
LOG_LOCAL2
 },

141 { "loˇl3", 
LOG_LOCAL3
 },

142 { "loˇl4", 
LOG_LOCAL4
 },

143 { "loˇl5", 
LOG_LOCAL5
 },

144 { "loˇl6", 
LOG_LOCAL6
 },

145 { "loˇl7", 
LOG_LOCAL7
 },

146 { 
NULL
, -1 }

153 
	#LOG_MASK
(
¥i
Ë(1 << (¥i)Ë

	)

154 
	#LOG_UPTO
(
¥i
Ë((1 << (’ri)+1)Ë- 1Ë

	)

162 
	#LOG_PID
 0x01

	)

163 
	#LOG_CONS
 0x02

	)

164 
	#LOG_ODELAY
 0x04

	)

165 
	#LOG_NDELAY
 0x08

	)

166 
	#LOG_NOWAIT
 0x10

	)

167 
	#LOG_PERROR
 0x20

	)

169 
__BEGIN_DECLS


175 
˛o£log
 ();

181 
›ílog
 (
__c⁄°
 *
__idít
, 
__›ti⁄
, 
__Ácûôy
);

184 
	$£éogmask
 (
__mask
Ë
__THROW
;

190 
	$sy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, ...)

191 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

193 #ifde‡
__USE_BSD


200 
	$vsy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, 
__gnuc_va_li°
 
__≠
)

201 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

206 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


207 
	~<bôs/sy¶og.h
>

209 #ifde‡
__LDBL_COMPAT


210 
	~<bôs/sy¶og-ldbl.h
>

213 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/poll.h

19 #i‚de‡
_SYS_POLL_H


26 
	#POLLIN
 0x001

	)

27 
	#POLLPRI
 0x002

	)

28 
	#POLLOUT
 0x004

	)

30 #ifde‡
__USE_XOPEN


32 
	#POLLRDNORM
 0x040

	)

33 
	#POLLRDBAND
 0x080

	)

34 
	#POLLWRNORM
 0x100

	)

35 
	#POLLWRBAND
 0x200

	)

38 #ifde‡
__USE_GNU


40 
	#POLLMSG
 0x400

	)

41 
	#POLLREMOVE
 0x1000

	)

42 
	#POLLRDHUP
 0x2000

	)

48 
	#POLLERR
 0x008

	)

49 
	#POLLHUP
 0x010

	)

50 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/syslog-ldbl.h

20 #i‚de‡
_SYS_SYSLOG_H


24 
	$__LDBL_REDIR_DECL
 (
sy¶og
)

26 #ifde‡
__USE_BSD


27 
	$__LDBL_REDIR_DECL
 (
vsy¶og
)

30 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


31 
	$__LDBL_REDIR_DECL
 (
__sy¶og_chk
)

33 #ifde‡
__USE_BSD


34 
	$__LDBL_REDIR_DECL
 (
__vsy¶og_chk
)

	@/usr/include/bits/syslog-path.h

20 #i‚de‡
_SYS_SYSLOG_H


24 #i‚de‡
_BITS_SYSLOG_PATH_H


25 
	#_BITS_SYSLOG_PATH_H
 1

	)

27 
	#_PATH_LOG
 "/dev/log"

	)

	@/usr/include/bits/syslog.h

20 #i‚de‡
_SYS_SYSLOG_H


25 
	$__sy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
, ...)

26 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

28 #ifde‡
__va_¨g_∑ck


29 
__exã∫_Æways_ölöe
 

30 
	$sy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, ...)

32  
	`__sy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

33 
	}
}

34 #ñi‡!
deföed
 
__˝lu•lus


35 
	#sy¶og
(
¥i
, ...) \

36 
	`__sy¶og_chk
 (
¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

40 #ifde‡
__USE_BSD


41 
	$__vsy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
,

42 
__gnuc_va_li°
 
__≠
)

43 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

45 
__exã∫_Æways_ölöe
 

46 
	$vsy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, 
__gnuc_va_li°
 
__≠
)

48  
	`__vsy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

49 
	}
}

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 
	#TIOCSRS485
 0x542F

	)

66 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

67 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

68 
	#TCGETX
 0x5432

	)

69 
	#TCSETX
 0x5433

	)

70 
	#TCSETXF
 0x5434

	)

71 
	#TCSETXW
 0x5435

	)

73 
	#FIONCLEX
 0x5450

	)

74 
	#FIOCLEX
 0x5451

	)

75 
	#FIOASYNC
 0x5452

	)

76 
	#TIOCSERCONFIG
 0x5453

	)

77 
	#TIOCSERGWILD
 0x5454

	)

78 
	#TIOCSERSWILD
 0x5455

	)

79 
	#TIOCGLCKTRMIOS
 0x5456

	)

80 
	#TIOCSLCKTRMIOS
 0x5457

	)

81 
	#TIOCSERGSTRUCT
 0x5458

	)

82 
	#TIOCSERGETLSR
 0x5459

	)

83 
	#TIOCSERGETMULTI
 0x545A

	)

84 
	#TIOCSERSETMULTI
 0x545B

	)

86 
	#TIOCMIWAIT
 0x545C

	)

87 
	#TIOCGICOUNT
 0x545D

	)

93 #i‚de‡
FIOQSIZE


94 
	#TIOCGHAYESESP
 0x545E

	)

95 
	#TIOCSHAYESESP
 0x545F

	)

96 
	#FIOQSIZE
 0x5460

	)

100 
	#TIOCPKT_DATA
 0

	)

101 
	#TIOCPKT_FLUSHREAD
 1

	)

102 
	#TIOCPKT_FLUSHWRITE
 2

	)

103 
	#TIOCPKT_STOP
 4

	)

104 
	#TIOCPKT_START
 8

	)

105 
	#TIOCPKT_NOSTOP
 16

	)

106 
	#TIOCPKT_DOSTOP
 32

	)

108 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@
1
.
1
/usr/include
401
7946
advio/catgetmsg.c
advio/devzero.c
advio/mcopy.c
advio/nonblockw.c
advio/pendlock.c
call/call.c
call/call.h
call/escape.c
call/loop.poll.c
call/main.c
call/put.c
call/take.c
call/takeput.c
calld/calld.h
calld/childdial.c
calld/cliargs.c
calld/client.c
calld/ctlstr.c
calld/debug.c
calld/devfile.c
calld/dialfile.c
calld/expectstr.c
calld/lock.c
calld/loop.c
calld/main.c
calld/request.c
calld/sendstr.c
calld/sigchld.c
calld/sysfile.c
calld/ttydial.c
calld/ttyopen.c
daemons/init.c
daemons/lockfile.c
daemons/reread.c
daemons/reread2.c
daemons/single.c
datafiles/getpwnam.c
db/apue_db.h
db/db.c
db/t4.c
environ/cmd1.c
environ/cmd2.c
environ/doatexit.c
environ/getrlimit.c
environ/hello1.c
environ/opendata.c
environ/testjmp.c
exercises/asyncsocket.c
exercises/getlogin.c
exercises/getpw44bsd.c
exercises/getpwsvr4.c
exercises/goodexit.c
exercises/openmax.c
exercises/prtime.c
exercises/sizepipe.c
exercises/sleep.c
exercises/sleepus_poll.c
exercises/sleepus_select.c
file/access.c
file/cdpwd.c
file/changemod.c
file/devrdev.c
file/fileflags.c
file/filetype.c
file/ftw4.c
file/hello.c
file/hole.c
file/longpath.c
file/ls1.c
file/mycd.c
file/seek.c
file/testerror.c
file/uidgid.c
file/umask.c
file/unlink.c
file/zap.c
include/apue.h
ipc/add2.c
ipc/add2stdio.c
ipc/fifo1.c
ipc/myuclc.c
ipc/pipe1.c
ipc/pipe2.c
ipc/pipe4.c
ipc/popen1.c
ipc/popen2.c
ipc/spipe4.c
ipc/tellwait.c
ipc/tshm.c
ipp/ipp.h
ipp/print.c
ipp/print.h
ipp/printd.c
ipp/util.c
lib/bsd_ptyopen.c
lib/bufargs.c
lib/cliconn.c
lib/clrfl.c
lib/daemonize.c
lib/error.c
lib/errorlog.c
lib/linux_ptyopen.c
lib/lockreg.c
lib/locktest.c
lib/nspipe.c
lib/openmax.c
lib/pathalloc.c
lib/popen.c
lib/prexit.c
lib/prmask.c
lib/ptyfork.c
lib/readn.c
lib/recvfd.c
lib/semaph.c
lib/senderr.c
lib/sendfd.c
lib/servaccept.c
lib/servlisten.c
lib/setfl.c
lib/signal.c
lib/signalintr.c
lib/sleep.c
lib/sleepus.c
lib/spipe.c
lib/tellwait.c
lib/ttymodes.c
lib/writen.c
lock/deadlock.c
lock/mandatory.c
mycat/fgetsfputs.c
mycat/getcputc.c
mycat/mycat.c
open.fe/main.c
open.fe/open.c
open.fe/open.h
open/open.c
open/open.h
opend.fe/cliargs.c
opend.fe/main.c
opend.fe/opend.h
opend.fe/request.c
opend/client.c
opend/loop.poll.c
opend/loop.select.c
opend/main.c
opend/opend.h
opend/request.c
proc/echoall.c
proc/echoarg.c
proc/exec1.c
proc/exec2.c
proc/fork1.c
proc/fork2.c
proc/pracct.c
proc/pruids.c
proc/shell1.c
proc/shell2.c
proc/system.c
proc/systest1.c
proc/systest2.c
proc/systest3.c
proc/tellwait1.c
proc/tellwait2.c
proc/test1.c
proc/times1.c
proc/vfork1.c
proc/vfork3.c
proc/wait1.c
proc/zombie.c
pty/driver.c
pty/loop.c
pty/main.c
sess/orphan3.c
signals/abort.c
signals/child.c
signals/critical.c
signals/mask.c
signals/read1.c
signals/read2.c
signals/reenter.c
signals/setops.c
signals/sigtstp.c
signals/sigusr.c
signals/sleep1.c
signals/sleep2.c
signals/suspend1.c
signals/suspend2.c
signals/system.c
signals/tsleep2.c
sockets/bindunix.c
sockets/bo.c
sockets/clconn.c
sockets/cliconn.c
sockets/findsvc.c
sockets/initsrv1.c
sockets/initsrv2.c
sockets/recvfd.c
sockets/recvfd2.c
sockets/ruptime-dg.c
sockets/ruptime.c
sockets/ruptimed-dg.c
sockets/ruptimed-fd.c
sockets/ruptimed.c
sockets/sendfd.c
sockets/sendfd2.c
sockets/servaccept.c
sockets/servlisten.c
sockets/spipe.c
std/conf.c
std/options.c
stdio/buf.c
stdio/tempfiles.c
stdio/tempnam.c
streams/cliconn.c
streams/isastream.c
streams/ptyopen.c
streams/recvfd.c
streams/sendfd.c
streams/servaccept.c
streams/servlisten.c
streams/spipe.c
streams/strlist.c
streams/t_isastream.c
termios/csize.c
termios/ctermid.c
termios/getpass.c
termios/isatty.c
termios/settty.c
termios/t_getpass.c
termios/t_isatty.c
termios/t_raw.c
termios/t_ttyname.c
termios/ttyname.c
termios/winch.c
threadctl/atfork.c
threadctl/detach.c
threadctl/getenv1.c
threadctl/getenv2.c
threadctl/getenv3.c
threadctl/suspend.c
threadctl/timeout.c
threads/badexit2.c
threads/cleanup.c
threads/condvar.c
threads/exitstatus.c
threads/mutex1.c
threads/mutex2.c
threads/mutex3.c
threads/rwlock.c
threads/threadid.c
/usr/include/arpa/inet.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/grp.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/linux/limits.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/pwd.h
/usr/include/setjmp.h
/usr/include/shadow.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/stropts.h
/usr/include/sys/acct.h
/usr/include/sys/ioctl.h
/usr/include/sys/ipc.h
/usr/include/sys/mman.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sem.h
/usr/include/sys/shm.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/termios.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/uio.h
/usr/include/sys/un.h
/usr/include/sys/wait.h
/usr/include/syslog.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/in.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/mman.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/sem.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/shm.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/stropts.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/uio.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/bits/xtitypes.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/paths.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/sys/cdefs.h
/usr/include/sys/poll.h
/usr/include/sys/syslog.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/poll.h
/usr/include/bits/predefs.h
/usr/include/bits/sched.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syslog-ldbl.h
/usr/include/bits/syslog-path.h
/usr/include/bits/syslog.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/sockios.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/linux/ioctl.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/asm/ioctl.h
/usr/include/asm-generic/ioctl.h
